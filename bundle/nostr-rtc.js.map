{"version":3,"file":"nostr-rtc.js","mappings":"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","sources":["webpack://NostrRTC/webpack/universalModuleDefinition","webpack://NostrRTC/./node_modules/@nostr-dev-kit/ndk/node_modules/debug/src/browser.js","webpack://NostrRTC/./node_modules/@nostr-dev-kit/ndk/node_modules/debug/src/common.js","webpack://NostrRTC/./node_modules/@nostr-dev-kit/ndk/node_modules/ms/index.js","webpack://NostrRTC/./node_modules/light-bolt11-decoder/bolt11.js","webpack://NostrRTC/./node_modules/light-bolt11-decoder/node_modules/@scure/base/lib/index.js","webpack://NostrRTC/./node_modules/tseep/lib/ee.js","webpack://NostrRTC/./node_modules/tseep/lib/index.js","webpack://NostrRTC/./node_modules/tseep/lib/task-collection/bake-collection.js","webpack://NostrRTC/./node_modules/tseep/lib/task-collection/index.js","webpack://NostrRTC/./node_modules/tseep/lib/task-collection/task-collection.js","webpack://NostrRTC/./node_modules/tseep/lib/task-collection/utils.js","webpack://NostrRTC/./node_modules/tseep/lib/types.js","webpack://NostrRTC/./node_modules/tseep/lib/utils.js","webpack://NostrRTC/./node_modules/typescript-lru-cache/dist/LRUCache.js","webpack://NostrRTC/./node_modules/typescript-lru-cache/dist/LRUCacheNode.js","webpack://NostrRTC/./node_modules/typescript-lru-cache/dist/index.js","webpack://NostrRTC/webpack/bootstrap","webpack://NostrRTC/webpack/runtime/define property getters","webpack://NostrRTC/webpack/runtime/global","webpack://NostrRTC/webpack/runtime/hasOwnProperty shorthand","webpack://NostrRTC/webpack/runtime/make namespace object","webpack://NostrRTC/./node_modules/@noble/curves/node_modules/@noble/hashes/esm/_assert.js","webpack://NostrRTC/./node_modules/@noble/curves/node_modules/@noble/hashes/esm/crypto.js","webpack://NostrRTC/./node_modules/@noble/curves/node_modules/@noble/hashes/esm/utils.js","webpack://NostrRTC/./node_modules/@noble/curves/node_modules/@noble/hashes/esm/_sha2.js","webpack://NostrRTC/./node_modules/@noble/curves/node_modules/@noble/hashes/esm/sha256.js","webpack://NostrRTC/./node_modules/@noble/curves/esm/abstract/utils.js","webpack://NostrRTC/./node_modules/@noble/curves/esm/abstract/modular.js","webpack://NostrRTC/./node_modules/@noble/curves/node_modules/@noble/hashes/esm/hmac.js","webpack://NostrRTC/./node_modules/@noble/curves/esm/abstract/curve.js","webpack://NostrRTC/./node_modules/@noble/curves/esm/abstract/weierstrass.js","webpack://NostrRTC/./node_modules/@noble/curves/esm/_shortw_utils.js","webpack://NostrRTC/./node_modules/@noble/curves/esm/secp256k1.js","webpack://NostrRTC/./node_modules/@noble/hashes/esm/crypto.js","webpack://NostrRTC/./node_modules/@noble/hashes/esm/utils.js","webpack://NostrRTC/./node_modules/@noble/hashes/esm/_assert.js","webpack://NostrRTC/./node_modules/@noble/hashes/esm/_sha2.js","webpack://NostrRTC/./node_modules/@noble/hashes/esm/sha256.js","webpack://NostrRTC/./node_modules/nostr-tools/node_modules/@scure/base/lib/esm/index.js","webpack://NostrRTC/./node_modules/@noble/ciphers/esm/_assert.js","webpack://NostrRTC/./node_modules/@noble/ciphers/esm/utils.js","webpack://NostrRTC/./node_modules/@noble/ciphers/esm/_polyval.js","webpack://NostrRTC/./node_modules/@noble/ciphers/esm/aes.js","webpack://NostrRTC/./node_modules/@noble/ciphers/esm/_poly1305.js","webpack://NostrRTC/./node_modules/@noble/ciphers/esm/_arx.js","webpack://NostrRTC/./node_modules/@noble/ciphers/esm/chacha.js","webpack://NostrRTC/./node_modules/@noble/hashes/esm/hmac.js","webpack://NostrRTC/./node_modules/@noble/hashes/esm/hkdf.js","webpack://NostrRTC/./node_modules/nostr-tools/lib/esm/index.js","webpack://NostrRTC/./node_modules/@nostr-dev-kit/ndk/node_modules/@noble/hashes/esm/_assert.js","webpack://NostrRTC/./node_modules/@nostr-dev-kit/ndk/node_modules/@noble/hashes/esm/crypto.js","webpack://NostrRTC/./node_modules/@nostr-dev-kit/ndk/node_modules/@noble/hashes/esm/utils.js","webpack://NostrRTC/./node_modules/@nostr-dev-kit/ndk/node_modules/@noble/hashes/esm/_md.js","webpack://NostrRTC/./node_modules/@nostr-dev-kit/ndk/node_modules/@noble/hashes/esm/sha256.js","webpack://NostrRTC/./node_modules/@nostr-dev-kit/ndk/node_modules/@noble/hashes/esm/hmac.js","webpack://NostrRTC/./node_modules/@nostr-dev-kit/ndk/node_modules/@noble/curves/esm/abstract/utils.js","webpack://NostrRTC/./node_modules/@nostr-dev-kit/ndk/node_modules/@noble/curves/esm/abstract/modular.js","webpack://NostrRTC/./node_modules/@nostr-dev-kit/ndk/node_modules/@noble/curves/esm/abstract/curve.js","webpack://NostrRTC/./node_modules/@nostr-dev-kit/ndk/node_modules/@noble/curves/esm/abstract/weierstrass.js","webpack://NostrRTC/./node_modules/@nostr-dev-kit/ndk/node_modules/@noble/curves/esm/_shortw_utils.js","webpack://NostrRTC/./node_modules/@nostr-dev-kit/ndk/node_modules/@noble/curves/esm/secp256k1.js","webpack://NostrRTC/./node_modules/@scure/base/lib/esm/index.js","webpack://NostrRTC/./node_modules/@nostr-dev-kit/ndk/dist/index.mjs","webpack://NostrRTC/./src/lib/logger.ts","webpack://NostrRTC/./src/lib/NDKAdapter.ts","webpack://NostrRTC/./node_modules/uuid/dist/esm-browser/rng.js","webpack://NostrRTC/./node_modules/uuid/dist/esm-browser/stringify.js","webpack://NostrRTC/./node_modules/uuid/dist/esm-browser/v7.js","webpack://NostrRTC/./src/lib/NostrRTCSettings.ts","webpack://NostrRTC/./src/lib/NostrRTCPeer.ts","webpack://NostrRTC/./node_modules/pako/dist/pako.esm.mjs","webpack://NostrRTC/./src/lib/NostrTURNSettings.ts","webpack://NostrRTC/./src/lib/NostrTURN.ts","webpack://NostrRTC/./src/lib/NostrRTC.ts","webpack://NostrRTC/./src/bundle/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"NostrRTC\"] = factory();\n\telse\n\t\troot[\"NostrRTC\"] = factory();\n})(self, () => {\nreturn ","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\tlet m;\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\t// eslint-disable-next-line no-return-assign\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && (m = navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/)) && parseInt(m[1], 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '')\n\t\t\t.trim()\n\t\t\t.replace(' ', ',')\n\t\t\t.split(',')\n\t\t\t.filter(Boolean);\n\n\t\tfor (const ns of split) {\n\t\t\tif (ns[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(ns.slice(1));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(ns);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks if the given string matches a namespace template, honoring\n\t * asterisks as wildcards.\n\t *\n\t * @param {String} search\n\t * @param {String} template\n\t * @return {Boolean}\n\t */\n\tfunction matchesTemplate(search, template) {\n\t\tlet searchIndex = 0;\n\t\tlet templateIndex = 0;\n\t\tlet starIndex = -1;\n\t\tlet matchIndex = 0;\n\n\t\twhile (searchIndex < search.length) {\n\t\t\tif (templateIndex < template.length && (template[templateIndex] === search[searchIndex] || template[templateIndex] === '*')) {\n\t\t\t\t// Match character or proceed with wildcard\n\t\t\t\tif (template[templateIndex] === '*') {\n\t\t\t\t\tstarIndex = templateIndex;\n\t\t\t\t\tmatchIndex = searchIndex;\n\t\t\t\t\ttemplateIndex++; // Skip the '*'\n\t\t\t\t} else {\n\t\t\t\t\tsearchIndex++;\n\t\t\t\t\ttemplateIndex++;\n\t\t\t\t}\n\t\t\t} else if (starIndex !== -1) { // eslint-disable-line no-negated-condition\n\t\t\t\t// Backtrack to the last '*' and try to match more characters\n\t\t\t\ttemplateIndex = starIndex + 1;\n\t\t\t\tmatchIndex++;\n\t\t\t\tsearchIndex = matchIndex;\n\t\t\t} else {\n\t\t\t\treturn false; // No match\n\t\t\t}\n\t\t}\n\n\t\t// Handle trailing '*' in template\n\t\twhile (templateIndex < template.length && template[templateIndex] === '*') {\n\t\t\ttemplateIndex++;\n\t\t}\n\n\t\treturn templateIndex === template.length;\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names,\n\t\t\t...createDebug.skips.map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tfor (const skip of createDebug.skips) {\n\t\t\tif (matchesTemplate(name, skip)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (const ns of createDebug.names) {\n\t\t\tif (matchesTemplate(name, ns)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","const {bech32, hex, utf8} = require('@scure/base')\n\n// defaults for encode; default timestamp is current time at call\nconst DEFAULTNETWORK = {\n  // default network is bitcoin\n  bech32: 'bc',\n  pubKeyHash: 0x00,\n  scriptHash: 0x05,\n  validWitnessVersions: [0]\n}\nconst TESTNETWORK = {\n  bech32: 'tb',\n  pubKeyHash: 0x6f,\n  scriptHash: 0xc4,\n  validWitnessVersions: [0]\n}\nconst SIGNETNETWORK = {\n  bech32: 'tbs',\n  pubKeyHash: 0x6f,\n  scriptHash: 0xc4,\n  validWitnessVersions: [0]\n}\nconst REGTESTNETWORK = {\n  bech32: 'bcrt',\n  pubKeyHash: 0x6f,\n  scriptHash: 0xc4,\n  validWitnessVersions: [0]\n}\nconst SIMNETWORK = {\n  bech32: 'sb',\n  pubKeyHash: 0x3f,\n  scriptHash: 0x7b,\n  validWitnessVersions: [0]\n}\n\nconst FEATUREBIT_ORDER = [\n  'option_data_loss_protect',\n  'initial_routing_sync',\n  'option_upfront_shutdown_script',\n  'gossip_queries',\n  'var_onion_optin',\n  'gossip_queries_ex',\n  'option_static_remotekey',\n  'payment_secret',\n  'basic_mpp',\n  'option_support_large_channel'\n]\n\nconst DIVISORS = {\n  m: BigInt(1e3),\n  u: BigInt(1e6),\n  n: BigInt(1e9),\n  p: BigInt(1e12)\n}\n\nconst MAX_MILLISATS = BigInt('2100000000000000000')\n\nconst MILLISATS_PER_BTC = BigInt(1e11)\n\nconst TAGCODES = {\n  payment_hash: 1,\n  payment_secret: 16,\n  description: 13,\n  payee: 19,\n  description_hash: 23, // commit to longer descriptions (used by lnurl-pay)\n  expiry: 6, // default: 3600 (1 hour)\n  min_final_cltv_expiry: 24, // default: 9\n  fallback_address: 9,\n  route_hint: 3, // for extra routing info (private etc.)\n  feature_bits: 5,\n  metadata: 27\n}\n\n// reverse the keys and values of TAGCODES and insert into TAGNAMES\nconst TAGNAMES = {}\nfor (let i = 0, keys = Object.keys(TAGCODES); i < keys.length; i++) {\n  const currentName = keys[i]\n  const currentCode = TAGCODES[keys[i]].toString()\n  TAGNAMES[currentCode] = currentName\n}\n\nconst TAGPARSERS = {\n  1: words => hex.encode(bech32.fromWordsUnsafe(words)), // 256 bits\n  16: words => hex.encode(bech32.fromWordsUnsafe(words)), // 256 bits\n  13: words => utf8.encode(bech32.fromWordsUnsafe(words)), // string variable length\n  19: words => hex.encode(bech32.fromWordsUnsafe(words)), // 264 bits\n  23: words => hex.encode(bech32.fromWordsUnsafe(words)), // 256 bits\n  27: words => hex.encode(bech32.fromWordsUnsafe(words)), // variable\n  6: wordsToIntBE, // default: 3600 (1 hour)\n  24: wordsToIntBE, // default: 9\n  3: routingInfoParser, // for extra routing info (private etc.)\n  5: featureBitsParser // keep feature bits as array of 5 bit words\n}\n\nfunction getUnknownParser(tagCode) {\n  return words => ({\n    tagCode: parseInt(tagCode),\n    words: bech32.encode('unknown', words, Number.MAX_SAFE_INTEGER)\n  })\n}\n\nfunction wordsToIntBE(words) {\n  return words.reverse().reduce((total, item, index) => {\n    return total + item * Math.pow(32, index)\n  }, 0)\n}\n\n// first convert from words to buffer, trimming padding where necessary\n// parse in 51 byte chunks. See encoder for details.\nfunction routingInfoParser(words) {\n  const routes = []\n  let pubkey,\n    shortChannelId,\n    feeBaseMSats,\n    feeProportionalMillionths,\n    cltvExpiryDelta\n  let routesBuffer = bech32.fromWordsUnsafe(words)\n  while (routesBuffer.length > 0) {\n    pubkey = hex.encode(routesBuffer.slice(0, 33)) // 33 bytes\n    shortChannelId = hex.encode(routesBuffer.slice(33, 41)) // 8 bytes\n    feeBaseMSats = parseInt(hex.encode(routesBuffer.slice(41, 45)), 16) // 4 bytes\n    feeProportionalMillionths = parseInt(\n      hex.encode(routesBuffer.slice(45, 49)),\n      16\n    ) // 4 bytes\n    cltvExpiryDelta = parseInt(hex.encode(routesBuffer.slice(49, 51)), 16) // 2 bytes\n\n    routesBuffer = routesBuffer.slice(51)\n\n    routes.push({\n      pubkey,\n      short_channel_id: shortChannelId,\n      fee_base_msat: feeBaseMSats,\n      fee_proportional_millionths: feeProportionalMillionths,\n      cltv_expiry_delta: cltvExpiryDelta\n    })\n  }\n  return routes\n}\n\nfunction featureBitsParser(words) {\n  const bools = words\n    .slice()\n    .reverse()\n    .map(word => [\n      !!(word & 0b1),\n      !!(word & 0b10),\n      !!(word & 0b100),\n      !!(word & 0b1000),\n      !!(word & 0b10000)\n    ])\n    .reduce((finalArr, itemArr) => finalArr.concat(itemArr), [])\n  while (bools.length < FEATUREBIT_ORDER.length * 2) {\n    bools.push(false)\n  }\n\n  const featureBits = {}\n\n  FEATUREBIT_ORDER.forEach((featureName, index) => {\n    let status\n    if (bools[index * 2]) {\n      status = 'required'\n    } else if (bools[index * 2 + 1]) {\n      status = 'supported'\n    } else {\n      status = 'unsupported'\n    }\n    featureBits[featureName] = status\n  })\n\n  const extraBits = bools.slice(FEATUREBIT_ORDER.length * 2)\n  featureBits.extra_bits = {\n    start_bit: FEATUREBIT_ORDER.length * 2,\n    bits: extraBits,\n    has_required: extraBits.reduce(\n      (result, bit, index) =>\n        index % 2 !== 0 ? result || false : result || bit,\n      false\n    )\n  }\n\n  return featureBits\n}\n\nfunction hrpToMillisat(hrpString, outputString) {\n  let divisor, value\n  if (hrpString.slice(-1).match(/^[munp]$/)) {\n    divisor = hrpString.slice(-1)\n    value = hrpString.slice(0, -1)\n  } else if (hrpString.slice(-1).match(/^[^munp0-9]$/)) {\n    throw new Error('Not a valid multiplier for the amount')\n  } else {\n    value = hrpString\n  }\n\n  if (!value.match(/^\\d+$/))\n    throw new Error('Not a valid human readable amount')\n\n  const valueBN = BigInt(value)\n\n  const millisatoshisBN = divisor\n    ? (valueBN * MILLISATS_PER_BTC) / DIVISORS[divisor]\n    : valueBN * MILLISATS_PER_BTC\n\n  if (\n    (divisor === 'p' && !(valueBN % BigInt(10) === BigInt(0))) ||\n    millisatoshisBN > MAX_MILLISATS\n  ) {\n    throw new Error('Amount is outside of valid range')\n  }\n\n  return outputString ? millisatoshisBN.toString() : millisatoshisBN\n}\n\n// decode will only have extra comments that aren't covered in encode comments.\n// also if anything is hard to read I'll comment.\nfunction decode(paymentRequest, network) {\n  if (typeof paymentRequest !== 'string')\n    throw new Error('Lightning Payment Request must be string')\n  if (paymentRequest.slice(0, 2).toLowerCase() !== 'ln')\n    throw new Error('Not a proper lightning payment request')\n\n  const sections = []\n  const decoded = bech32.decode(paymentRequest, Number.MAX_SAFE_INTEGER)\n  paymentRequest = paymentRequest.toLowerCase()\n  const prefix = decoded.prefix\n  let words = decoded.words\n  let letters = paymentRequest.slice(prefix.length + 1)\n  let sigWords = words.slice(-104)\n  words = words.slice(0, -104)\n\n  // Without reverse lookups, can't say that the multipier at the end must\n  // have a number before it, so instead we parse, and if the second group\n  // doesn't have anything, there's a good chance the last letter of the\n  // coin type got captured by the third group, so just re-regex without\n  // the number.\n  let prefixMatches = prefix.match(/^ln(\\S+?)(\\d*)([a-zA-Z]?)$/)\n  if (prefixMatches && !prefixMatches[2])\n    prefixMatches = prefix.match(/^ln(\\S+)$/)\n  if (!prefixMatches) {\n    throw new Error('Not a proper lightning payment request')\n  }\n\n  // \"ln\" section\n  sections.push({\n    name: 'lightning_network',\n    letters: 'ln'\n  })\n\n  // \"bc\" section\n  const bech32Prefix = prefixMatches[1]\n  let coinNetwork\n  if (!network) {\n    switch (bech32Prefix) {\n      case DEFAULTNETWORK.bech32:\n        coinNetwork = DEFAULTNETWORK\n        break\n      case TESTNETWORK.bech32:\n        coinNetwork = TESTNETWORK\n        break\n      case SIGNETNETWORK.bech32:\n        coinNetwork = SIGNETNETWORK\n        break\n      case REGTESTNETWORK.bech32:\n        coinNetwork = REGTESTNETWORK\n        break\n      case SIMNETWORK.bech32:\n        coinNetwork = SIMNETWORK\n        break\n    }\n  } else {\n    if (\n      network.bech32 === undefined ||\n      network.pubKeyHash === undefined ||\n      network.scriptHash === undefined ||\n      !Array.isArray(network.validWitnessVersions)\n    )\n      throw new Error('Invalid network')\n    coinNetwork = network\n  }\n  if (!coinNetwork || coinNetwork.bech32 !== bech32Prefix) {\n    throw new Error('Unknown coin bech32 prefix')\n  }\n  sections.push({\n    name: 'coin_network',\n    letters: bech32Prefix,\n    value: coinNetwork\n  })\n\n  // amount section\n  const value = prefixMatches[2]\n  let millisatoshis\n  if (value) {\n    const divisor = prefixMatches[3]\n    millisatoshis = hrpToMillisat(value + divisor, true)\n    sections.push({\n      name: 'amount',\n      letters: prefixMatches[2] + prefixMatches[3],\n      value: millisatoshis\n    })\n  } else {\n    millisatoshis = null\n  }\n\n  // \"1\" separator\n  sections.push({\n    name: 'separator',\n    letters: '1'\n  })\n\n  // timestamp\n  const timestamp = wordsToIntBE(words.slice(0, 7))\n  words = words.slice(7) // trim off the left 7 words\n  sections.push({\n    name: 'timestamp',\n    letters: letters.slice(0, 7),\n    value: timestamp\n  })\n  letters = letters.slice(7)\n\n  let tagName, parser, tagLength, tagWords\n  // we have no tag count to go on, so just keep hacking off words\n  // until we have none.\n  while (words.length > 0) {\n    const tagCode = words[0].toString()\n    tagName = TAGNAMES[tagCode] || 'unknown_tag'\n    parser = TAGPARSERS[tagCode] || getUnknownParser(tagCode)\n    words = words.slice(1)\n\n    tagLength = wordsToIntBE(words.slice(0, 2))\n    words = words.slice(2)\n\n    tagWords = words.slice(0, tagLength)\n    words = words.slice(tagLength)\n\n    sections.push({\n      name: tagName,\n      tag: letters[0],\n      letters: letters.slice(0, 1 + 2 + tagLength),\n      value: parser(tagWords) // see: parsers for more comments\n    })\n    letters = letters.slice(1 + 2 + tagLength)\n  }\n\n  // signature\n  sections.push({\n    name: 'signature',\n    letters: letters.slice(0, 104),\n    value: hex.encode(bech32.fromWordsUnsafe(sigWords))\n  })\n  letters = letters.slice(104)\n\n  // checksum\n  sections.push({\n    name: 'checksum',\n    letters: letters\n  })\n\n  let result = {\n    paymentRequest,\n    sections,\n\n    get expiry() {\n      let exp = sections.find(s => s.name === 'expiry')\n      if (exp) return getValue('timestamp') + exp.value\n    },\n\n    get route_hints() {\n      return sections.filter(s => s.name === 'route_hint').map(s => s.value)\n    }\n  }\n\n  for (let name in TAGCODES) {\n    if (name === 'route_hint') {\n      // route hints can be multiple, so this won't work for them\n      continue\n    }\n\n    Object.defineProperty(result, name, {\n      get() {\n        return getValue(name)\n      }\n    })\n  }\n\n  return result\n\n  function getValue(name) {\n    let section = sections.find(s => s.name === name)\n    return section ? section.value : undefined\n  }\n}\n\nmodule.exports = {\n  decode,\n  hrpToMillisat\n}\n","\"use strict\";\n/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bytes = exports.stringToBytes = exports.str = exports.bytesToString = exports.hex = exports.utf8 = exports.bech32m = exports.bech32 = exports.base58check = exports.base58xmr = exports.base58xrp = exports.base58flickr = exports.base58 = exports.base64url = exports.base64 = exports.base32crockford = exports.base32hex = exports.base32 = exports.base16 = exports.utils = exports.assertNumber = void 0;\nfunction assertNumber(n) {\n    if (!Number.isSafeInteger(n))\n        throw new Error(`Wrong integer: ${n}`);\n}\nexports.assertNumber = assertNumber;\nfunction chain(...args) {\n    const wrap = (a, b) => (c) => a(b(c));\n    const encode = Array.from(args)\n        .reverse()\n        .reduce((acc, i) => (acc ? wrap(acc, i.encode) : i.encode), undefined);\n    const decode = args.reduce((acc, i) => (acc ? wrap(acc, i.decode) : i.decode), undefined);\n    return { encode, decode };\n}\nfunction alphabet(alphabet) {\n    return {\n        encode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('alphabet.encode input should be an array of numbers');\n            return digits.map((i) => {\n                assertNumber(i);\n                if (i < 0 || i >= alphabet.length)\n                    throw new Error(`Digit index outside alphabet: ${i} (alphabet: ${alphabet.length})`);\n                return alphabet[i];\n            });\n        },\n        decode: (input) => {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('alphabet.decode input should be array of strings');\n            return input.map((letter) => {\n                if (typeof letter !== 'string')\n                    throw new Error(`alphabet.decode: not string element=${letter}`);\n                const index = alphabet.indexOf(letter);\n                if (index === -1)\n                    throw new Error(`Unknown letter: \"${letter}\". Allowed: ${alphabet}`);\n                return index;\n            });\n        },\n    };\n}\nfunction join(separator = '') {\n    if (typeof separator !== 'string')\n        throw new Error('join separator should be string');\n    return {\n        encode: (from) => {\n            if (!Array.isArray(from) || (from.length && typeof from[0] !== 'string'))\n                throw new Error('join.encode input should be array of strings');\n            for (let i of from)\n                if (typeof i !== 'string')\n                    throw new Error(`join.encode: non-string input=${i}`);\n            return from.join(separator);\n        },\n        decode: (to) => {\n            if (typeof to !== 'string')\n                throw new Error('join.decode input should be string');\n            return to.split(separator);\n        },\n    };\n}\nfunction padding(bits, chr = '=') {\n    assertNumber(bits);\n    if (typeof chr !== 'string')\n        throw new Error('padding chr should be string');\n    return {\n        encode(data) {\n            if (!Array.isArray(data) || (data.length && typeof data[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of data)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.encode: non-string input=${i}`);\n            while ((data.length * bits) % 8)\n                data.push(chr);\n            return data;\n        },\n        decode(input) {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of input)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.decode: non-string input=${i}`);\n            let end = input.length;\n            if ((end * bits) % 8)\n                throw new Error('Invalid padding: string should have whole number of bytes');\n            for (; end > 0 && input[end - 1] === chr; end--) {\n                if (!(((end - 1) * bits) % 8))\n                    throw new Error('Invalid padding: string has too much padding');\n            }\n            return input.slice(0, end);\n        },\n    };\n}\nfunction normalize(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('normalize fn should be function');\n    return { encode: (from) => from, decode: (to) => fn(to) };\n}\nfunction convertRadix(data, from, to) {\n    if (from < 2)\n        throw new Error(`convertRadix: wrong from=${from}, base cannot be less than 2`);\n    if (to < 2)\n        throw new Error(`convertRadix: wrong to=${to}, base cannot be less than 2`);\n    if (!Array.isArray(data))\n        throw new Error('convertRadix: data should be array');\n    if (!data.length)\n        return [];\n    let pos = 0;\n    const res = [];\n    const digits = Array.from(data);\n    digits.forEach((d) => {\n        assertNumber(d);\n        if (d < 0 || d >= from)\n            throw new Error(`Wrong integer: ${d}`);\n    });\n    while (true) {\n        let carry = 0;\n        let done = true;\n        for (let i = pos; i < digits.length; i++) {\n            const digit = digits[i];\n            const digitBase = from * carry + digit;\n            if (!Number.isSafeInteger(digitBase) ||\n                (from * carry) / from !== carry ||\n                digitBase - digit !== from * carry) {\n                throw new Error('convertRadix: carry overflow');\n            }\n            carry = digitBase % to;\n            digits[i] = Math.floor(digitBase / to);\n            if (!Number.isSafeInteger(digits[i]) || digits[i] * to + carry !== digitBase)\n                throw new Error('convertRadix: carry overflow');\n            if (!done)\n                continue;\n            else if (!digits[i])\n                pos = i;\n            else\n                done = false;\n        }\n        res.push(carry);\n        if (done)\n            break;\n    }\n    for (let i = 0; i < data.length - 1 && data[i] === 0; i++)\n        res.push(0);\n    return res.reverse();\n}\nconst gcd = (a, b) => (!b ? a : gcd(b, a % b));\nconst radix2carry = (from, to) => from + (to - gcd(from, to));\nfunction convertRadix2(data, from, to, padding) {\n    if (!Array.isArray(data))\n        throw new Error('convertRadix2: data should be array');\n    if (from <= 0 || from > 32)\n        throw new Error(`convertRadix2: wrong from=${from}`);\n    if (to <= 0 || to > 32)\n        throw new Error(`convertRadix2: wrong to=${to}`);\n    if (radix2carry(from, to) > 32) {\n        throw new Error(`convertRadix2: carry overflow from=${from} to=${to} carryBits=${radix2carry(from, to)}`);\n    }\n    let carry = 0;\n    let pos = 0;\n    const mask = 2 ** to - 1;\n    const res = [];\n    for (const n of data) {\n        assertNumber(n);\n        if (n >= 2 ** from)\n            throw new Error(`convertRadix2: invalid data word=${n} from=${from}`);\n        carry = (carry << from) | n;\n        if (pos + from > 32)\n            throw new Error(`convertRadix2: carry overflow pos=${pos} from=${from}`);\n        pos += from;\n        for (; pos >= to; pos -= to)\n            res.push(((carry >> (pos - to)) & mask) >>> 0);\n        carry &= 2 ** pos - 1;\n    }\n    carry = (carry << (to - pos)) & mask;\n    if (!padding && pos >= from)\n        throw new Error('Excess padding');\n    if (!padding && carry)\n        throw new Error(`Non-zero padding: ${carry}`);\n    if (padding && pos > 0)\n        res.push(carry >>> 0);\n    return res;\n}\nfunction radix(num) {\n    assertNumber(num);\n    return {\n        encode: (bytes) => {\n            if (!(bytes instanceof Uint8Array))\n                throw new Error('radix.encode input should be Uint8Array');\n            return convertRadix(Array.from(bytes), 2 ** 8, num);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix.decode input should be array of strings');\n            return Uint8Array.from(convertRadix(digits, num, 2 ** 8));\n        },\n    };\n}\nfunction radix2(bits, revPadding = false) {\n    assertNumber(bits);\n    if (bits <= 0 || bits > 32)\n        throw new Error('radix2: bits should be in (0..32]');\n    if (radix2carry(8, bits) > 32 || radix2carry(bits, 8) > 32)\n        throw new Error('radix2: carry overflow');\n    return {\n        encode: (bytes) => {\n            if (!(bytes instanceof Uint8Array))\n                throw new Error('radix2.encode input should be Uint8Array');\n            return convertRadix2(Array.from(bytes), 8, bits, !revPadding);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix2.decode input should be array of strings');\n            return Uint8Array.from(convertRadix2(digits, bits, 8, revPadding));\n        },\n    };\n}\nfunction unsafeWrapper(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('unsafeWrapper fn should be function');\n    return function (...args) {\n        try {\n            return fn.apply(null, args);\n        }\n        catch (e) { }\n    };\n}\nfunction checksum(len, fn) {\n    assertNumber(len);\n    if (typeof fn !== 'function')\n        throw new Error('checksum fn should be function');\n    return {\n        encode(data) {\n            if (!(data instanceof Uint8Array))\n                throw new Error('checksum.encode: input should be Uint8Array');\n            const checksum = fn(data).slice(0, len);\n            const res = new Uint8Array(data.length + len);\n            res.set(data);\n            res.set(checksum, data.length);\n            return res;\n        },\n        decode(data) {\n            if (!(data instanceof Uint8Array))\n                throw new Error('checksum.decode: input should be Uint8Array');\n            const payload = data.slice(0, -len);\n            const newChecksum = fn(payload).slice(0, len);\n            const oldChecksum = data.slice(-len);\n            for (let i = 0; i < len; i++)\n                if (newChecksum[i] !== oldChecksum[i])\n                    throw new Error('Invalid checksum');\n            return payload;\n        },\n    };\n}\nexports.utils = { alphabet, chain, checksum, radix, radix2, join, padding };\nexports.base16 = chain(radix2(4), alphabet('0123456789ABCDEF'), join(''));\nexports.base32 = chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), padding(5), join(''));\nexports.base32hex = chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), padding(5), join(''));\nexports.base32crockford = chain(radix2(5), alphabet('0123456789ABCDEFGHJKMNPQRSTVWXYZ'), join(''), normalize((s) => s.toUpperCase().replace(/O/g, '0').replace(/[IL]/g, '1')));\nexports.base64 = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), padding(6), join(''));\nexports.base64url = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), padding(6), join(''));\nconst genBase58 = (abc) => chain(radix(58), alphabet(abc), join(''));\nexports.base58 = genBase58('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz');\nexports.base58flickr = genBase58('123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ');\nexports.base58xrp = genBase58('rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz');\nconst XMR_BLOCK_LEN = [0, 2, 3, 5, 6, 7, 9, 10, 11];\nexports.base58xmr = {\n    encode(data) {\n        let res = '';\n        for (let i = 0; i < data.length; i += 8) {\n            const block = data.subarray(i, i + 8);\n            res += exports.base58.encode(block).padStart(XMR_BLOCK_LEN[block.length], '1');\n        }\n        return res;\n    },\n    decode(str) {\n        let res = [];\n        for (let i = 0; i < str.length; i += 11) {\n            const slice = str.slice(i, i + 11);\n            const blockLen = XMR_BLOCK_LEN.indexOf(slice.length);\n            const block = exports.base58.decode(slice);\n            for (let j = 0; j < block.length - blockLen; j++) {\n                if (block[j] !== 0)\n                    throw new Error('base58xmr: wrong padding');\n            }\n            res = res.concat(Array.from(block.slice(block.length - blockLen)));\n        }\n        return Uint8Array.from(res);\n    },\n};\nconst base58check = (sha256) => chain(checksum(4, (data) => sha256(sha256(data))), exports.base58);\nexports.base58check = base58check;\nconst BECH_ALPHABET = chain(alphabet('qpzry9x8gf2tvdw0s3jn54khce6mua7l'), join(''));\nconst POLYMOD_GENERATORS = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];\nfunction bech32Polymod(pre) {\n    const b = pre >> 25;\n    let chk = (pre & 0x1ffffff) << 5;\n    for (let i = 0; i < POLYMOD_GENERATORS.length; i++) {\n        if (((b >> i) & 1) === 1)\n            chk ^= POLYMOD_GENERATORS[i];\n    }\n    return chk;\n}\nfunction bechChecksum(prefix, words, encodingConst = 1) {\n    const len = prefix.length;\n    let chk = 1;\n    for (let i = 0; i < len; i++) {\n        const c = prefix.charCodeAt(i);\n        if (c < 33 || c > 126)\n            throw new Error(`Invalid prefix (${prefix})`);\n        chk = bech32Polymod(chk) ^ (c >> 5);\n    }\n    chk = bech32Polymod(chk);\n    for (let i = 0; i < len; i++)\n        chk = bech32Polymod(chk) ^ (prefix.charCodeAt(i) & 0x1f);\n    for (let v of words)\n        chk = bech32Polymod(chk) ^ v;\n    for (let i = 0; i < 6; i++)\n        chk = bech32Polymod(chk);\n    chk ^= encodingConst;\n    return BECH_ALPHABET.encode(convertRadix2([chk % 2 ** 30], 30, 5, false));\n}\nfunction genBech32(encoding) {\n    const ENCODING_CONST = encoding === 'bech32' ? 1 : 0x2bc830a3;\n    const _words = radix2(5);\n    const fromWords = _words.decode;\n    const toWords = _words.encode;\n    const fromWordsUnsafe = unsafeWrapper(fromWords);\n    function encode(prefix, words, limit = 90) {\n        if (typeof prefix !== 'string')\n            throw new Error(`bech32.encode prefix should be string, not ${typeof prefix}`);\n        if (!Array.isArray(words) || (words.length && typeof words[0] !== 'number'))\n            throw new Error(`bech32.encode words should be array of numbers, not ${typeof words}`);\n        const actualLength = prefix.length + 7 + words.length;\n        if (limit !== false && actualLength > limit)\n            throw new TypeError(`Length ${actualLength} exceeds limit ${limit}`);\n        prefix = prefix.toLowerCase();\n        return `${prefix}1${BECH_ALPHABET.encode(words)}${bechChecksum(prefix, words, ENCODING_CONST)}`;\n    }\n    function decode(str, limit = 90) {\n        if (typeof str !== 'string')\n            throw new Error(`bech32.decode input should be string, not ${typeof str}`);\n        if (str.length < 8 || (limit !== false && str.length > limit))\n            throw new TypeError(`Wrong string length: ${str.length} (${str}). Expected (8..${limit})`);\n        const lowered = str.toLowerCase();\n        if (str !== lowered && str !== str.toUpperCase())\n            throw new Error(`String must be lowercase or uppercase`);\n        str = lowered;\n        const sepIndex = str.lastIndexOf('1');\n        if (sepIndex === 0 || sepIndex === -1)\n            throw new Error(`Letter \"1\" must be present between prefix and data only`);\n        const prefix = str.slice(0, sepIndex);\n        const _words = str.slice(sepIndex + 1);\n        if (_words.length < 6)\n            throw new Error('Data must be at least 6 characters long');\n        const words = BECH_ALPHABET.decode(_words).slice(0, -6);\n        const sum = bechChecksum(prefix, words, ENCODING_CONST);\n        if (!_words.endsWith(sum))\n            throw new Error(`Invalid checksum in ${str}: expected \"${sum}\"`);\n        return { prefix, words };\n    }\n    const decodeUnsafe = unsafeWrapper(decode);\n    function decodeToBytes(str) {\n        const { prefix, words } = decode(str, false);\n        return { prefix, words, bytes: fromWords(words) };\n    }\n    return { encode, decode, decodeToBytes, decodeUnsafe, fromWords, fromWordsUnsafe, toWords };\n}\nexports.bech32 = genBech32('bech32');\nexports.bech32m = genBech32('bech32m');\nexports.utf8 = {\n    encode: (data) => new TextDecoder().decode(data),\n    decode: (str) => new TextEncoder().encode(str),\n};\nexports.hex = chain(radix2(4), alphabet('0123456789abcdef'), join(''), normalize((s) => {\n    if (typeof s !== 'string' || s.length % 2)\n        throw new TypeError(`hex.decode: expected string, got ${typeof s} with length ${s.length}`);\n    return s.toLowerCase();\n}));\nconst CODERS = {\n    utf8: exports.utf8, hex: exports.hex, base16: exports.base16, base32: exports.base32, base64: exports.base64, base64url: exports.base64url, base58: exports.base58, base58xmr: exports.base58xmr\n};\nconst coderTypeError = `Invalid encoding type. Available types: ${Object.keys(CODERS).join(', ')}`;\nconst bytesToString = (type, bytes) => {\n    if (typeof type !== 'string' || !CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (!(bytes instanceof Uint8Array))\n        throw new TypeError('bytesToString() expects Uint8Array');\n    return CODERS[type].encode(bytes);\n};\nexports.bytesToString = bytesToString;\nexports.str = exports.bytesToString;\nconst stringToBytes = (type, str) => {\n    if (!CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (typeof str !== 'string')\n        throw new TypeError('stringToBytes() expects string');\n    return CODERS[type].decode(str);\n};\nexports.stringToBytes = stringToBytes;\nexports.bytes = exports.stringToBytes;\n","\"use strict\";\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EventEmitter = void 0;\nvar task_collection_1 = require(\"./task-collection\");\nvar utils_1 = require(\"./task-collection/utils\");\nvar utils_2 = require(\"./utils\");\nfunction emit(event, a, b, c, d, e) {\n    var ev = this.events[event];\n    if (ev) {\n        if (ev.length === 0)\n            return false;\n        if (ev.argsNum < 6) {\n            ev.call(a, b, c, d, e);\n        }\n        else {\n            var arr = new Array(ev.argsNum);\n            for (var i = 0, len = arr.length; i < len; ++i) {\n                arr[i] = arguments[i + 1];\n            }\n            ev.call.apply(undefined, arr);\n        }\n        return true;\n    }\n    return false;\n}\nfunction emitHasOnce(event, a, b, c, d, e) {\n    var ev = this.events[event];\n    var argsArr;\n    if (ev !== undefined) {\n        if (ev.length === 0)\n            return false;\n        if (ev.argsNum < 6) {\n            ev.call(a, b, c, d, e);\n        }\n        else {\n            argsArr = new Array(ev.argsNum);\n            for (var i = 0, len = argsArr.length; i < len; ++i) {\n                argsArr[i] = arguments[i + 1];\n            }\n            ev.call.apply(undefined, argsArr);\n        }\n    }\n    var oev = this.onceEvents[event];\n    if (oev) {\n        if (typeof oev === 'function') {\n            this.onceEvents[event] = undefined;\n            if (arguments.length < 6) {\n                oev(a, b, c, d, e);\n            }\n            else {\n                if (argsArr === undefined) {\n                    argsArr = new Array(arguments.length - 1);\n                    for (var i = 0, len = argsArr.length; i < len; ++i) {\n                        argsArr[i] = arguments[i + 1];\n                    }\n                }\n                oev.apply(undefined, argsArr);\n            }\n        }\n        else {\n            var fncs = oev;\n            this.onceEvents[event] = undefined;\n            if (arguments.length < 6) {\n                for (var i = 0; i < fncs.length; ++i) {\n                    fncs[i](a, b, c, d, e);\n                }\n            }\n            else {\n                if (argsArr === undefined) {\n                    argsArr = new Array(arguments.length - 1);\n                    for (var i = 0, len = argsArr.length; i < len; ++i) {\n                        argsArr[i] = arguments[i + 1];\n                    }\n                }\n                for (var i = 0; i < fncs.length; ++i) {\n                    fncs[i].apply(undefined, argsArr);\n                }\n            }\n        }\n        return true;\n    }\n    return ev !== undefined;\n}\n/** Implemented event emitter */\nvar EventEmitter = /** @class */ (function () {\n    function EventEmitter() {\n        this.events = (0, utils_2.nullObj)();\n        this.onceEvents = (0, utils_2.nullObj)();\n        this._symbolKeys = new Set;\n        this.maxListeners = Infinity;\n    }\n    Object.defineProperty(EventEmitter.prototype, \"_eventsCount\", {\n        get: function () {\n            return this.eventNames().length;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return EventEmitter;\n}());\nexports.EventEmitter = EventEmitter;\nfunction once(event, listener) {\n    if (this.emit === emit) {\n        this.emit = emitHasOnce;\n    }\n    switch (typeof this.onceEvents[event]) {\n        case 'undefined':\n            this.onceEvents[event] = listener;\n            if (typeof event === 'symbol')\n                this._symbolKeys.add(event);\n            break;\n        case 'function':\n            this.onceEvents[event] = [this.onceEvents[event], listener];\n            break;\n        case 'object':\n            this.onceEvents[event].push(listener);\n    }\n    return this;\n}\nfunction addListener(event, listener, argsNum) {\n    if (argsNum === void 0) { argsNum = listener.length; }\n    if (typeof listener !== 'function')\n        throw new TypeError('The listener must be a function');\n    var evtmap = this.events[event];\n    if (!evtmap) {\n        this.events[event] = new task_collection_1.TaskCollection(argsNum, true, listener, false);\n        if (typeof event === 'symbol')\n            this._symbolKeys.add(event);\n    }\n    else {\n        evtmap.push(listener);\n        evtmap.growArgsNum(argsNum);\n        if (this.maxListeners !== Infinity && this.maxListeners <= evtmap.length)\n            console.warn(\"Maximum event listeners for \\\"\".concat(String(event), \"\\\" event!\"));\n    }\n    return this;\n}\nfunction removeListener(event, listener) {\n    var evt = this.events[event];\n    if (evt) {\n        evt.removeLast(listener);\n    }\n    var evto = this.onceEvents[event];\n    if (evto) {\n        if (typeof evto === 'function') {\n            this.onceEvents[event] = undefined;\n        }\n        else if (typeof evto === 'object') {\n            if (evto.length === 1 && evto[0] === listener) {\n                this.onceEvents[event] = undefined;\n            }\n            else {\n                (0, utils_1._fast_remove_single)(evto, evto.lastIndexOf(listener));\n            }\n        }\n    }\n    return this;\n}\nfunction addListenerBound(event, listener, bindTo, argsNum) {\n    if (bindTo === void 0) { bindTo = this; }\n    if (argsNum === void 0) { argsNum = listener.length; }\n    if (!this.boundFuncs)\n        this.boundFuncs = new Map;\n    var bound = listener.bind(bindTo);\n    this.boundFuncs.set(listener, bound);\n    return this.addListener(event, bound, argsNum);\n}\nfunction removeListenerBound(event, listener) {\n    var _a, _b;\n    var bound = (_a = this.boundFuncs) === null || _a === void 0 ? void 0 : _a.get(listener);\n    (_b = this.boundFuncs) === null || _b === void 0 ? void 0 : _b.delete(listener);\n    return this.removeListener(event, bound);\n}\nfunction hasListeners(event) {\n    return this.events[event] && !!this.events[event].length;\n}\nfunction prependListener(event, listener, argsNum) {\n    if (argsNum === void 0) { argsNum = listener.length; }\n    if (typeof listener !== 'function')\n        throw new TypeError('The listener must be a function');\n    var evtmap = this.events[event];\n    if (!evtmap || !(evtmap instanceof task_collection_1.TaskCollection)) {\n        evtmap = this.events[event] = new task_collection_1.TaskCollection(argsNum, true, listener, false);\n        if (typeof event === 'symbol')\n            this._symbolKeys.add(event);\n    }\n    else {\n        evtmap.insert(0, listener);\n        evtmap.growArgsNum(argsNum);\n        if (this.maxListeners !== Infinity && this.maxListeners <= evtmap.length)\n            console.warn(\"Maximum event listeners for \\\"\".concat(String(event), \"\\\" event!\"));\n    }\n    return this;\n}\nfunction prependOnceListener(event, listener) {\n    if (this.emit === emit) {\n        this.emit = emitHasOnce;\n    }\n    var evtmap = this.onceEvents[event];\n    if (!evtmap) {\n        this.onceEvents[event] = [listener];\n        if (typeof event === 'symbol')\n            this._symbolKeys.add(event);\n    }\n    else if (typeof evtmap !== 'object') {\n        this.onceEvents[event] = [listener, evtmap];\n        if (typeof event === 'symbol')\n            this._symbolKeys.add(event);\n    }\n    else {\n        evtmap.unshift(listener);\n        if (this.maxListeners !== Infinity && this.maxListeners <= evtmap.length) {\n            console.warn(\"Maximum event listeners for \\\"\".concat(String(event), \"\\\" once event!\"));\n        }\n    }\n    return this;\n}\nfunction removeAllListeners(event) {\n    if (event === undefined) {\n        this.events = (0, utils_2.nullObj)();\n        this.onceEvents = (0, utils_2.nullObj)();\n        this._symbolKeys = new Set;\n    }\n    else {\n        this.events[event] = undefined;\n        this.onceEvents[event] = undefined;\n        if (typeof event === 'symbol')\n            this._symbolKeys.delete(event);\n    }\n    return this;\n}\nfunction setMaxListeners(n) {\n    this.maxListeners = n;\n    return this;\n}\nfunction getMaxListeners() {\n    return this.maxListeners;\n}\nfunction listeners(event) {\n    if (this.emit === emit)\n        return this.events[event] ? this.events[event].tasksAsArray().slice() : [];\n    else {\n        if (this.events[event] && this.onceEvents[event]) {\n            return __spreadArray(__spreadArray([], this.events[event].tasksAsArray(), true), (typeof this.onceEvents[event] === 'function' ? [this.onceEvents[event]] : this.onceEvents[event]), true);\n        }\n        else if (this.events[event])\n            return this.events[event].tasksAsArray();\n        else if (this.onceEvents[event])\n            return (typeof this.onceEvents[event] === 'function' ? [this.onceEvents[event]] : this.onceEvents[event]);\n        else\n            return [];\n    }\n}\nfunction eventNames() {\n    var _this = this;\n    if (this.emit === emit) {\n        var keys = Object.keys(this.events);\n        return __spreadArray(__spreadArray([], keys, true), Array.from(this._symbolKeys), true).filter(function (x) { return (x in _this.events) && _this.events[x] && _this.events[x].length; });\n    }\n    else {\n        var keys = Object.keys(this.events).filter(function (x) { return _this.events[x] && _this.events[x].length; });\n        var keysO = Object.keys(this.onceEvents).filter(function (x) { return _this.onceEvents[x] && _this.onceEvents[x].length; });\n        return __spreadArray(__spreadArray(__spreadArray([], keys, true), keysO, true), Array.from(this._symbolKeys).filter(function (x) { return (((x in _this.events) && _this.events[x] && _this.events[x].length) ||\n            ((x in _this.onceEvents) && _this.onceEvents[x] && _this.onceEvents[x].length)); }), true);\n    }\n}\nfunction listenerCount(type) {\n    if (this.emit === emit)\n        return this.events[type] && this.events[type].length || 0;\n    else\n        return (this.events[type] && this.events[type].length || 0) + (this.onceEvents[type] && this.onceEvents[type].length || 0);\n}\nEventEmitter.prototype.emit = emit;\nEventEmitter.prototype.on = addListener;\nEventEmitter.prototype.once = once;\nEventEmitter.prototype.addListener = addListener;\nEventEmitter.prototype.removeListener = removeListener;\nEventEmitter.prototype.addListenerBound = addListenerBound;\nEventEmitter.prototype.removeListenerBound = removeListenerBound;\nEventEmitter.prototype.hasListeners = hasListeners;\nEventEmitter.prototype.prependListener = prependListener;\nEventEmitter.prototype.prependOnceListener = prependOnceListener;\nEventEmitter.prototype.off = removeListener;\nEventEmitter.prototype.removeAllListeners = removeAllListeners;\nEventEmitter.prototype.setMaxListeners = setMaxListeners;\nEventEmitter.prototype.getMaxListeners = getMaxListeners;\nEventEmitter.prototype.listeners = listeners;\nEventEmitter.prototype.eventNames = eventNames;\nEventEmitter.prototype.listenerCount = listenerCount;\n//# sourceMappingURL=ee.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./types\"), exports);\n__exportStar(require(\"./ee\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bakeCollectionVariadic = exports.bakeCollectionAwait = exports.bakeCollection = exports.BAKED_EMPTY_FUNC = void 0;\nexports.BAKED_EMPTY_FUNC = (function () { });\nvar FORLOOP_FALLBACK = 1500;\nfunction generateArgsDefCode(numArgs) {\n    var argsDefCode = '';\n    if (numArgs === 0)\n        return argsDefCode;\n    for (var i = 0; i < numArgs - 1; ++i) {\n        argsDefCode += ('arg' + String(i) + ', ');\n    }\n    argsDefCode += ('arg' + String(numArgs - 1));\n    return argsDefCode;\n}\nfunction generateBodyPartsCode(argsDefCode, collectionLength) {\n    var funcDefCode = '', funcCallCode = '';\n    for (var i = 0; i < collectionLength; ++i) {\n        funcDefCode += \"var f\".concat(i, \" = collection[\").concat(i, \"];\\n\");\n        funcCallCode += \"f\".concat(i, \"(\").concat(argsDefCode, \")\\n\");\n    }\n    return { funcDefCode: funcDefCode, funcCallCode: funcCallCode };\n}\nfunction generateBodyPartsVariadicCode(collectionLength) {\n    var funcDefCode = '', funcCallCode = '';\n    for (var i = 0; i < collectionLength; ++i) {\n        funcDefCode += \"var f\".concat(i, \" = collection[\").concat(i, \"];\\n\");\n        funcCallCode += \"f\".concat(i, \".apply(undefined, arguments)\\n\");\n    }\n    return { funcDefCode: funcDefCode, funcCallCode: funcCallCode };\n}\nfunction bakeCollection(collection, fixedArgsNum) {\n    if (collection.length === 0)\n        return exports.BAKED_EMPTY_FUNC;\n    else if (collection.length === 1)\n        return collection[0];\n    var funcFactoryCode;\n    if (collection.length < FORLOOP_FALLBACK) {\n        var argsDefCode = generateArgsDefCode(fixedArgsNum);\n        var _a = generateBodyPartsCode(argsDefCode, collection.length), funcDefCode = _a.funcDefCode, funcCallCode = _a.funcCallCode;\n        funcFactoryCode = \"(function(collection) {\\n            \".concat(funcDefCode, \"\\n            collection = undefined;\\n            return (function(\").concat(argsDefCode, \") {\\n                \").concat(funcCallCode, \"\\n            });\\n        })\");\n    }\n    else {\n        var argsDefCode = generateArgsDefCode(fixedArgsNum);\n        // loop unroll\n        if (collection.length % 10 === 0) {\n            funcFactoryCode = \"(function(collection) {\\n                return (function(\".concat(argsDefCode, \") {\\n                    for (var i = 0; i < collection.length; i += 10) {\\n                        collection[i](\").concat(argsDefCode, \");\\n                        collection[i+1](\").concat(argsDefCode, \");\\n                        collection[i+2](\").concat(argsDefCode, \");\\n                        collection[i+3](\").concat(argsDefCode, \");\\n                        collection[i+4](\").concat(argsDefCode, \");\\n                        collection[i+5](\").concat(argsDefCode, \");\\n                        collection[i+6](\").concat(argsDefCode, \");\\n                        collection[i+7](\").concat(argsDefCode, \");\\n                        collection[i+8](\").concat(argsDefCode, \");\\n                        collection[i+9](\").concat(argsDefCode, \");\\n                    }\\n                });\\n            })\");\n        }\n        else if (collection.length % 4 === 0) {\n            funcFactoryCode = \"(function(collection) {\\n                return (function(\".concat(argsDefCode, \") {\\n                    for (var i = 0; i < collection.length; i += 4) {\\n                        collection[i](\").concat(argsDefCode, \");\\n                        collection[i+1](\").concat(argsDefCode, \");\\n                        collection[i+2](\").concat(argsDefCode, \");\\n                        collection[i+3](\").concat(argsDefCode, \");\\n                    }\\n                });\\n            })\");\n        }\n        else if (collection.length % 3 === 0) {\n            funcFactoryCode = \"(function(collection) {\\n                return (function(\".concat(argsDefCode, \") {\\n                    for (var i = 0; i < collection.length; i += 3) {\\n                        collection[i](\").concat(argsDefCode, \");\\n                        collection[i+1](\").concat(argsDefCode, \");\\n                        collection[i+2](\").concat(argsDefCode, \");\\n                    }\\n                });\\n            })\");\n        }\n        else {\n            funcFactoryCode = \"(function(collection) {\\n                return (function(\".concat(argsDefCode, \") {\\n                    for (var i = 0; i < collection.length; ++i) {\\n                        collection[i](\").concat(argsDefCode, \");\\n                    }\\n                });\\n            })\");\n        }\n    }\n    {\n        // isolate\n        var bakeCollection_1 = undefined;\n        var fixedArgsNum_1 = undefined;\n        var bakeCollectionVariadic_1 = undefined;\n        var bakeCollectionAwait_1 = undefined;\n        var funcFactory = eval(funcFactoryCode);\n        return funcFactory(collection);\n    }\n}\nexports.bakeCollection = bakeCollection;\nfunction bakeCollectionAwait(collection, fixedArgsNum) {\n    if (collection.length === 0)\n        return exports.BAKED_EMPTY_FUNC;\n    else if (collection.length === 1)\n        return collection[0];\n    var funcFactoryCode;\n    if (collection.length < FORLOOP_FALLBACK) {\n        var argsDefCode = generateArgsDefCode(fixedArgsNum);\n        var _a = generateBodyPartsCode(argsDefCode, collection.length), funcDefCode = _a.funcDefCode, funcCallCode = _a.funcCallCode;\n        funcFactoryCode = \"(function(collection) {\\n            \".concat(funcDefCode, \"\\n            collection = undefined;\\n            return (function(\").concat(argsDefCode, \") {\\n                return Promise.all([ \").concat(funcCallCode, \" ]);\\n            });\\n        })\");\n    }\n    else {\n        var argsDefCode = generateArgsDefCode(fixedArgsNum);\n        funcFactoryCode = \"(function(collection) {\\n            return (function(\".concat(argsDefCode, \") {\\n                var promises = Array(collection.length);\\n                for (var i = 0; i < collection.length; ++i) {\\n                    promises[i] = collection[i](\").concat(argsDefCode, \");\\n                }\\n                return Promise.all(promises);\\n            });\\n        })\");\n    }\n    {\n        // isolate\n        var bakeCollection_2 = undefined;\n        var fixedArgsNum_2 = undefined;\n        var bakeCollectionVariadic_2 = undefined;\n        var bakeCollectionAwait_2 = undefined;\n        var funcFactory = eval(funcFactoryCode);\n        return funcFactory(collection);\n    }\n}\nexports.bakeCollectionAwait = bakeCollectionAwait;\nfunction bakeCollectionVariadic(collection) {\n    if (collection.length === 0)\n        return exports.BAKED_EMPTY_FUNC;\n    else if (collection.length === 1)\n        return collection[0];\n    var funcFactoryCode;\n    if (collection.length < FORLOOP_FALLBACK) {\n        var _a = generateBodyPartsVariadicCode(collection.length), funcDefCode = _a.funcDefCode, funcCallCode = _a.funcCallCode;\n        funcFactoryCode = \"(function(collection) {\\n            \".concat(funcDefCode, \"\\n            collection = undefined;\\n            return (function() {\\n                \").concat(funcCallCode, \"\\n            });\\n        })\");\n    }\n    else {\n        funcFactoryCode = \"(function(collection) {\\n            return (function() {\\n                for (var i = 0; i < collection.length; ++i) {\\n                    collection[i].apply(undefined, arguments);\\n                }\\n            });\\n        })\";\n    }\n    {\n        // isolate\n        var bakeCollection_3 = undefined;\n        var fixedArgsNum = undefined;\n        var bakeCollectionVariadic_3 = undefined;\n        var bakeCollectionAwait_3 = undefined;\n        var funcFactory = eval(funcFactoryCode);\n        return funcFactory(collection);\n    }\n}\nexports.bakeCollectionVariadic = bakeCollectionVariadic;\n//# sourceMappingURL=bake-collection.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./task-collection\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TaskCollection = void 0;\nvar utils_1 = require(\"./utils\");\nvar bake_collection_1 = require(\"./bake-collection\");\nfunction push_norebuild(a, b /*, ...func: Func[] */) {\n    var len = this.length;\n    if (len > 1) { // tasks is array\n        if (b) { // if multiple args\n            var _a;\n            (_a = this._tasks).push.apply(_a, arguments);\n            this.length += arguments.length;\n        }\n        else { // if single arg (most often case)\n            this._tasks.push(a);\n            this.length++;\n        }\n    }\n    else { // tasks is (function or null)\n        if (b) { // if multiple args\n            if (len === 1) { // if this._tasks is function\n                var newAr = Array(1 + arguments.length);\n                newAr.push(newAr);\n                newAr.push.apply(newAr, arguments);\n                this._tasks = newAr;\n            }\n            else {\n                var newAr = Array(arguments.length);\n                newAr.push.apply(newAr, arguments);\n                this._tasks = newAr;\n            }\n            this.length += arguments.length;\n        }\n        else { // if single arg (most often case)\n            if (len === 1)\n                this._tasks = [this._tasks, a];\n            else\n                this._tasks = a;\n            this.length++;\n        }\n    }\n}\nfunction push_rebuild(a, b /*, ...func: Func[] */) {\n    var len = this.length;\n    if (len > 1) { // tasks is array\n        if (b) { // if multiple args\n            var _a;\n            (_a = this._tasks).push.apply(_a, arguments);\n            this.length += arguments.length;\n        }\n        else { // if single arg (most often case)\n            this._tasks.push(a);\n            this.length++;\n        }\n    }\n    else { // tasks is (function or null)\n        if (b) { // if multiple args\n            if (len === 1) { // if this._tasks is function\n                var newAr = Array(1 + arguments.length);\n                newAr.push(newAr);\n                newAr.push.apply(newAr, arguments);\n                this._tasks = newAr;\n            }\n            else {\n                var newAr = Array(arguments.length);\n                newAr.push.apply(newAr, arguments);\n                this._tasks = newAr;\n            }\n            this.length += arguments.length;\n        }\n        else { // if single arg (most often case)\n            if (len === 1)\n                this._tasks = [this._tasks, a];\n            else\n                this._tasks = a;\n            this.length++;\n        }\n    }\n    if (this.firstEmitBuildStrategy)\n        this.call = rebuild_on_first_call;\n    else\n        this.rebuild();\n}\nfunction removeLast_norebuild(a) {\n    if (this.length === 0)\n        return;\n    if (this.length === 1) {\n        if (this._tasks === a) {\n            this.length = 0;\n        }\n    }\n    else {\n        (0, utils_1._fast_remove_single)(this._tasks, this._tasks.lastIndexOf(a));\n        if (this._tasks.length === 1) {\n            this._tasks = this._tasks[0];\n            this.length = 1;\n        }\n        else\n            this.length = this._tasks.length;\n    }\n}\nfunction removeLast_rebuild(a) {\n    if (this.length === 0)\n        return;\n    if (this.length === 1) {\n        if (this._tasks === a) {\n            this.length = 0;\n        }\n        if (this.firstEmitBuildStrategy) {\n            this.call = bake_collection_1.BAKED_EMPTY_FUNC;\n            return;\n        }\n        else {\n            this.rebuild();\n            return;\n        }\n    }\n    else {\n        (0, utils_1._fast_remove_single)(this._tasks, this._tasks.lastIndexOf(a));\n        if (this._tasks.length === 1) {\n            this._tasks = this._tasks[0];\n            this.length = 1;\n        }\n        else\n            this.length = this._tasks.length;\n    }\n    if (this.firstEmitBuildStrategy)\n        this.call = rebuild_on_first_call;\n    else\n        this.rebuild();\n}\nfunction insert_norebuild(index) {\n    var _b;\n    var func = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        func[_i - 1] = arguments[_i];\n    }\n    if (this.length === 0) {\n        this._tasks = func;\n        this.length = 1;\n    }\n    else if (this.length === 1) {\n        func.unshift(this._tasks);\n        this._tasks = func;\n        this.length = this._tasks.length;\n    }\n    else {\n        (_b = this._tasks).splice.apply(_b, __spreadArray([index, 0], func, false));\n        this.length = this._tasks.length;\n    }\n}\nfunction insert_rebuild(index) {\n    var _b;\n    var func = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        func[_i - 1] = arguments[_i];\n    }\n    if (this.length === 0) {\n        this._tasks = func;\n        this.length = 1;\n    }\n    else if (this.length === 1) {\n        func.unshift(this._tasks);\n        this._tasks = func;\n        this.length = this._tasks.length;\n    }\n    else {\n        (_b = this._tasks).splice.apply(_b, __spreadArray([index, 0], func, false));\n        this.length = this._tasks.length;\n    }\n    if (this.firstEmitBuildStrategy)\n        this.call = rebuild_on_first_call;\n    else\n        this.rebuild();\n}\nfunction rebuild_noawait() {\n    if (this.length === 0)\n        this.call = bake_collection_1.BAKED_EMPTY_FUNC;\n    else if (this.length === 1)\n        this.call = this._tasks;\n    else\n        this.call = (0, bake_collection_1.bakeCollection)(this._tasks, this.argsNum);\n}\nfunction rebuild_await() {\n    if (this.length === 0)\n        this.call = bake_collection_1.BAKED_EMPTY_FUNC;\n    else if (this.length === 1)\n        this.call = this._tasks;\n    else\n        this.call = (0, bake_collection_1.bakeCollectionAwait)(this._tasks, this.argsNum);\n}\nfunction rebuild_on_first_call() {\n    this.rebuild();\n    this.call.apply(undefined, arguments);\n}\nvar TaskCollection = /** @class */ (function () {\n    function TaskCollection(argsNum, autoRebuild, initialTasks, awaitTasks) {\n        if (autoRebuild === void 0) { autoRebuild = true; }\n        if (initialTasks === void 0) { initialTasks = null; }\n        if (awaitTasks === void 0) { awaitTasks = false; }\n        this.awaitTasks = awaitTasks;\n        this.call = bake_collection_1.BAKED_EMPTY_FUNC;\n        this.argsNum = argsNum;\n        this.firstEmitBuildStrategy = true;\n        if (awaitTasks)\n            this.rebuild = rebuild_await.bind(this);\n        else\n            this.rebuild = rebuild_noawait.bind(this);\n        this.setAutoRebuild(autoRebuild);\n        if (initialTasks) {\n            if (typeof initialTasks === 'function') {\n                this._tasks = initialTasks;\n                this.length = 1;\n            }\n            else {\n                this._tasks = initialTasks;\n                this.length = initialTasks.length;\n            }\n        }\n        else {\n            this._tasks = null;\n            this.length = 0;\n        }\n        if (autoRebuild)\n            this.rebuild();\n    }\n    return TaskCollection;\n}());\nexports.TaskCollection = TaskCollection;\nfunction fastClear() {\n    this._tasks = null;\n    this.length = 0;\n    this.call = bake_collection_1.BAKED_EMPTY_FUNC;\n}\nfunction clear() {\n    this._tasks = null;\n    this.length = 0;\n    this.call = bake_collection_1.BAKED_EMPTY_FUNC;\n}\nfunction growArgsNum(argsNum) {\n    if (this.argsNum < argsNum) {\n        this.argsNum = argsNum;\n        if (this.firstEmitBuildStrategy)\n            this.call = rebuild_on_first_call;\n        else\n            this.rebuild();\n    }\n}\nfunction setAutoRebuild(newVal) {\n    if (newVal) {\n        this.push = push_rebuild.bind(this);\n        this.insert = insert_rebuild.bind(this);\n        this.removeLast = removeLast_rebuild.bind(this);\n    }\n    else {\n        this.push = push_norebuild.bind(this);\n        this.insert = insert_norebuild.bind(this);\n        this.removeLast = removeLast_norebuild.bind(this);\n    }\n}\n;\nfunction tasksAsArray() {\n    if (this.length === 0)\n        return [];\n    if (this.length === 1)\n        return [this._tasks];\n    return this._tasks;\n}\nfunction setTasks(tasks) {\n    if (tasks.length === 0) {\n        this.length = 0;\n        this.call = bake_collection_1.BAKED_EMPTY_FUNC;\n    }\n    else if (tasks.length === 1) {\n        this.length = 1;\n        this.call = tasks[0];\n        this._tasks = tasks[0];\n    }\n    else {\n        this.length = tasks.length;\n        this._tasks = tasks;\n        if (this.firstEmitBuildStrategy)\n            this.call = rebuild_on_first_call;\n        else\n            this.rebuild();\n    }\n}\nTaskCollection.prototype.fastClear = fastClear;\nTaskCollection.prototype.clear = clear;\nTaskCollection.prototype.growArgsNum = growArgsNum;\nTaskCollection.prototype.setAutoRebuild = setAutoRebuild;\nTaskCollection.prototype.tasksAsArray = tasksAsArray;\nTaskCollection.prototype.setTasks = setTasks;\n//# sourceMappingURL=task-collection.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports._fast_remove_single = void 0;\nfunction _fast_remove_single(arr, index) {\n    if (index === -1)\n        return;\n    if (index === 0)\n        arr.shift();\n    else if (index === arr.length - 1)\n        arr.length = arr.length - 1;\n    else\n        arr.splice(index, 1);\n}\nexports._fast_remove_single = _fast_remove_single;\n//# sourceMappingURL=utils.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=types.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.nullObj = void 0;\nfunction nullObj() {\n    var x = {};\n    x.__proto__ = null;\n    return x;\n}\nexports.nullObj = nullObj;\n//# sourceMappingURL=utils.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.LRUCache = void 0;\r\nconst LRUCacheNode_1 = require(\"./LRUCacheNode\");\r\n/**\r\n * A key value cache that implements the LRU policy.\r\n *\r\n * @typeparam TKey The type of the keys in the cache. Defaults to `string`.\r\n * @typeparam TValue The type of the values in the cache. Defaults to `any`.\r\n *\r\n * @see {@link https://en.wikipedia.org/wiki/Cache_replacement_policies#Least_recently_used_(LRU)}\r\n */\r\nclass LRUCache {\r\n    /**\r\n     * Creates a new instance of the LRUCache.\r\n     *\r\n     * @param options Additional configuration options for the LRUCache.\r\n     *\r\n     * @example\r\n     * ```typescript\r\n     * // No options.\r\n     * const cache = new LRUCache();\r\n     *\r\n     * // With options.\r\n     * const cache = new LRUCache({\r\n     *  entryExpirationTimeInMS: 10000\r\n     * });\r\n     * ```\r\n     */\r\n    constructor(options) {\r\n        this.lookupTable = new Map();\r\n        this.head = null;\r\n        this.tail = null;\r\n        const { maxSize = 25, entryExpirationTimeInMS = null, onEntryEvicted, onEntryMarkedAsMostRecentlyUsed, cloneFn, clone } = options !== null && options !== void 0 ? options : {};\r\n        if (Number.isNaN(maxSize) || maxSize <= 0) {\r\n            throw new Error('maxSize must be greater than 0.');\r\n        }\r\n        if (typeof entryExpirationTimeInMS === 'number' &&\r\n            (entryExpirationTimeInMS <= 0 || Number.isNaN(entryExpirationTimeInMS))) {\r\n            throw new Error('entryExpirationTimeInMS must either be null (no expiry) or greater than 0');\r\n        }\r\n        this.maxSizeInternal = maxSize;\r\n        this.entryExpirationTimeInMS = entryExpirationTimeInMS;\r\n        this.onEntryEvicted = onEntryEvicted;\r\n        this.onEntryMarkedAsMostRecentlyUsed = onEntryMarkedAsMostRecentlyUsed;\r\n        this.clone = clone;\r\n        this.cloneFn = cloneFn;\r\n    }\r\n    /**\r\n     * Returns the number of entries in the LRUCache object.\r\n     * If the cache has entryExpirationTimeInMS set, expired entries will be removed before the size is returned.\r\n     *\r\n     * @returns The number of entries in the cache.\r\n     *\r\n     * @example\r\n     * ```typescript\r\n     * const cache = new LRUCache();\r\n     *\r\n     * cache.set('testKey', 'testValue');\r\n     *\r\n     * const size = cache.size;\r\n     *\r\n     * // Will log 1\r\n     * console.log(size);\r\n     * ```\r\n     */\r\n    get size() {\r\n        this.cleanCache();\r\n        return this.lookupTable.size;\r\n    }\r\n    /**\r\n     * Returns the number of entries that can still be added to the LRUCache without evicting existing entries.\r\n     *\r\n     * @returns The number of entries that can still be added without evicting existing entries.\r\n     *\r\n     * @example\r\n     * ```typescript\r\n     * const cache = new LRUCache({ maxSize: 10 });\r\n     *\r\n     * cache.set('testKey', 'testValue');\r\n     *\r\n     * const remainingSize = cache.remainingSize;\r\n     *\r\n     * // Will log 9 due to 9 spots remaining before reaching maxSize of 10.\r\n     * console.log(remainingSize);\r\n     * ```\r\n     */\r\n    get remainingSize() {\r\n        return this.maxSizeInternal - this.size;\r\n    }\r\n    /**\r\n     * Returns the most recently used (newest) entry in the cache.\r\n     * This will not mark the entry as recently used.\r\n     * If the newest node is expired, it will be removed.\r\n     *\r\n     * @returns The most recently used (newest) entry in the cache.\r\n     *\r\n     * @example\r\n     * ```typescript\r\n     * const cache = new LRUCache({ maxSize: 10 });\r\n     *\r\n     * cache.set('testKey', 'testValue');\r\n     *\r\n     * const newest = cache.newest;\r\n     *\r\n     * // Will log testValue\r\n     * console.log(newest.value);\r\n     *\r\n     * // Will log testKey\r\n     * console.log(newest.key);\r\n     * ```\r\n     */\r\n    get newest() {\r\n        if (!this.head) {\r\n            return null;\r\n        }\r\n        if (this.head.isExpired) {\r\n            this.removeNodeFromListAndLookupTable(this.head);\r\n            return this.newest;\r\n        }\r\n        return this.mapNodeToEntry(this.head);\r\n    }\r\n    /**\r\n     * Returns the least recently used (oldest) entry in the cache.\r\n     * This will not mark the entry as recently used.\r\n     * If the oldest node is expired, it will be removed.\r\n     *\r\n     * @returns The least recently used (oldest) entry in the cache.\r\n     *\r\n     * @example\r\n     * ```typescript\r\n     * const cache = new LRUCache({ maxSize: 10 });\r\n     *\r\n     * cache.set('testKey', 'testValue');\r\n     *\r\n     * const oldest = cache.oldest;\r\n     *\r\n     * // Will log testValue\r\n     * console.log(oldest.value);\r\n     *\r\n     * // Will log testKey\r\n     * console.log(oldest.key);\r\n     * ```\r\n     */\r\n    get oldest() {\r\n        if (!this.tail) {\r\n            return null;\r\n        }\r\n        if (this.tail.isExpired) {\r\n            this.removeNodeFromListAndLookupTable(this.tail);\r\n            return this.oldest;\r\n        }\r\n        return this.mapNodeToEntry(this.tail);\r\n    }\r\n    /**\r\n     * Gets or sets the maxSize of the cache.\r\n     * This will evict the least recently used entries if needed to reach new maxSize.\r\n     *\r\n     * @param value The new value for maxSize. Must be greater than 0.\r\n     *\r\n     * @example\r\n     * ```typescript\r\n     * const cache = new LRUCache({ maxSize: 10 });\r\n     *\r\n     * cache.set('testKey', 'testValue');\r\n     *\r\n     * // Will be 10\r\n     * const maxSize = cache.maxSize;\r\n     *\r\n     * // Set new maxSize to 5. If there are more than 5 items in the cache, the least recently used entries will be removed until cache size is 5.\r\n     * cache.maxSize = 5;\r\n     * ```\r\n     */\r\n    get maxSize() {\r\n        return this.maxSizeInternal;\r\n    }\r\n    set maxSize(value) {\r\n        if (Number.isNaN(value) || value <= 0) {\r\n            throw new Error('maxSize must be greater than 0.');\r\n        }\r\n        this.maxSizeInternal = value;\r\n        this.enforceSizeLimit();\r\n    }\r\n    /**\r\n     * Sets the value for the key in the LRUCache object. Returns the LRUCache object.\r\n     * This marks the newly added entry as the most recently used entry.\r\n     * If adding the new entry makes the cache size go above maxSize,\r\n     * this will evict the least recently used entries until size is equal to maxSize.\r\n     *\r\n     * @param key The key of the entry.\r\n     * @param value The value to set for the key.\r\n     * @param entryOptions Additional configuration options for the cache entry.\r\n     *\r\n     * @returns The LRUCache instance.\r\n     *\r\n     * @example\r\n     * ```typescript\r\n     * const cache = new LRUCache();\r\n     *\r\n     * // Set the key testKey to value testValue\r\n     * cache.set('testKey', 'testValue');\r\n     *\r\n     * // Set the key key2 to value value2. Pass in optional options.\r\n     * cache.set('key2', 'value2', { entryExpirationTimeInMS: 10 });\r\n     * ```\r\n     */\r\n    set(key, value, entryOptions) {\r\n        const currentNodeForKey = this.lookupTable.get(key);\r\n        if (currentNodeForKey) {\r\n            this.removeNodeFromListAndLookupTable(currentNodeForKey);\r\n        }\r\n        const node = new LRUCacheNode_1.LRUCacheNode(key, value, {\r\n            entryExpirationTimeInMS: this.entryExpirationTimeInMS,\r\n            onEntryEvicted: this.onEntryEvicted,\r\n            onEntryMarkedAsMostRecentlyUsed: this.onEntryMarkedAsMostRecentlyUsed,\r\n            clone: this.clone,\r\n            cloneFn: this.cloneFn,\r\n            ...entryOptions\r\n        });\r\n        this.setNodeAsHead(node);\r\n        this.lookupTable.set(key, node);\r\n        this.enforceSizeLimit();\r\n        return this;\r\n    }\r\n    /**\r\n     * Returns the value associated to the key, or null if there is none or if the entry is expired.\r\n     * If an entry is returned, this marks the returned entry as the most recently used entry.\r\n     *\r\n     * @param key The key of the entry to get.\r\n     *\r\n     * @returns The cached value or null.\r\n     *\r\n     * @example\r\n     * ```typescript\r\n     * const cache = new LRUCache();\r\n     *\r\n     * // Set the key testKey to value testValue\r\n     * cache.set('testKey', 'testValue');\r\n     *\r\n     * // Will be 'testValue'. Entry will now be most recently used.\r\n     * const item1 = cache.get('testKey');\r\n     *\r\n     * // Will be null\r\n     * const item2 = cache.get('keyNotInCache');\r\n     * ```\r\n     */\r\n    get(key) {\r\n        const node = this.lookupTable.get(key);\r\n        if (!node) {\r\n            return null;\r\n        }\r\n        if (node.isExpired) {\r\n            this.removeNodeFromListAndLookupTable(node);\r\n            return null;\r\n        }\r\n        this.setNodeAsHead(node);\r\n        return node.value;\r\n    }\r\n    /**\r\n     * Returns the value associated to the key, or null if there is none or if the entry is expired.\r\n     * If an entry is returned, this will not mark the entry as most recently accessed.\r\n     * Useful if a value is needed but the order of the cache should not be changed.\r\n     *\r\n     * @param key The key of the entry to get.\r\n     *\r\n     * @returns The cached value or null.\r\n     *\r\n     * @example\r\n     * ```typescript\r\n     * const cache = new LRUCache();\r\n     *\r\n     * // Set the key testKey to value testValue\r\n     * cache.set('testKey', 'testValue');\r\n     *\r\n     * // Will be 'testValue'\r\n     * const item1 = cache.peek('testKey');\r\n     *\r\n     * // Will be null\r\n     * const item2 = cache.peek('keyNotInCache');\r\n     * ```\r\n     */\r\n    peek(key) {\r\n        const node = this.lookupTable.get(key);\r\n        if (!node) {\r\n            return null;\r\n        }\r\n        if (node.isExpired) {\r\n            this.removeNodeFromListAndLookupTable(node);\r\n            return null;\r\n        }\r\n        return node.value;\r\n    }\r\n    /**\r\n     * Deletes the entry for the passed in key.\r\n     *\r\n     * @param key The key of the entry to delete\r\n     *\r\n     * @returns True if an element in the LRUCache object existed and has been removed,\r\n     * or false if the element does not exist.\r\n     *\r\n     * @example\r\n     * ```typescript\r\n     * const cache = new LRUCache();\r\n     *\r\n     * // Set the key testKey to value testValue\r\n     * cache.set('testKey', 'testValue');\r\n     *\r\n     * // Will be true\r\n     * const wasDeleted = cache.delete('testKey');\r\n     *\r\n     * // Will be false\r\n     * const wasDeleted2 = cache.delete('keyNotInCache');\r\n     * ```\r\n     */\r\n    delete(key) {\r\n        const node = this.lookupTable.get(key);\r\n        if (!node) {\r\n            return false;\r\n        }\r\n        return this.removeNodeFromListAndLookupTable(node);\r\n    }\r\n    /**\r\n     * Returns a boolean asserting whether a value has been associated to the key in the LRUCache object or not.\r\n     * This does not mark the entry as recently used.\r\n     * If the cache has a key but the entry is expired, it will be removed and false will be returned.\r\n     *\r\n     * @param key The key of the entry to check if exists\r\n     *\r\n     * @returns true if the cache contains the supplied key. False if not.\r\n     *\r\n     * @example\r\n     * ```typescript\r\n     * const cache = new LRUCache();\r\n     *\r\n     * // Set the key testKey to value testValue\r\n     * cache.set('testKey', 'testValue');\r\n     *\r\n     * // Will be true\r\n     * const wasDeleted = cache.has('testKey');\r\n     *\r\n     * // Will be false\r\n     * const wasDeleted2 = cache.has('keyNotInCache');\r\n     * ```\r\n     */\r\n    has(key) {\r\n        const node = this.lookupTable.get(key);\r\n        if (!node) {\r\n            return false;\r\n        }\r\n        if (node.isExpired) {\r\n            this.removeNodeFromListAndLookupTable(node);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * Removes all entries in the cache.\r\n     *\r\n     * @example\r\n     * ```typescript\r\n     * const cache = new LRUCache();\r\n     *\r\n     * // Set the key testKey to value testValue\r\n     * cache.set('testKey', 'testValue');\r\n     *\r\n     * // Clear cache.\r\n     * cache.clear();\r\n     * ```\r\n     */\r\n    clear() {\r\n        this.head = null;\r\n        this.tail = null;\r\n        this.lookupTable.clear();\r\n    }\r\n    /**\r\n     * Searches the cache for an entry matching the passed in condition.\r\n     * Expired entries will be skipped (and removed).\r\n     * If multiply entries in the cache match the condition, the most recently used entry will be returned.\r\n     * If an entry is returned, this marks the returned entry as the most recently used entry.\r\n     *\r\n     * @param condition The condition to apply to each entry in the\r\n     *\r\n     * @returns The first cache entry to match the condition. Null if none match.\r\n     *\r\n     * @example\r\n     * ```typescript\r\n     * const cache = new LRUCache();\r\n     *\r\n     * // Set the key testKey to value testValue\r\n     * cache.set('testKey', 'testValue');\r\n     *\r\n     * // item will be { key: 'testKey', value: 'testValue }\r\n     * const item = cache.find(entry => {\r\n     *   const { key, value } = entry;\r\n     *\r\n     *   if (key === 'testKey' || value === 'something') {\r\n     *     return true;\r\n     *   }\r\n     *\r\n     *   return false;\r\n     * });\r\n     *\r\n     * // item2 will be null\r\n     * const item2 = cache.find(entry => entry.key === 'notInCache');\r\n     * ```\r\n     */\r\n    find(condition) {\r\n        let node = this.head;\r\n        while (node) {\r\n            if (node.isExpired) {\r\n                const next = node.next;\r\n                this.removeNodeFromListAndLookupTable(node);\r\n                node = next;\r\n                continue;\r\n            }\r\n            const entry = this.mapNodeToEntry(node);\r\n            if (condition(entry)) {\r\n                this.setNodeAsHead(node);\r\n                return entry;\r\n            }\r\n            node = node.next;\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Iterates over and applies the callback function to each entry in the cache.\r\n     * Iterates in order from most recently accessed entry to least recently.\r\n     * Expired entries will be skipped (and removed).\r\n     * No entry will be marked as recently used.\r\n     *\r\n     * @param callback the callback function to apply to the entry\r\n     *\r\n     * @example\r\n     * ```typescript\r\n     * const cache = new LRUCache();\r\n     *\r\n     * // Set the key testKey to value testValue\r\n     * cache.set('testKey', 'testValue');\r\n     *\r\n     * cache.forEach((key, value, index) => {\r\n     *   // do something with key, value, and/or index\r\n     * });\r\n     * ```\r\n     */\r\n    forEach(callback) {\r\n        let node = this.head;\r\n        let index = 0;\r\n        while (node) {\r\n            if (node.isExpired) {\r\n                const next = node.next;\r\n                this.removeNodeFromListAndLookupTable(node);\r\n                node = next;\r\n                continue;\r\n            }\r\n            callback(node.value, node.key, index);\r\n            node = node.next;\r\n            index++;\r\n        }\r\n    }\r\n    /**\r\n     * Creates a Generator which can be used with for ... of ... to iterate over the cache values.\r\n     * Iterates in order from most recently accessed entry to least recently.\r\n     * Expired entries will be skipped (and removed).\r\n     * No entry will be marked as accessed.\r\n     *\r\n     * @returns A Generator for the cache values.\r\n     *\r\n     * @example\r\n     * ```typescript\r\n     * const cache = new LRUCache();\r\n     *\r\n     * // Set the key testKey to value testValue\r\n     * cache.set('testKey', 'testValue');\r\n     *\r\n     * for (const value of cache.values()) {\r\n     *   // do something with the value\r\n     * }\r\n     * ```\r\n     */\r\n    *values() {\r\n        let node = this.head;\r\n        while (node) {\r\n            if (node.isExpired) {\r\n                const next = node.next;\r\n                this.removeNodeFromListAndLookupTable(node);\r\n                node = next;\r\n                continue;\r\n            }\r\n            yield node.value;\r\n            node = node.next;\r\n        }\r\n    }\r\n    /**\r\n     * Creates a Generator which can be used with for ... of ... to iterate over the cache keys.\r\n     * Iterates in order from most recently accessed entry to least recently.\r\n     * Expired entries will be skipped (and removed).\r\n     * No entry will be marked as accessed.\r\n     *\r\n     * @returns A Generator for the cache keys.\r\n     *\r\n     * @example\r\n     * ```typescript\r\n     * const cache = new LRUCache();\r\n     *\r\n     * // Set the key testKey to value testValue\r\n     * cache.set('testKey', 'testValue');\r\n     *\r\n     * for (const key of cache.keys()) {\r\n     *   // do something with the key\r\n     * }\r\n     * ```\r\n     */\r\n    *keys() {\r\n        let node = this.head;\r\n        while (node) {\r\n            if (node.isExpired) {\r\n                const next = node.next;\r\n                this.removeNodeFromListAndLookupTable(node);\r\n                node = next;\r\n                continue;\r\n            }\r\n            yield node.key;\r\n            node = node.next;\r\n        }\r\n    }\r\n    /**\r\n     * Creates a Generator which can be used with for ... of ... to iterate over the cache entries.\r\n     * Iterates in order from most recently accessed entry to least recently.\r\n     * Expired entries will be skipped (and removed).\r\n     * No entry will be marked as accessed.\r\n     *\r\n     * @returns A Generator for the cache entries.\r\n     *\r\n     * @example\r\n     * ```typescript\r\n     * const cache = new LRUCache();\r\n     *\r\n     * // Set the key testKey to value testValue\r\n     * cache.set('testKey', 'testValue');\r\n     *\r\n     * for (const entry of cache.entries()) {\r\n     *   const { key, value } = entry;\r\n     *   // do something with the entry\r\n     * }\r\n     * ```\r\n     */\r\n    *entries() {\r\n        let node = this.head;\r\n        while (node) {\r\n            if (node.isExpired) {\r\n                const next = node.next;\r\n                this.removeNodeFromListAndLookupTable(node);\r\n                node = next;\r\n                continue;\r\n            }\r\n            yield this.mapNodeToEntry(node);\r\n            node = node.next;\r\n        }\r\n    }\r\n    /**\r\n     * Creates a Generator which can be used with for ... of ... to iterate over the cache entries.\r\n     * Iterates in order from most recently accessed entry to least recently.\r\n     * Expired entries will be skipped (and removed).\r\n     * No entry will be marked as accessed.\r\n     *\r\n     * @returns A Generator for the cache entries.\r\n     *\r\n     * @example\r\n     * ```typescript\r\n     * const cache = new LRUCache();\r\n     *\r\n     * // Set the key testKey to value testValue\r\n     * cache.set('testKey', 'testValue');\r\n     *\r\n     * for (const entry of cache) {\r\n     *   const { key, value } = entry;\r\n     *   // do something with the entry\r\n     * }\r\n     * ```\r\n     */\r\n    *[Symbol.iterator]() {\r\n        let node = this.head;\r\n        while (node) {\r\n            if (node.isExpired) {\r\n                const next = node.next;\r\n                this.removeNodeFromListAndLookupTable(node);\r\n                node = next;\r\n                continue;\r\n            }\r\n            yield this.mapNodeToEntry(node);\r\n            node = node.next;\r\n        }\r\n    }\r\n    enforceSizeLimit() {\r\n        let node = this.tail;\r\n        while (node !== null && this.size > this.maxSizeInternal) {\r\n            const prev = node.prev;\r\n            this.removeNodeFromListAndLookupTable(node);\r\n            node = prev;\r\n        }\r\n    }\r\n    mapNodeToEntry({ key, value }) {\r\n        return {\r\n            key,\r\n            value\r\n        };\r\n    }\r\n    setNodeAsHead(node) {\r\n        this.removeNodeFromList(node);\r\n        if (!this.head) {\r\n            this.head = node;\r\n            this.tail = node;\r\n        }\r\n        else {\r\n            node.next = this.head;\r\n            this.head.prev = node;\r\n            this.head = node;\r\n        }\r\n        node.invokeOnEntryMarkedAsMostRecentlyUsed();\r\n    }\r\n    removeNodeFromList(node) {\r\n        if (node.prev !== null) {\r\n            node.prev.next = node.next;\r\n        }\r\n        if (node.next !== null) {\r\n            node.next.prev = node.prev;\r\n        }\r\n        if (this.head === node) {\r\n            this.head = node.next;\r\n        }\r\n        if (this.tail === node) {\r\n            this.tail = node.prev;\r\n        }\r\n        node.next = null;\r\n        node.prev = null;\r\n    }\r\n    removeNodeFromListAndLookupTable(node) {\r\n        node.invokeOnEvicted();\r\n        this.removeNodeFromList(node);\r\n        return this.lookupTable.delete(node.key);\r\n    }\r\n    cleanCache() {\r\n        // Don't spend time cleaning if entries don't expire.\r\n        if (!this.entryExpirationTimeInMS) {\r\n            return;\r\n        }\r\n        const expiredNodes = [];\r\n        for (const node of this.lookupTable.values()) {\r\n            if (node.isExpired) {\r\n                expiredNodes.push(node);\r\n            }\r\n        }\r\n        expiredNodes.forEach(node => this.removeNodeFromListAndLookupTable(node));\r\n    }\r\n}\r\nexports.LRUCache = LRUCache;\r\n//# sourceMappingURL=LRUCache.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.LRUCacheNode = void 0;\r\nclass LRUCacheNode {\r\n    constructor(key, value, options) {\r\n        const { entryExpirationTimeInMS = null, next = null, prev = null, onEntryEvicted, onEntryMarkedAsMostRecentlyUsed, clone, cloneFn } = options !== null && options !== void 0 ? options : {};\r\n        if (typeof entryExpirationTimeInMS === 'number' &&\r\n            (entryExpirationTimeInMS <= 0 || Number.isNaN(entryExpirationTimeInMS))) {\r\n            throw new Error('entryExpirationTimeInMS must either be null (no expiry) or greater than 0');\r\n        }\r\n        this.clone = clone !== null && clone !== void 0 ? clone : false;\r\n        this.cloneFn = cloneFn !== null && cloneFn !== void 0 ? cloneFn : this.defaultClone;\r\n        this.key = key;\r\n        this.internalValue = this.clone ? this.cloneFn(value) : value;\r\n        this.created = Date.now();\r\n        this.entryExpirationTimeInMS = entryExpirationTimeInMS;\r\n        this.next = next;\r\n        this.prev = prev;\r\n        this.onEntryEvicted = onEntryEvicted;\r\n        this.onEntryMarkedAsMostRecentlyUsed = onEntryMarkedAsMostRecentlyUsed;\r\n    }\r\n    get value() {\r\n        return this.clone ? this.cloneFn(this.internalValue) : this.internalValue;\r\n    }\r\n    get isExpired() {\r\n        return typeof this.entryExpirationTimeInMS === 'number' && Date.now() - this.created > this.entryExpirationTimeInMS;\r\n    }\r\n    invokeOnEvicted() {\r\n        if (this.onEntryEvicted) {\r\n            const { key, value, isExpired } = this;\r\n            this.onEntryEvicted({ key, value, isExpired });\r\n        }\r\n    }\r\n    invokeOnEntryMarkedAsMostRecentlyUsed() {\r\n        if (this.onEntryMarkedAsMostRecentlyUsed) {\r\n            const { key, value } = this;\r\n            this.onEntryMarkedAsMostRecentlyUsed({ key, value });\r\n        }\r\n    }\r\n    defaultClone(value) {\r\n        if (typeof value === 'boolean' || typeof value === 'string' || typeof value === 'number') {\r\n            return value;\r\n        }\r\n        return JSON.parse(JSON.stringify(value));\r\n    }\r\n}\r\nexports.LRUCacheNode = LRUCacheNode;\r\n//# sourceMappingURL=LRUCacheNode.js.map","\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__exportStar(require(\"./LRUCache\"), exports);\r\n//# sourceMappingURL=index.js.map","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","function number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nfunction bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`Expected boolean, not ${b}`);\n}\nfunction bytes(b, ...lengths) {\n    if (!(b instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nfunction hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nfunction exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nfunction output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nexport { number, bool, bytes, hash, exists, output };\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n//# sourceMappingURL=_assert.js.map","export const crypto = typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n//# sourceMappingURL=crypto.js.map","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated, we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\nconst u8a = (a) => a instanceof Uint8Array;\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    if (!u8a(bytes))\n        throw new Error('Uint8Array expected');\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const len = hex.length;\n    if (len % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + len);\n    const array = new Uint8Array(len / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!u8a(data))\n        throw new Error(`expected Uint8Array, got ${typeof data}`);\n    return data;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    const r = new Uint8Array(arrays.reduce((sum, a) => sum + a.length, 0));\n    let pad = 0; // walk through each item, ensure they have proper type\n    arrays.forEach((a) => {\n        if (!u8a(a))\n            throw new Error('Uint8Array expected');\n        r.set(a, pad);\n        pad += a.length;\n    });\n    return r;\n}\n// For runtime check if class implements interface\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nconst toStr = {}.toString;\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n        throw new Error('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexport function wrapConstructor(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexport function wrapXOFConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto && typeof crypto.getRandomValues === 'function') {\n        return crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n//# sourceMappingURL=utils.js.map","import { exists, output } from './_assert.js';\nimport { Hash, createView, toBytes } from './utils.js';\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nexport class SHA2 extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        exists(this);\n        const { view, buffer, blockLen } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        exists(this);\n        output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n//# sourceMappingURL=_sha2.js.map","import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n// SHA2-256 need to try 2^128 hashes to execute birthday attack.\n// BTC network is doing 2^67 hashes/sec as per early 2023.\n// Choice: a ? b : c\nconst Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = /* @__PURE__ */ new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nclass SHA256 extends SHA2 {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = IV[0] | 0;\n        this.B = IV[1] | 0;\n        this.C = IV[2] | 0;\n        this.D = IV[3] | 0;\n        this.E = IV[4] | 0;\n        this.F = IV[5] | 0;\n        this.G = IV[6] | 0;\n        this.H = IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n    constructor() {\n        super();\n        this.A = 0xc1059ed8 | 0;\n        this.B = 0x367cd507 | 0;\n        this.C = 0x3070dd17 | 0;\n        this.D = 0xf70e5939 | 0;\n        this.E = 0xffc00b31 | 0;\n        this.F = 0x68581511 | 0;\n        this.G = 0x64f98fa7 | 0;\n        this.H = 0xbefa4fa4 | 0;\n        this.outputLen = 28;\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = /* @__PURE__ */ wrapConstructor(() => new SHA256());\nexport const sha224 = /* @__PURE__ */ wrapConstructor(() => new SHA224());\n//# sourceMappingURL=sha256.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// 100 lines of code in the file are duplicated from noble-hashes (utils).\n// This is OK: `abstract` directory does not use noble-hashes.\n// User may opt-in into using different hashing library. This way, noble-hashes\n// won't be included into their bundle.\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst u8a = (a) => a instanceof Uint8Array;\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    if (!u8a(bytes))\n        throw new Error('Uint8Array expected');\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\nexport function numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nexport function hexToNumber(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    // Big Endian\n    return BigInt(hex === '' ? '0' : `0x${hex}`);\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const len = hex.length;\n    if (len % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + len);\n    const array = new Uint8Array(len / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\n// BE: Big Endian, LE: Little Endian\nexport function bytesToNumberBE(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nexport function bytesToNumberLE(bytes) {\n    if (!u8a(bytes))\n        throw new Error('Uint8Array expected');\n    return hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()));\n}\nexport function numberToBytesBE(n, len) {\n    return hexToBytes(n.toString(16).padStart(len * 2, '0'));\n}\nexport function numberToBytesLE(n, len) {\n    return numberToBytesBE(n, len).reverse();\n}\n// Unpadded, rarely used\nexport function numberToVarBytesBE(n) {\n    return hexToBytes(numberToHexUnpadded(n));\n}\n/**\n * Takes hex string or Uint8Array, converts to Uint8Array.\n * Validates output length.\n * Will throw error for other types.\n * @param title descriptive title for an error e.g. 'private key'\n * @param hex hex string or Uint8Array\n * @param expectedLength optional, will compare to result array's length\n * @returns\n */\nexport function ensureBytes(title, hex, expectedLength) {\n    let res;\n    if (typeof hex === 'string') {\n        try {\n            res = hexToBytes(hex);\n        }\n        catch (e) {\n            throw new Error(`${title} must be valid hex string, got \"${hex}\". Cause: ${e}`);\n        }\n    }\n    else if (u8a(hex)) {\n        // Uint8Array.from() instead of hash.slice() because node.js Buffer\n        // is instance of Uint8Array, and its slice() creates **mutable** copy\n        res = Uint8Array.from(hex);\n    }\n    else {\n        throw new Error(`${title} must be hex string or Uint8Array`);\n    }\n    const len = res.length;\n    if (typeof expectedLength === 'number' && len !== expectedLength)\n        throw new Error(`${title} expected ${expectedLength} bytes, got ${len}`);\n    return res;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    const r = new Uint8Array(arrays.reduce((sum, a) => sum + a.length, 0));\n    let pad = 0; // walk through each item, ensure they have proper type\n    arrays.forEach((a) => {\n        if (!u8a(a))\n            throw new Error('Uint8Array expected');\n        r.set(a, pad);\n        pad += a.length;\n    });\n    return r;\n}\nexport function equalBytes(b1, b2) {\n    // We don't care about timing attacks here\n    if (b1.length !== b2.length)\n        return false;\n    for (let i = 0; i < b1.length; i++)\n        if (b1[i] !== b2[i])\n            return false;\n    return true;\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n// Bit operations\n/**\n * Calculates amount of bits in a bigint.\n * Same as `n.toString(2).length`\n */\nexport function bitLen(n) {\n    let len;\n    for (len = 0; n > _0n; n >>= _1n, len += 1)\n        ;\n    return len;\n}\n/**\n * Gets single bit at position.\n * NOTE: first bit position is 0 (same as arrays)\n * Same as `!!+Array.from(n.toString(2)).reverse()[pos]`\n */\nexport function bitGet(n, pos) {\n    return (n >> BigInt(pos)) & _1n;\n}\n/**\n * Sets single bit at position.\n */\nexport const bitSet = (n, pos, value) => {\n    return n | ((value ? _1n : _0n) << BigInt(pos));\n};\n/**\n * Calculate mask for N bits. Not using ** operator with bigints because of old engines.\n * Same as BigInt(`0b${Array(i).fill('1').join('')}`)\n */\nexport const bitMask = (n) => (_2n << BigInt(n - 1)) - _1n;\n// DRBG\nconst u8n = (data) => new Uint8Array(data); // creates Uint8Array\nconst u8fr = (arr) => Uint8Array.from(arr); // another shortcut\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nexport function createHmacDrbg(hashLen, qByteLen, hmacFn) {\n    if (typeof hashLen !== 'number' || hashLen < 2)\n        throw new Error('hashLen must be a number');\n    if (typeof qByteLen !== 'number' || qByteLen < 2)\n        throw new Error('qByteLen must be a number');\n    if (typeof hmacFn !== 'function')\n        throw new Error('hmacFn must be a function');\n    // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n    let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n    let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n    let i = 0; // Iterations counter, will throw when over 1000\n    const reset = () => {\n        v.fill(1);\n        k.fill(0);\n        i = 0;\n    };\n    const h = (...b) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)\n    const reseed = (seed = u8n()) => {\n        // HMAC-DRBG reseed() function. Steps D-G\n        k = h(u8fr([0x00]), seed); // k = hmac(k || v || 0x00 || seed)\n        v = h(); // v = hmac(k || v)\n        if (seed.length === 0)\n            return;\n        k = h(u8fr([0x01]), seed); // k = hmac(k || v || 0x01 || seed)\n        v = h(); // v = hmac(k || v)\n    };\n    const gen = () => {\n        // HMAC-DRBG generate() function\n        if (i++ >= 1000)\n            throw new Error('drbg: tried 1000 values');\n        let len = 0;\n        const out = [];\n        while (len < qByteLen) {\n            v = h();\n            const sl = v.slice();\n            out.push(sl);\n            len += v.length;\n        }\n        return concatBytes(...out);\n    };\n    const genUntil = (seed, pred) => {\n        reset();\n        reseed(seed); // Steps D-G\n        let res = undefined; // Step H: grind until k is in [1..n-1]\n        while (!(res = pred(gen())))\n            reseed();\n        reset();\n        return res;\n    };\n    return genUntil;\n}\n// Validating curves and fields\nconst validatorFns = {\n    bigint: (val) => typeof val === 'bigint',\n    function: (val) => typeof val === 'function',\n    boolean: (val) => typeof val === 'boolean',\n    string: (val) => typeof val === 'string',\n    stringOrUint8Array: (val) => typeof val === 'string' || val instanceof Uint8Array,\n    isSafeInteger: (val) => Number.isSafeInteger(val),\n    array: (val) => Array.isArray(val),\n    field: (val, object) => object.Fp.isValid(val),\n    hash: (val) => typeof val === 'function' && Number.isSafeInteger(val.outputLen),\n};\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\nexport function validateObject(object, validators, optValidators = {}) {\n    const checkField = (fieldName, type, isOptional) => {\n        const checkVal = validatorFns[type];\n        if (typeof checkVal !== 'function')\n            throw new Error(`Invalid validator \"${type}\", expected function`);\n        const val = object[fieldName];\n        if (isOptional && val === undefined)\n            return;\n        if (!checkVal(val, object)) {\n            throw new Error(`Invalid param ${String(fieldName)}=${val} (${typeof val}), expected ${type}`);\n        }\n    };\n    for (const [fieldName, type] of Object.entries(validators))\n        checkField(fieldName, type, false);\n    for (const [fieldName, type] of Object.entries(optValidators))\n        checkField(fieldName, type, true);\n    return object;\n}\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });\n//# sourceMappingURL=utils.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Utilities for modular arithmetics and finite fields\nimport { bitMask, numberToBytesBE, numberToBytesLE, bytesToNumberBE, bytesToNumberLE, ensureBytes, validateObject, } from './utils.js';\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3);\n// prettier-ignore\nconst _4n = BigInt(4), _5n = BigInt(5), _8n = BigInt(8);\n// prettier-ignore\nconst _9n = BigInt(9), _16n = BigInt(16);\n// Calculates a modulo b\nexport function mod(a, b) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\n/**\n * Efficiently raise num to power and do modular division.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n * @example\n * pow(2n, 6n, 11n) // 64n % 11n == 9n\n */\n// TODO: use field version && remove\nexport function pow(num, power, modulo) {\n    if (modulo <= _0n || power < _0n)\n        throw new Error('Expected power/modulo > 0');\n    if (modulo === _1n)\n        return _0n;\n    let res = _1n;\n    while (power > _0n) {\n        if (power & _1n)\n            res = (res * num) % modulo;\n        num = (num * num) % modulo;\n        power >>= _1n;\n    }\n    return res;\n}\n// Does x ^ (2 ^ power) mod p. pow2(30, 4) == 30 ^ (2 ^ 4)\nexport function pow2(x, power, modulo) {\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= modulo;\n    }\n    return res;\n}\n// Inverses number over modulo\nexport function invert(number, modulo) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    // Euclidean GCD https://brilliant.org/wiki/extended-euclidean-algorithm/\n    // Fermat's little theorem \"CT-like\" version inv(n) = n^(m-2) mod m is 30x slower.\n    let a = mod(number, modulo);\n    let b = modulo;\n    // prettier-ignore\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        // JIT applies optimization if those two lines follow each other\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        // prettier-ignore\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\n/**\n * Tonelli-Shanks square root search algorithm.\n * 1. https://eprint.iacr.org/2012/685.pdf (page 12)\n * 2. Square Roots from 1; 24, 51, 10 to Dan Shanks\n * Will start an infinite loop if field order P is not prime.\n * @param P field order\n * @returns function that takes field Fp (created from P) and number n\n */\nexport function tonelliShanks(P) {\n    // Legendre constant: used to calculate Legendre symbol (a | p),\n    // which denotes the value of a^((p-1)/2) (mod p).\n    // (a | p) ≡ 1    if a is a square (mod p)\n    // (a | p) ≡ -1   if a is not a square (mod p)\n    // (a | p) ≡ 0    if a ≡ 0 (mod p)\n    const legendreC = (P - _1n) / _2n;\n    let Q, S, Z;\n    // Step 1: By factoring out powers of 2 from p - 1,\n    // find q and s such that p - 1 = q*(2^s) with q odd\n    for (Q = P - _1n, S = 0; Q % _2n === _0n; Q /= _2n, S++)\n        ;\n    // Step 2: Select a non-square z such that (z | p) ≡ -1 and set c ≡ zq\n    for (Z = _2n; Z < P && pow(Z, legendreC, P) !== P - _1n; Z++)\n        ;\n    // Fast-path\n    if (S === 1) {\n        const p1div4 = (P + _1n) / _4n;\n        return function tonelliFast(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Slow-path\n    const Q1div2 = (Q + _1n) / _2n;\n    return function tonelliSlow(Fp, n) {\n        // Step 0: Check that n is indeed a square: (n | p) should not be ≡ -1\n        if (Fp.pow(n, legendreC) === Fp.neg(Fp.ONE))\n            throw new Error('Cannot find square root');\n        let r = S;\n        // TODO: will fail at Fp2/etc\n        let g = Fp.pow(Fp.mul(Fp.ONE, Z), Q); // will update both x and b\n        let x = Fp.pow(n, Q1div2); // first guess at the square root\n        let b = Fp.pow(n, Q); // first guess at the fudge factor\n        while (!Fp.eql(b, Fp.ONE)) {\n            if (Fp.eql(b, Fp.ZERO))\n                return Fp.ZERO; // https://en.wikipedia.org/wiki/Tonelli%E2%80%93Shanks_algorithm (4. If t = 0, return r = 0)\n            // Find m such b^(2^m)==1\n            let m = 1;\n            for (let t2 = Fp.sqr(b); m < r; m++) {\n                if (Fp.eql(t2, Fp.ONE))\n                    break;\n                t2 = Fp.sqr(t2); // t2 *= t2\n            }\n            // NOTE: r-m-1 can be bigger than 32, need to convert to bigint before shift, otherwise there will be overflow\n            const ge = Fp.pow(g, _1n << BigInt(r - m - 1)); // ge = 2^(r-m-1)\n            g = Fp.sqr(ge); // g = ge * ge\n            x = Fp.mul(x, ge); // x *= ge\n            b = Fp.mul(b, g); // b *= g\n            r = m;\n        }\n        return x;\n    };\n}\nexport function FpSqrt(P) {\n    // NOTE: different algorithms can give different roots, it is up to user to decide which one they want.\n    // For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).\n    // P ≡ 3 (mod 4)\n    // √n = n^((P+1)/4)\n    if (P % _4n === _3n) {\n        // Not all roots possible!\n        // const ORDER =\n        //   0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaabn;\n        // const NUM = 72057594037927816n;\n        const p1div4 = (P + _1n) / _4n;\n        return function sqrt3mod4(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            // Throw if root**2 != n\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Atkin algorithm for q ≡ 5 (mod 8), https://eprint.iacr.org/2012/685.pdf (page 10)\n    if (P % _8n === _5n) {\n        const c1 = (P - _5n) / _8n;\n        return function sqrt5mod8(Fp, n) {\n            const n2 = Fp.mul(n, _2n);\n            const v = Fp.pow(n2, c1);\n            const nv = Fp.mul(n, v);\n            const i = Fp.mul(Fp.mul(nv, _2n), v);\n            const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // P ≡ 9 (mod 16)\n    if (P % _16n === _9n) {\n        // NOTE: tonelli is too slow for bls-Fp2 calculations even on start\n        // Means we cannot use sqrt for constants at all!\n        //\n        // const c1 = Fp.sqrt(Fp.negate(Fp.ONE)); //  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F\n        // const c2 = Fp.sqrt(c1);                //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F\n        // const c3 = Fp.sqrt(Fp.negate(c1));     //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F\n        // const c4 = (P + _7n) / _16n;           //  4. c4 = (q + 7) / 16        # Integer arithmetic\n        // sqrt = (x) => {\n        //   let tv1 = Fp.pow(x, c4);             //  1. tv1 = x^c4\n        //   let tv2 = Fp.mul(c1, tv1);           //  2. tv2 = c1 * tv1\n        //   const tv3 = Fp.mul(c2, tv1);         //  3. tv3 = c2 * tv1\n        //   let tv4 = Fp.mul(c3, tv1);           //  4. tv4 = c3 * tv1\n        //   const e1 = Fp.equals(Fp.square(tv2), x); //  5.  e1 = (tv2^2) == x\n        //   const e2 = Fp.equals(Fp.square(tv3), x); //  6.  e2 = (tv3^2) == x\n        //   tv1 = Fp.cmov(tv1, tv2, e1); //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x\n        //   tv2 = Fp.cmov(tv4, tv3, e2); //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x\n        //   const e3 = Fp.equals(Fp.square(tv2), x); //  9.  e3 = (tv2^2) == x\n        //   return Fp.cmov(tv1, tv2, e3); //  10.  z = CMOV(tv1, tv2, e3)  # Select the sqrt from tv1 and tv2\n        // }\n    }\n    // Other cases: Tonelli-Shanks algorithm\n    return tonelliShanks(P);\n}\n// Little-endian check for first LE bit (last BE bit);\nexport const isNegativeLE = (num, modulo) => (mod(num, modulo) & _1n) === _1n;\n// prettier-ignore\nconst FIELD_FIELDS = [\n    'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',\n    'eql', 'add', 'sub', 'mul', 'pow', 'div',\n    'addN', 'subN', 'mulN', 'sqrN'\n];\nexport function validateField(field) {\n    const initial = {\n        ORDER: 'bigint',\n        MASK: 'bigint',\n        BYTES: 'isSafeInteger',\n        BITS: 'isSafeInteger',\n    };\n    const opts = FIELD_FIELDS.reduce((map, val) => {\n        map[val] = 'function';\n        return map;\n    }, initial);\n    return validateObject(field, opts);\n}\n// Generic field functions\n/**\n * Same as `pow` but for Fp: non-constant-time.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n */\nexport function FpPow(f, num, power) {\n    // Should have same speed as pow for bigints\n    // TODO: benchmark!\n    if (power < _0n)\n        throw new Error('Expected power > 0');\n    if (power === _0n)\n        return f.ONE;\n    if (power === _1n)\n        return num;\n    let p = f.ONE;\n    let d = num;\n    while (power > _0n) {\n        if (power & _1n)\n            p = f.mul(p, d);\n        d = f.sqr(d);\n        power >>= _1n;\n    }\n    return p;\n}\n/**\n * Efficiently invert an array of Field elements.\n * `inv(0)` will return `undefined` here: make sure to throw an error.\n */\nexport function FpInvertBatch(f, nums) {\n    const tmp = new Array(nums.length);\n    // Walk from first to last, multiply them by each other MOD p\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = acc;\n        return f.mul(acc, num);\n    }, f.ONE);\n    // Invert last element\n    const inverted = f.inv(lastMultiplied);\n    // Walk from last to first, multiply them by inverted each other MOD p\n    nums.reduceRight((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = f.mul(acc, tmp[i]);\n        return f.mul(acc, num);\n    }, inverted);\n    return tmp;\n}\nexport function FpDiv(f, lhs, rhs) {\n    return f.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, f.ORDER) : f.inv(rhs));\n}\n// This function returns True whenever the value x is a square in the field F.\nexport function FpIsSquare(f) {\n    const legendreConst = (f.ORDER - _1n) / _2n; // Integer arithmetic\n    return (x) => {\n        const p = f.pow(x, legendreConst);\n        return f.eql(p, f.ZERO) || f.eql(p, f.ONE);\n    };\n}\n// CURVE.n lengths\nexport function nLength(n, nBitLength) {\n    // Bit size, byte size of CURVE.n\n    const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;\n    const nByteLength = Math.ceil(_nBitLength / 8);\n    return { nBitLength: _nBitLength, nByteLength };\n}\n/**\n * Initializes a finite field over prime. **Non-primes are not supported.**\n * Do not init in loop: slow. Very fragile: always run a benchmark on a change.\n * Major performance optimizations:\n * * a) denormalized operations like mulN instead of mul\n * * b) same object shape: never add or remove keys\n * * c) Object.freeze\n * @param ORDER prime positive bigint\n * @param bitLen how many bits the field consumes\n * @param isLE (def: false) if encoding / decoding should be in little-endian\n * @param redef optional faster redefinitions of sqrt and other methods\n */\nexport function Field(ORDER, bitLen, isLE = false, redef = {}) {\n    if (ORDER <= _0n)\n        throw new Error(`Expected Field ORDER > 0, got ${ORDER}`);\n    const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, bitLen);\n    if (BYTES > 2048)\n        throw new Error('Field lengths over 2048 bytes are not supported');\n    const sqrtP = FpSqrt(ORDER);\n    const f = Object.freeze({\n        ORDER,\n        BITS,\n        BYTES,\n        MASK: bitMask(BITS),\n        ZERO: _0n,\n        ONE: _1n,\n        create: (num) => mod(num, ORDER),\n        isValid: (num) => {\n            if (typeof num !== 'bigint')\n                throw new Error(`Invalid field element: expected bigint, got ${typeof num}`);\n            return _0n <= num && num < ORDER; // 0 is valid element, but it's not invertible\n        },\n        is0: (num) => num === _0n,\n        isOdd: (num) => (num & _1n) === _1n,\n        neg: (num) => mod(-num, ORDER),\n        eql: (lhs, rhs) => lhs === rhs,\n        sqr: (num) => mod(num * num, ORDER),\n        add: (lhs, rhs) => mod(lhs + rhs, ORDER),\n        sub: (lhs, rhs) => mod(lhs - rhs, ORDER),\n        mul: (lhs, rhs) => mod(lhs * rhs, ORDER),\n        pow: (num, power) => FpPow(f, num, power),\n        div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),\n        // Same as above, but doesn't normalize\n        sqrN: (num) => num * num,\n        addN: (lhs, rhs) => lhs + rhs,\n        subN: (lhs, rhs) => lhs - rhs,\n        mulN: (lhs, rhs) => lhs * rhs,\n        inv: (num) => invert(num, ORDER),\n        sqrt: redef.sqrt || ((n) => sqrtP(f, n)),\n        invertBatch: (lst) => FpInvertBatch(f, lst),\n        // TODO: do we really need constant cmov?\n        // We don't have const-time bigints anyway, so probably will be not very useful\n        cmov: (a, b, c) => (c ? b : a),\n        toBytes: (num) => (isLE ? numberToBytesLE(num, BYTES) : numberToBytesBE(num, BYTES)),\n        fromBytes: (bytes) => {\n            if (bytes.length !== BYTES)\n                throw new Error(`Fp.fromBytes: expected ${BYTES}, got ${bytes.length}`);\n            return isLE ? bytesToNumberLE(bytes) : bytesToNumberBE(bytes);\n        },\n    });\n    return Object.freeze(f);\n}\nexport function FpSqrtOdd(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(`Field doesn't have isOdd`);\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? root : Fp.neg(root);\n}\nexport function FpSqrtEven(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(`Field doesn't have isOdd`);\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? Fp.neg(root) : root;\n}\n/**\n * \"Constant-time\" private key generation utility.\n * Same as mapKeyToField, but accepts less bytes (40 instead of 48 for 32-byte field).\n * Which makes it slightly more biased, less secure.\n * @deprecated use mapKeyToField instead\n */\nexport function hashToPrivateScalar(hash, groupOrder, isLE = false) {\n    hash = ensureBytes('privateHash', hash);\n    const hashLen = hash.length;\n    const minLen = nLength(groupOrder).nByteLength + 8;\n    if (minLen < 24 || hashLen < minLen || hashLen > 1024)\n        throw new Error(`hashToPrivateScalar: expected ${minLen}-1024 bytes of input, got ${hashLen}`);\n    const num = isLE ? bytesToNumberLE(hash) : bytesToNumberBE(hash);\n    return mod(num, groupOrder - _1n) + _1n;\n}\n/**\n * Returns total number of bytes consumed by the field element.\n * For example, 32 bytes for usual 256-bit weierstrass curve.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of field\n */\nexport function getFieldBytesLength(fieldOrder) {\n    if (typeof fieldOrder !== 'bigint')\n        throw new Error('field order must be bigint');\n    const bitLength = fieldOrder.toString(2).length;\n    return Math.ceil(bitLength / 8);\n}\n/**\n * Returns minimal amount of bytes that can be safely reduced\n * by field order.\n * Should be 2^-128 for 128-bit curve such as P256.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of target hash\n */\nexport function getMinHashLength(fieldOrder) {\n    const length = getFieldBytesLength(fieldOrder);\n    return length + Math.ceil(length / 2);\n}\n/**\n * \"Constant-time\" private key generation utility.\n * Can take (n + n/2) or more bytes of uniform input e.g. from CSPRNG or KDF\n * and convert them into private scalar, with the modulo bias being negligible.\n * Needs at least 48 bytes of input for 32-byte private key.\n * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/\n * FIPS 186-5, A.2 https://csrc.nist.gov/publications/detail/fips/186/5/final\n * RFC 9380, https://www.rfc-editor.org/rfc/rfc9380#section-5\n * @param hash hash output from SHA3 or a similar function\n * @param groupOrder size of subgroup - (e.g. secp256k1.CURVE.n)\n * @param isLE interpret hash bytes as LE num\n * @returns valid private scalar\n */\nexport function mapHashToField(key, fieldOrder, isLE = false) {\n    const len = key.length;\n    const fieldLen = getFieldBytesLength(fieldOrder);\n    const minLen = getMinHashLength(fieldOrder);\n    // No small numbers: need to understand bias story. No huge numbers: easier to detect JS timings.\n    if (len < 16 || len < minLen || len > 1024)\n        throw new Error(`expected ${minLen}-1024 bytes of input, got ${len}`);\n    const num = isLE ? bytesToNumberBE(key) : bytesToNumberLE(key);\n    // `mod(x, 11)` can sometimes produce 0. `mod(x, 10) + 1` is the same, but no 0\n    const reduced = mod(num, fieldOrder - _1n) + _1n;\n    return isLE ? numberToBytesLE(reduced, fieldLen) : numberToBytesBE(reduced, fieldLen);\n}\n//# sourceMappingURL=modular.js.map","import { hash as assertHash, bytes as assertBytes, exists as assertExists } from './_assert.js';\nimport { Hash, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nexport class HMAC extends Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        assertHash(hash);\n        const key = toBytes(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new Error('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        assertExists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        assertExists(this);\n        assertBytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nhmac.create = (hash, key) => new HMAC(hash, key);\n//# sourceMappingURL=hmac.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Abelian group utilities\nimport { validateField, nLength } from './modular.js';\nimport { validateObject } from './utils.js';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\n// Elliptic curve multiplication of Point by scalar. Fragile.\n// Scalars should always be less than curve order: this should be checked inside of a curve itself.\n// Creates precomputation tables for fast multiplication:\n// - private scalar is split by fixed size windows of W bits\n// - every window point is collected from window's table & added to accumulator\n// - since windows are different, same point inside tables won't be accessed more than once per calc\n// - each multiplication is 'Math.ceil(CURVE_ORDER / 𝑊) + 1' point additions (fixed for any scalar)\n// - +1 window is neccessary for wNAF\n// - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication\n// TODO: Research returning 2d JS array of windows, instead of a single window. This would allow\n// windows to be in different memory locations\nexport function wNAF(c, bits) {\n    const constTimeNegate = (condition, item) => {\n        const neg = item.negate();\n        return condition ? neg : item;\n    };\n    const opts = (W) => {\n        const windows = Math.ceil(bits / W) + 1; // +1, because\n        const windowSize = 2 ** (W - 1); // -1 because we skip zero\n        return { windows, windowSize };\n    };\n    return {\n        constTimeNegate,\n        // non-const time multiplication ladder\n        unsafeLadder(elm, n) {\n            let p = c.ZERO;\n            let d = elm;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        },\n        /**\n         * Creates a wNAF precomputation window. Used for caching.\n         * Default window size is set by `utils.precompute()` and is equal to 8.\n         * Number of precomputed points depends on the curve size:\n         * 2^(𝑊−1) * (Math.ceil(𝑛 / 𝑊) + 1), where:\n         * - 𝑊 is the window size\n         * - 𝑛 is the bitlength of the curve order.\n         * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n         * @returns precomputed point tables flattened to a single array\n         */\n        precomputeWindow(elm, W) {\n            const { windows, windowSize } = opts(W);\n            const points = [];\n            let p = elm;\n            let base = p;\n            for (let window = 0; window < windows; window++) {\n                base = p;\n                points.push(base);\n                // =1, because we skip zero\n                for (let i = 1; i < windowSize; i++) {\n                    base = base.add(p);\n                    points.push(base);\n                }\n                p = base.double();\n            }\n            return points;\n        },\n        /**\n         * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n         * @param W window size\n         * @param precomputes precomputed tables\n         * @param n scalar (we don't check here, but should be less than curve order)\n         * @returns real and fake (for const-time) points\n         */\n        wNAF(W, precomputes, n) {\n            // TODO: maybe check that scalar is less than group order? wNAF behavious is undefined otherwise\n            // But need to carefully remove other checks before wNAF. ORDER == bits here\n            const { windows, windowSize } = opts(W);\n            let p = c.ZERO;\n            let f = c.BASE;\n            const mask = BigInt(2 ** W - 1); // Create mask with W ones: 0b1111 for W=4 etc.\n            const maxNumber = 2 ** W;\n            const shiftBy = BigInt(W);\n            for (let window = 0; window < windows; window++) {\n                const offset = window * windowSize;\n                // Extract W bits.\n                let wbits = Number(n & mask);\n                // Shift number by W bits.\n                n >>= shiftBy;\n                // If the bits are bigger than max size, we'll split those.\n                // +224 => 256 - 32\n                if (wbits > windowSize) {\n                    wbits -= maxNumber;\n                    n += _1n;\n                }\n                // This code was first written with assumption that 'f' and 'p' will never be infinity point:\n                // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,\n                // there is negate now: it is possible that negated element from low value\n                // would be the same as high element, which will create carry into next window.\n                // It's not obvious how this can fail, but still worth investigating later.\n                // Check if we're onto Zero point.\n                // Add random point inside current window to f.\n                const offset1 = offset;\n                const offset2 = offset + Math.abs(wbits) - 1; // -1 because we skip zero\n                const cond1 = window % 2 !== 0;\n                const cond2 = wbits < 0;\n                if (wbits === 0) {\n                    // The most important part for const-time getPublicKey\n                    f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n                }\n                else {\n                    p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n                }\n            }\n            // JIT-compiler should not eliminate f here, since it will later be used in normalizeZ()\n            // Even if the variable is still unused, there are some checks which will\n            // throw an exception, so compiler needs to prove they won't happen, which is hard.\n            // At this point there is a way to F be infinity-point even if p is not,\n            // which makes it less const-time: around 1 bigint multiply.\n            return { p, f };\n        },\n        wNAFCached(P, precomputesMap, n, transform) {\n            // @ts-ignore\n            const W = P._WINDOW_SIZE || 1;\n            // Calculate precomputes on a first run, reuse them after\n            let comp = precomputesMap.get(P);\n            if (!comp) {\n                comp = this.precomputeWindow(P, W);\n                if (W !== 1) {\n                    precomputesMap.set(P, transform(comp));\n                }\n            }\n            return this.wNAF(W, comp, n);\n        },\n    };\n}\nexport function validateBasic(curve) {\n    validateField(curve.Fp);\n    validateObject(curve, {\n        n: 'bigint',\n        h: 'bigint',\n        Gx: 'field',\n        Gy: 'field',\n    }, {\n        nBitLength: 'isSafeInteger',\n        nByteLength: 'isSafeInteger',\n    });\n    // Set defaults\n    return Object.freeze({\n        ...nLength(curve.n, curve.nBitLength),\n        ...curve,\n        ...{ p: curve.Fp.ORDER },\n    });\n}\n//# sourceMappingURL=curve.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Short Weierstrass curve. The formula is: y² = x³ + ax + b\nimport * as mod from './modular.js';\nimport * as ut from './utils.js';\nimport { ensureBytes } from './utils.js';\nimport { wNAF, validateBasic } from './curve.js';\nfunction validatePointOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(opts, {\n        a: 'field',\n        b: 'field',\n    }, {\n        allowedPrivateKeyLengths: 'array',\n        wrapPrivateKey: 'boolean',\n        isTorsionFree: 'function',\n        clearCofactor: 'function',\n        allowInfinityPoint: 'boolean',\n        fromBytes: 'function',\n        toBytes: 'function',\n    });\n    const { endo, Fp, a } = opts;\n    if (endo) {\n        if (!Fp.eql(a, Fp.ZERO)) {\n            throw new Error('Endomorphism can only be defined for Koblitz curves that have a=0');\n        }\n        if (typeof endo !== 'object' ||\n            typeof endo.beta !== 'bigint' ||\n            typeof endo.splitScalar !== 'function') {\n            throw new Error('Expected endomorphism with beta: bigint and splitScalar: function');\n        }\n    }\n    return Object.freeze({ ...opts });\n}\n// ASN.1 DER encoding utilities\nconst { bytesToNumberBE: b2n, hexToBytes: h2b } = ut;\nexport const DER = {\n    // asn.1 DER encoding utils\n    Err: class DERErr extends Error {\n        constructor(m = '') {\n            super(m);\n        }\n    },\n    _parseInt(data) {\n        const { Err: E } = DER;\n        if (data.length < 2 || data[0] !== 0x02)\n            throw new E('Invalid signature integer tag');\n        const len = data[1];\n        const res = data.subarray(2, len + 2);\n        if (!len || res.length !== len)\n            throw new E('Invalid signature integer: wrong length');\n        // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,\n        // since we always use positive integers here. It must always be empty:\n        // - add zero byte if exists\n        // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)\n        if (res[0] & 0b10000000)\n            throw new E('Invalid signature integer: negative');\n        if (res[0] === 0x00 && !(res[1] & 0b10000000))\n            throw new E('Invalid signature integer: unnecessary leading zero');\n        return { d: b2n(res), l: data.subarray(len + 2) }; // d is data, l is left\n    },\n    toSig(hex) {\n        // parse DER signature\n        const { Err: E } = DER;\n        const data = typeof hex === 'string' ? h2b(hex) : hex;\n        if (!(data instanceof Uint8Array))\n            throw new Error('ui8a expected');\n        let l = data.length;\n        if (l < 2 || data[0] != 0x30)\n            throw new E('Invalid signature tag');\n        if (data[1] !== l - 2)\n            throw new E('Invalid signature: incorrect length');\n        const { d: r, l: sBytes } = DER._parseInt(data.subarray(2));\n        const { d: s, l: rBytesLeft } = DER._parseInt(sBytes);\n        if (rBytesLeft.length)\n            throw new E('Invalid signature: left bytes after parsing');\n        return { r, s };\n    },\n    hexFromSig(sig) {\n        // Add leading zero if first byte has negative bit enabled. More details in '_parseInt'\n        const slice = (s) => (Number.parseInt(s[0], 16) & 0b1000 ? '00' + s : s);\n        const h = (num) => {\n            const hex = num.toString(16);\n            return hex.length & 1 ? `0${hex}` : hex;\n        };\n        const s = slice(h(sig.s));\n        const r = slice(h(sig.r));\n        const shl = s.length / 2;\n        const rhl = r.length / 2;\n        const sl = h(shl);\n        const rl = h(rhl);\n        return `30${h(rhl + shl + 4)}02${rl}${r}02${sl}${s}`;\n    },\n};\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3), _4n = BigInt(4);\nexport function weierstrassPoints(opts) {\n    const CURVE = validatePointOpts(opts);\n    const { Fp } = CURVE; // All curves has same field / group length as for now, but they can differ\n    const toBytes = CURVE.toBytes ||\n        ((_c, point, _isCompressed) => {\n            const a = point.toAffine();\n            return ut.concatBytes(Uint8Array.from([0x04]), Fp.toBytes(a.x), Fp.toBytes(a.y));\n        });\n    const fromBytes = CURVE.fromBytes ||\n        ((bytes) => {\n            // const head = bytes[0];\n            const tail = bytes.subarray(1);\n            // if (head !== 0x04) throw new Error('Only non-compressed encoding is supported');\n            const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n            const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n            return { x, y };\n        });\n    /**\n     * y² = x³ + ax + b: Short weierstrass curve formula\n     * @returns y²\n     */\n    function weierstrassEquation(x) {\n        const { a, b } = CURVE;\n        const x2 = Fp.sqr(x); // x * x\n        const x3 = Fp.mul(x2, x); // x2 * x\n        return Fp.add(Fp.add(x3, Fp.mul(x, a)), b); // x3 + a * x + b\n    }\n    // Validate whether the passed curve params are valid.\n    // We check if curve equation works for generator point.\n    // `assertValidity()` won't work: `isTorsionFree()` is not available at this point in bls12-381.\n    // ProjectivePoint class has not been initialized yet.\n    if (!Fp.eql(Fp.sqr(CURVE.Gy), weierstrassEquation(CURVE.Gx)))\n        throw new Error('bad generator point: equation left != right');\n    // Valid group elements reside in range 1..n-1\n    function isWithinCurveOrder(num) {\n        return typeof num === 'bigint' && _0n < num && num < CURVE.n;\n    }\n    function assertGE(num) {\n        if (!isWithinCurveOrder(num))\n            throw new Error('Expected valid bigint: 0 < bigint < curve.n');\n    }\n    // Validates if priv key is valid and converts it to bigint.\n    // Supports options allowedPrivateKeyLengths and wrapPrivateKey.\n    function normPrivateKeyToScalar(key) {\n        const { allowedPrivateKeyLengths: lengths, nByteLength, wrapPrivateKey, n } = CURVE;\n        if (lengths && typeof key !== 'bigint') {\n            if (key instanceof Uint8Array)\n                key = ut.bytesToHex(key);\n            // Normalize to hex string, pad. E.g. P521 would norm 130-132 char hex to 132-char bytes\n            if (typeof key !== 'string' || !lengths.includes(key.length))\n                throw new Error('Invalid key');\n            key = key.padStart(nByteLength * 2, '0');\n        }\n        let num;\n        try {\n            num =\n                typeof key === 'bigint'\n                    ? key\n                    : ut.bytesToNumberBE(ensureBytes('private key', key, nByteLength));\n        }\n        catch (error) {\n            throw new Error(`private key must be ${nByteLength} bytes, hex or bigint, not ${typeof key}`);\n        }\n        if (wrapPrivateKey)\n            num = mod.mod(num, n); // disabled by default, enabled for BLS\n        assertGE(num); // num in range [1..N-1]\n        return num;\n    }\n    const pointPrecomputes = new Map();\n    function assertPrjPoint(other) {\n        if (!(other instanceof Point))\n            throw new Error('ProjectivePoint expected');\n    }\n    /**\n     * Projective Point works in 3d / projective (homogeneous) coordinates: (x, y, z) ∋ (x=x/z, y=y/z)\n     * Default Point works in 2d / affine coordinates: (x, y)\n     * We're doing calculations in projective, because its operations don't require costly inversion.\n     */\n    class Point {\n        constructor(px, py, pz) {\n            this.px = px;\n            this.py = py;\n            this.pz = pz;\n            if (px == null || !Fp.isValid(px))\n                throw new Error('x required');\n            if (py == null || !Fp.isValid(py))\n                throw new Error('y required');\n            if (pz == null || !Fp.isValid(pz))\n                throw new Error('z required');\n        }\n        // Does not validate if the point is on-curve.\n        // Use fromHex instead, or call assertValidity() later.\n        static fromAffine(p) {\n            const { x, y } = p || {};\n            if (!p || !Fp.isValid(x) || !Fp.isValid(y))\n                throw new Error('invalid affine point');\n            if (p instanceof Point)\n                throw new Error('projective point not allowed');\n            const is0 = (i) => Fp.eql(i, Fp.ZERO);\n            // fromAffine(x:0, y:0) would produce (x:0, y:0, z:1), but we need (x:0, y:1, z:0)\n            if (is0(x) && is0(y))\n                return Point.ZERO;\n            return new Point(x, y, Fp.ONE);\n        }\n        get x() {\n            return this.toAffine().x;\n        }\n        get y() {\n            return this.toAffine().y;\n        }\n        /**\n         * Takes a bunch of Projective Points but executes only one\n         * inversion on all of them. Inversion is very slow operation,\n         * so this improves performance massively.\n         * Optimization: converts a list of projective points to a list of identical points with Z=1.\n         */\n        static normalizeZ(points) {\n            const toInv = Fp.invertBatch(points.map((p) => p.pz));\n            return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n        }\n        /**\n         * Converts hash string or Uint8Array to Point.\n         * @param hex short/long ECDSA hex\n         */\n        static fromHex(hex) {\n            const P = Point.fromAffine(fromBytes(ensureBytes('pointHex', hex)));\n            P.assertValidity();\n            return P;\n        }\n        // Multiplies generator point by privateKey.\n        static fromPrivateKey(privateKey) {\n            return Point.BASE.multiply(normPrivateKeyToScalar(privateKey));\n        }\n        // \"Private method\", don't use it directly\n        _setWindowSize(windowSize) {\n            this._WINDOW_SIZE = windowSize;\n            pointPrecomputes.delete(this);\n        }\n        // A point on curve is valid if it conforms to equation.\n        assertValidity() {\n            if (this.is0()) {\n                // (0, 1, 0) aka ZERO is invalid in most contexts.\n                // In BLS, ZERO can be serialized, so we allow it.\n                // (0, 0, 0) is wrong representation of ZERO and is always invalid.\n                if (CURVE.allowInfinityPoint && !Fp.is0(this.py))\n                    return;\n                throw new Error('bad point: ZERO');\n            }\n            // Some 3rd-party test vectors require different wording between here & `fromCompressedHex`\n            const { x, y } = this.toAffine();\n            // Check if x, y are valid field elements\n            if (!Fp.isValid(x) || !Fp.isValid(y))\n                throw new Error('bad point: x or y not FE');\n            const left = Fp.sqr(y); // y²\n            const right = weierstrassEquation(x); // x³ + ax + b\n            if (!Fp.eql(left, right))\n                throw new Error('bad point: equation left != right');\n            if (!this.isTorsionFree())\n                throw new Error('bad point: not in prime-order subgroup');\n        }\n        hasEvenY() {\n            const { y } = this.toAffine();\n            if (Fp.isOdd)\n                return !Fp.isOdd(y);\n            throw new Error(\"Field doesn't support isOdd\");\n        }\n        /**\n         * Compare one point to another.\n         */\n        equals(other) {\n            assertPrjPoint(other);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            const { px: X2, py: Y2, pz: Z2 } = other;\n            const U1 = Fp.eql(Fp.mul(X1, Z2), Fp.mul(X2, Z1));\n            const U2 = Fp.eql(Fp.mul(Y1, Z2), Fp.mul(Y2, Z1));\n            return U1 && U2;\n        }\n        /**\n         * Flips point to one corresponding to (x, -y) in Affine coordinates.\n         */\n        negate() {\n            return new Point(this.px, Fp.neg(this.py), this.pz);\n        }\n        // Renes-Costello-Batina exception-free doubling formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 3\n        // Cost: 8M + 3S + 3*a + 2*b3 + 15add.\n        double() {\n            const { a, b } = CURVE;\n            const b3 = Fp.mul(b, _3n);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            let t0 = Fp.mul(X1, X1); // step 1\n            let t1 = Fp.mul(Y1, Y1);\n            let t2 = Fp.mul(Z1, Z1);\n            let t3 = Fp.mul(X1, Y1);\n            t3 = Fp.add(t3, t3); // step 5\n            Z3 = Fp.mul(X1, Z1);\n            Z3 = Fp.add(Z3, Z3);\n            X3 = Fp.mul(a, Z3);\n            Y3 = Fp.mul(b3, t2);\n            Y3 = Fp.add(X3, Y3); // step 10\n            X3 = Fp.sub(t1, Y3);\n            Y3 = Fp.add(t1, Y3);\n            Y3 = Fp.mul(X3, Y3);\n            X3 = Fp.mul(t3, X3);\n            Z3 = Fp.mul(b3, Z3); // step 15\n            t2 = Fp.mul(a, t2);\n            t3 = Fp.sub(t0, t2);\n            t3 = Fp.mul(a, t3);\n            t3 = Fp.add(t3, Z3);\n            Z3 = Fp.add(t0, t0); // step 20\n            t0 = Fp.add(Z3, t0);\n            t0 = Fp.add(t0, t2);\n            t0 = Fp.mul(t0, t3);\n            Y3 = Fp.add(Y3, t0);\n            t2 = Fp.mul(Y1, Z1); // step 25\n            t2 = Fp.add(t2, t2);\n            t0 = Fp.mul(t2, t3);\n            X3 = Fp.sub(X3, t0);\n            Z3 = Fp.mul(t2, t1);\n            Z3 = Fp.add(Z3, Z3); // step 30\n            Z3 = Fp.add(Z3, Z3);\n            return new Point(X3, Y3, Z3);\n        }\n        // Renes-Costello-Batina exception-free addition formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 1\n        // Cost: 12M + 0S + 3*a + 3*b3 + 23add.\n        add(other) {\n            assertPrjPoint(other);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            const { px: X2, py: Y2, pz: Z2 } = other;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            const a = CURVE.a;\n            const b3 = Fp.mul(CURVE.b, _3n);\n            let t0 = Fp.mul(X1, X2); // step 1\n            let t1 = Fp.mul(Y1, Y2);\n            let t2 = Fp.mul(Z1, Z2);\n            let t3 = Fp.add(X1, Y1);\n            let t4 = Fp.add(X2, Y2); // step 5\n            t3 = Fp.mul(t3, t4);\n            t4 = Fp.add(t0, t1);\n            t3 = Fp.sub(t3, t4);\n            t4 = Fp.add(X1, Z1);\n            let t5 = Fp.add(X2, Z2); // step 10\n            t4 = Fp.mul(t4, t5);\n            t5 = Fp.add(t0, t2);\n            t4 = Fp.sub(t4, t5);\n            t5 = Fp.add(Y1, Z1);\n            X3 = Fp.add(Y2, Z2); // step 15\n            t5 = Fp.mul(t5, X3);\n            X3 = Fp.add(t1, t2);\n            t5 = Fp.sub(t5, X3);\n            Z3 = Fp.mul(a, t4);\n            X3 = Fp.mul(b3, t2); // step 20\n            Z3 = Fp.add(X3, Z3);\n            X3 = Fp.sub(t1, Z3);\n            Z3 = Fp.add(t1, Z3);\n            Y3 = Fp.mul(X3, Z3);\n            t1 = Fp.add(t0, t0); // step 25\n            t1 = Fp.add(t1, t0);\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.mul(b3, t4);\n            t1 = Fp.add(t1, t2);\n            t2 = Fp.sub(t0, t2); // step 30\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.add(t4, t2);\n            t0 = Fp.mul(t1, t4);\n            Y3 = Fp.add(Y3, t0);\n            t0 = Fp.mul(t5, t4); // step 35\n            X3 = Fp.mul(t3, X3);\n            X3 = Fp.sub(X3, t0);\n            t0 = Fp.mul(t3, t1);\n            Z3 = Fp.mul(t5, Z3);\n            Z3 = Fp.add(Z3, t0); // step 40\n            return new Point(X3, Y3, Z3);\n        }\n        subtract(other) {\n            return this.add(other.negate());\n        }\n        is0() {\n            return this.equals(Point.ZERO);\n        }\n        wNAF(n) {\n            return wnaf.wNAFCached(this, pointPrecomputes, n, (comp) => {\n                const toInv = Fp.invertBatch(comp.map((p) => p.pz));\n                return comp.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n            });\n        }\n        /**\n         * Non-constant-time multiplication. Uses double-and-add algorithm.\n         * It's faster, but should only be used when you don't care about\n         * an exposed private key e.g. sig verification, which works over *public* keys.\n         */\n        multiplyUnsafe(n) {\n            const I = Point.ZERO;\n            if (n === _0n)\n                return I;\n            assertGE(n); // Will throw on 0\n            if (n === _1n)\n                return this;\n            const { endo } = CURVE;\n            if (!endo)\n                return wnaf.unsafeLadder(this, n);\n            // Apply endomorphism\n            let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n            let k1p = I;\n            let k2p = I;\n            let d = this;\n            while (k1 > _0n || k2 > _0n) {\n                if (k1 & _1n)\n                    k1p = k1p.add(d);\n                if (k2 & _1n)\n                    k2p = k2p.add(d);\n                d = d.double();\n                k1 >>= _1n;\n                k2 >>= _1n;\n            }\n            if (k1neg)\n                k1p = k1p.negate();\n            if (k2neg)\n                k2p = k2p.negate();\n            k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n            return k1p.add(k2p);\n        }\n        /**\n         * Constant time multiplication.\n         * Uses wNAF method. Windowed method may be 10% faster,\n         * but takes 2x longer to generate and consumes 2x memory.\n         * Uses precomputes when available.\n         * Uses endomorphism for Koblitz curves.\n         * @param scalar by which the point would be multiplied\n         * @returns New point\n         */\n        multiply(scalar) {\n            assertGE(scalar);\n            let n = scalar;\n            let point, fake; // Fake point is used to const-time mult\n            const { endo } = CURVE;\n            if (endo) {\n                const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n                let { p: k1p, f: f1p } = this.wNAF(k1);\n                let { p: k2p, f: f2p } = this.wNAF(k2);\n                k1p = wnaf.constTimeNegate(k1neg, k1p);\n                k2p = wnaf.constTimeNegate(k2neg, k2p);\n                k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n                point = k1p.add(k2p);\n                fake = f1p.add(f2p);\n            }\n            else {\n                const { p, f } = this.wNAF(n);\n                point = p;\n                fake = f;\n            }\n            // Normalize `z` for both points, but return only real one\n            return Point.normalizeZ([point, fake])[0];\n        }\n        /**\n         * Efficiently calculate `aP + bQ`. Unsafe, can expose private key, if used incorrectly.\n         * Not using Strauss-Shamir trick: precomputation tables are faster.\n         * The trick could be useful if both P and Q are not G (not in our case).\n         * @returns non-zero affine point\n         */\n        multiplyAndAddUnsafe(Q, a, b) {\n            const G = Point.BASE; // No Strauss-Shamir trick: we have 10% faster G precomputes\n            const mul = (P, a // Select faster multiply() method\n            ) => (a === _0n || a === _1n || !P.equals(G) ? P.multiplyUnsafe(a) : P.multiply(a));\n            const sum = mul(this, a).add(mul(Q, b));\n            return sum.is0() ? undefined : sum;\n        }\n        // Converts Projective point to affine (x, y) coordinates.\n        // Can accept precomputed Z^-1 - for example, from invertBatch.\n        // (x, y, z) ∋ (x=x/z, y=y/z)\n        toAffine(iz) {\n            const { px: x, py: y, pz: z } = this;\n            const is0 = this.is0();\n            // If invZ was 0, we return zero point. However we still want to execute\n            // all operations, so we replace invZ with a random number, 1.\n            if (iz == null)\n                iz = is0 ? Fp.ONE : Fp.inv(z);\n            const ax = Fp.mul(x, iz);\n            const ay = Fp.mul(y, iz);\n            const zz = Fp.mul(z, iz);\n            if (is0)\n                return { x: Fp.ZERO, y: Fp.ZERO };\n            if (!Fp.eql(zz, Fp.ONE))\n                throw new Error('invZ was invalid');\n            return { x: ax, y: ay };\n        }\n        isTorsionFree() {\n            const { h: cofactor, isTorsionFree } = CURVE;\n            if (cofactor === _1n)\n                return true; // No subgroups, always torsion-free\n            if (isTorsionFree)\n                return isTorsionFree(Point, this);\n            throw new Error('isTorsionFree() has not been declared for the elliptic curve');\n        }\n        clearCofactor() {\n            const { h: cofactor, clearCofactor } = CURVE;\n            if (cofactor === _1n)\n                return this; // Fast-path\n            if (clearCofactor)\n                return clearCofactor(Point, this);\n            return this.multiplyUnsafe(CURVE.h);\n        }\n        toRawBytes(isCompressed = true) {\n            this.assertValidity();\n            return toBytes(Point, this, isCompressed);\n        }\n        toHex(isCompressed = true) {\n            return ut.bytesToHex(this.toRawBytes(isCompressed));\n        }\n    }\n    Point.BASE = new Point(CURVE.Gx, CURVE.Gy, Fp.ONE);\n    Point.ZERO = new Point(Fp.ZERO, Fp.ONE, Fp.ZERO);\n    const _bits = CURVE.nBitLength;\n    const wnaf = wNAF(Point, CURVE.endo ? Math.ceil(_bits / 2) : _bits);\n    // Validate if generator point is on curve\n    return {\n        CURVE,\n        ProjectivePoint: Point,\n        normPrivateKeyToScalar,\n        weierstrassEquation,\n        isWithinCurveOrder,\n    };\n}\nfunction validateOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(opts, {\n        hash: 'hash',\n        hmac: 'function',\n        randomBytes: 'function',\n    }, {\n        bits2int: 'function',\n        bits2int_modN: 'function',\n        lowS: 'boolean',\n    });\n    return Object.freeze({ lowS: true, ...opts });\n}\nexport function weierstrass(curveDef) {\n    const CURVE = validateOpts(curveDef);\n    const { Fp, n: CURVE_ORDER } = CURVE;\n    const compressedLen = Fp.BYTES + 1; // e.g. 33 for 32\n    const uncompressedLen = 2 * Fp.BYTES + 1; // e.g. 65 for 32\n    function isValidFieldElement(num) {\n        return _0n < num && num < Fp.ORDER; // 0 is banned since it's not invertible FE\n    }\n    function modN(a) {\n        return mod.mod(a, CURVE_ORDER);\n    }\n    function invN(a) {\n        return mod.invert(a, CURVE_ORDER);\n    }\n    const { ProjectivePoint: Point, normPrivateKeyToScalar, weierstrassEquation, isWithinCurveOrder, } = weierstrassPoints({\n        ...CURVE,\n        toBytes(_c, point, isCompressed) {\n            const a = point.toAffine();\n            const x = Fp.toBytes(a.x);\n            const cat = ut.concatBytes;\n            if (isCompressed) {\n                return cat(Uint8Array.from([point.hasEvenY() ? 0x02 : 0x03]), x);\n            }\n            else {\n                return cat(Uint8Array.from([0x04]), x, Fp.toBytes(a.y));\n            }\n        },\n        fromBytes(bytes) {\n            const len = bytes.length;\n            const head = bytes[0];\n            const tail = bytes.subarray(1);\n            // this.assertValidity() is done inside of fromHex\n            if (len === compressedLen && (head === 0x02 || head === 0x03)) {\n                const x = ut.bytesToNumberBE(tail);\n                if (!isValidFieldElement(x))\n                    throw new Error('Point is not on curve');\n                const y2 = weierstrassEquation(x); // y² = x³ + ax + b\n                let y = Fp.sqrt(y2); // y = y² ^ (p+1)/4\n                const isYOdd = (y & _1n) === _1n;\n                // ECDSA\n                const isHeadOdd = (head & 1) === 1;\n                if (isHeadOdd !== isYOdd)\n                    y = Fp.neg(y);\n                return { x, y };\n            }\n            else if (len === uncompressedLen && head === 0x04) {\n                const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n                const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n                return { x, y };\n            }\n            else {\n                throw new Error(`Point of length ${len} was invalid. Expected ${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes`);\n            }\n        },\n    });\n    const numToNByteStr = (num) => ut.bytesToHex(ut.numberToBytesBE(num, CURVE.nByteLength));\n    function isBiggerThanHalfOrder(number) {\n        const HALF = CURVE_ORDER >> _1n;\n        return number > HALF;\n    }\n    function normalizeS(s) {\n        return isBiggerThanHalfOrder(s) ? modN(-s) : s;\n    }\n    // slice bytes num\n    const slcNum = (b, from, to) => ut.bytesToNumberBE(b.slice(from, to));\n    /**\n     * ECDSA signature with its (r, s) properties. Supports DER & compact representations.\n     */\n    class Signature {\n        constructor(r, s, recovery) {\n            this.r = r;\n            this.s = s;\n            this.recovery = recovery;\n            this.assertValidity();\n        }\n        // pair (bytes of r, bytes of s)\n        static fromCompact(hex) {\n            const l = CURVE.nByteLength;\n            hex = ensureBytes('compactSignature', hex, l * 2);\n            return new Signature(slcNum(hex, 0, l), slcNum(hex, l, 2 * l));\n        }\n        // DER encoded ECDSA signature\n        // https://bitcoin.stackexchange.com/questions/57644/what-are-the-parts-of-a-bitcoin-transaction-input-script\n        static fromDER(hex) {\n            const { r, s } = DER.toSig(ensureBytes('DER', hex));\n            return new Signature(r, s);\n        }\n        assertValidity() {\n            // can use assertGE here\n            if (!isWithinCurveOrder(this.r))\n                throw new Error('r must be 0 < r < CURVE.n');\n            if (!isWithinCurveOrder(this.s))\n                throw new Error('s must be 0 < s < CURVE.n');\n        }\n        addRecoveryBit(recovery) {\n            return new Signature(this.r, this.s, recovery);\n        }\n        recoverPublicKey(msgHash) {\n            const { r, s, recovery: rec } = this;\n            const h = bits2int_modN(ensureBytes('msgHash', msgHash)); // Truncate hash\n            if (rec == null || ![0, 1, 2, 3].includes(rec))\n                throw new Error('recovery id invalid');\n            const radj = rec === 2 || rec === 3 ? r + CURVE.n : r;\n            if (radj >= Fp.ORDER)\n                throw new Error('recovery id 2 or 3 invalid');\n            const prefix = (rec & 1) === 0 ? '02' : '03';\n            const R = Point.fromHex(prefix + numToNByteStr(radj));\n            const ir = invN(radj); // r^-1\n            const u1 = modN(-h * ir); // -hr^-1\n            const u2 = modN(s * ir); // sr^-1\n            const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2); // (sr^-1)R-(hr^-1)G = -(hr^-1)G + (sr^-1)\n            if (!Q)\n                throw new Error('point at infinify'); // unsafe is fine: no priv data leaked\n            Q.assertValidity();\n            return Q;\n        }\n        // Signatures should be low-s, to prevent malleability.\n        hasHighS() {\n            return isBiggerThanHalfOrder(this.s);\n        }\n        normalizeS() {\n            return this.hasHighS() ? new Signature(this.r, modN(-this.s), this.recovery) : this;\n        }\n        // DER-encoded\n        toDERRawBytes() {\n            return ut.hexToBytes(this.toDERHex());\n        }\n        toDERHex() {\n            return DER.hexFromSig({ r: this.r, s: this.s });\n        }\n        // padded bytes of r, then padded bytes of s\n        toCompactRawBytes() {\n            return ut.hexToBytes(this.toCompactHex());\n        }\n        toCompactHex() {\n            return numToNByteStr(this.r) + numToNByteStr(this.s);\n        }\n    }\n    const utils = {\n        isValidPrivateKey(privateKey) {\n            try {\n                normPrivateKeyToScalar(privateKey);\n                return true;\n            }\n            catch (error) {\n                return false;\n            }\n        },\n        normPrivateKeyToScalar: normPrivateKeyToScalar,\n        /**\n         * Produces cryptographically secure private key from random of size\n         * (groupLen + ceil(groupLen / 2)) with modulo bias being negligible.\n         */\n        randomPrivateKey: () => {\n            const length = mod.getMinHashLength(CURVE.n);\n            return mod.mapHashToField(CURVE.randomBytes(length), CURVE.n);\n        },\n        /**\n         * Creates precompute table for an arbitrary EC point. Makes point \"cached\".\n         * Allows to massively speed-up `point.multiply(scalar)`.\n         * @returns cached point\n         * @example\n         * const fast = utils.precompute(8, ProjectivePoint.fromHex(someonesPubKey));\n         * fast.multiply(privKey); // much faster ECDH now\n         */\n        precompute(windowSize = 8, point = Point.BASE) {\n            point._setWindowSize(windowSize);\n            point.multiply(BigInt(3)); // 3 is arbitrary, just need any number here\n            return point;\n        },\n    };\n    /**\n     * Computes public key for a private key. Checks for validity of the private key.\n     * @param privateKey private key\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns Public key, full when isCompressed=false; short when isCompressed=true\n     */\n    function getPublicKey(privateKey, isCompressed = true) {\n        return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n    }\n    /**\n     * Quick and dirty check for item being public key. Does not validate hex, or being on-curve.\n     */\n    function isProbPub(item) {\n        const arr = item instanceof Uint8Array;\n        const str = typeof item === 'string';\n        const len = (arr || str) && item.length;\n        if (arr)\n            return len === compressedLen || len === uncompressedLen;\n        if (str)\n            return len === 2 * compressedLen || len === 2 * uncompressedLen;\n        if (item instanceof Point)\n            return true;\n        return false;\n    }\n    /**\n     * ECDH (Elliptic Curve Diffie Hellman).\n     * Computes shared public key from private key and public key.\n     * Checks: 1) private key validity 2) shared key is on-curve.\n     * Does NOT hash the result.\n     * @param privateA private key\n     * @param publicB different public key\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns shared public key\n     */\n    function getSharedSecret(privateA, publicB, isCompressed = true) {\n        if (isProbPub(privateA))\n            throw new Error('first arg must be private key');\n        if (!isProbPub(publicB))\n            throw new Error('second arg must be public key');\n        const b = Point.fromHex(publicB); // check for being on-curve\n        return b.multiply(normPrivateKeyToScalar(privateA)).toRawBytes(isCompressed);\n    }\n    // RFC6979: ensure ECDSA msg is X bytes and < N. RFC suggests optional truncating via bits2octets.\n    // FIPS 186-4 4.6 suggests the leftmost min(nBitLen, outLen) bits, which matches bits2int.\n    // bits2int can produce res>N, we can do mod(res, N) since the bitLen is the same.\n    // int2octets can't be used; pads small msgs with 0: unacceptatble for trunc as per RFC vectors\n    const bits2int = CURVE.bits2int ||\n        function (bytes) {\n            // For curves with nBitLength % 8 !== 0: bits2octets(bits2octets(m)) !== bits2octets(m)\n            // for some cases, since bytes.length * 8 is not actual bitLength.\n            const num = ut.bytesToNumberBE(bytes); // check for == u8 done here\n            const delta = bytes.length * 8 - CURVE.nBitLength; // truncate to nBitLength leftmost bits\n            return delta > 0 ? num >> BigInt(delta) : num;\n        };\n    const bits2int_modN = CURVE.bits2int_modN ||\n        function (bytes) {\n            return modN(bits2int(bytes)); // can't use bytesToNumberBE here\n        };\n    // NOTE: pads output with zero as per spec\n    const ORDER_MASK = ut.bitMask(CURVE.nBitLength);\n    /**\n     * Converts to bytes. Checks if num in `[0..ORDER_MASK-1]` e.g.: `[0..2^256-1]`.\n     */\n    function int2octets(num) {\n        if (typeof num !== 'bigint')\n            throw new Error('bigint expected');\n        if (!(_0n <= num && num < ORDER_MASK))\n            throw new Error(`bigint expected < 2^${CURVE.nBitLength}`);\n        // works with order, can have different size than numToField!\n        return ut.numberToBytesBE(num, CURVE.nByteLength);\n    }\n    // Steps A, D of RFC6979 3.2\n    // Creates RFC6979 seed; converts msg/privKey to numbers.\n    // Used only in sign, not in verify.\n    // NOTE: we cannot assume here that msgHash has same amount of bytes as curve order, this will be wrong at least for P521.\n    // Also it can be bigger for P224 + SHA256\n    function prepSig(msgHash, privateKey, opts = defaultSigOpts) {\n        if (['recovered', 'canonical'].some((k) => k in opts))\n            throw new Error('sign() legacy options not supported');\n        const { hash, randomBytes } = CURVE;\n        let { lowS, prehash, extraEntropy: ent } = opts; // generates low-s sigs by default\n        if (lowS == null)\n            lowS = true; // RFC6979 3.2: we skip step A, because we already provide hash\n        msgHash = ensureBytes('msgHash', msgHash);\n        if (prehash)\n            msgHash = ensureBytes('prehashed msgHash', hash(msgHash));\n        // We can't later call bits2octets, since nested bits2int is broken for curves\n        // with nBitLength % 8 !== 0. Because of that, we unwrap it here as int2octets call.\n        // const bits2octets = (bits) => int2octets(bits2int_modN(bits))\n        const h1int = bits2int_modN(msgHash);\n        const d = normPrivateKeyToScalar(privateKey); // validate private key, convert to bigint\n        const seedArgs = [int2octets(d), int2octets(h1int)];\n        // extraEntropy. RFC6979 3.6: additional k' (optional).\n        if (ent != null) {\n            // K = HMAC_K(V || 0x00 || int2octets(x) || bits2octets(h1) || k')\n            const e = ent === true ? randomBytes(Fp.BYTES) : ent; // generate random bytes OR pass as-is\n            seedArgs.push(ensureBytes('extraEntropy', e)); // check for being bytes\n        }\n        const seed = ut.concatBytes(...seedArgs); // Step D of RFC6979 3.2\n        const m = h1int; // NOTE: no need to call bits2int second time here, it is inside truncateHash!\n        // Converts signature params into point w r/s, checks result for validity.\n        function k2sig(kBytes) {\n            // RFC 6979 Section 3.2, step 3: k = bits2int(T)\n            const k = bits2int(kBytes); // Cannot use fields methods, since it is group element\n            if (!isWithinCurveOrder(k))\n                return; // Important: all mod() calls here must be done over N\n            const ik = invN(k); // k^-1 mod n\n            const q = Point.BASE.multiply(k).toAffine(); // q = Gk\n            const r = modN(q.x); // r = q.x mod n\n            if (r === _0n)\n                return;\n            // Can use scalar blinding b^-1(bm + bdr) where b ∈ [1,q−1] according to\n            // https://tches.iacr.org/index.php/TCHES/article/view/7337/6509. We've decided against it:\n            // a) dependency on CSPRNG b) 15% slowdown c) doesn't really help since bigints are not CT\n            const s = modN(ik * modN(m + r * d)); // Not using blinding here\n            if (s === _0n)\n                return;\n            let recovery = (q.x === r ? 0 : 2) | Number(q.y & _1n); // recovery bit (2 or 3, when q.x > n)\n            let normS = s;\n            if (lowS && isBiggerThanHalfOrder(s)) {\n                normS = normalizeS(s); // if lowS was passed, ensure s is always\n                recovery ^= 1; // // in the bottom half of N\n            }\n            return new Signature(r, normS, recovery); // use normS, not s\n        }\n        return { seed, k2sig };\n    }\n    const defaultSigOpts = { lowS: CURVE.lowS, prehash: false };\n    const defaultVerOpts = { lowS: CURVE.lowS, prehash: false };\n    /**\n     * Signs message hash with a private key.\n     * ```\n     * sign(m, d, k) where\n     *   (x, y) = G × k\n     *   r = x mod n\n     *   s = (m + dr)/k mod n\n     * ```\n     * @param msgHash NOT message. msg needs to be hashed to `msgHash`, or use `prehash`.\n     * @param privKey private key\n     * @param opts lowS for non-malleable sigs. extraEntropy for mixing randomness into k. prehash will hash first arg.\n     * @returns signature with recovery param\n     */\n    function sign(msgHash, privKey, opts = defaultSigOpts) {\n        const { seed, k2sig } = prepSig(msgHash, privKey, opts); // Steps A, D of RFC6979 3.2.\n        const C = CURVE;\n        const drbg = ut.createHmacDrbg(C.hash.outputLen, C.nByteLength, C.hmac);\n        return drbg(seed, k2sig); // Steps B, C, D, E, F, G\n    }\n    // Enable precomputes. Slows down first publicKey computation by 20ms.\n    Point.BASE._setWindowSize(8);\n    // utils.precompute(8, ProjectivePoint.BASE)\n    /**\n     * Verifies a signature against message hash and public key.\n     * Rejects lowS signatures by default: to override,\n     * specify option `{lowS: false}`. Implements section 4.1.4 from https://www.secg.org/sec1-v2.pdf:\n     *\n     * ```\n     * verify(r, s, h, P) where\n     *   U1 = hs^-1 mod n\n     *   U2 = rs^-1 mod n\n     *   R = U1⋅G - U2⋅P\n     *   mod(R.x, n) == r\n     * ```\n     */\n    function verify(signature, msgHash, publicKey, opts = defaultVerOpts) {\n        const sg = signature;\n        msgHash = ensureBytes('msgHash', msgHash);\n        publicKey = ensureBytes('publicKey', publicKey);\n        if ('strict' in opts)\n            throw new Error('options.strict was renamed to lowS');\n        const { lowS, prehash } = opts;\n        let _sig = undefined;\n        let P;\n        try {\n            if (typeof sg === 'string' || sg instanceof Uint8Array) {\n                // Signature can be represented in 2 ways: compact (2*nByteLength) & DER (variable-length).\n                // Since DER can also be 2*nByteLength bytes, we check for it first.\n                try {\n                    _sig = Signature.fromDER(sg);\n                }\n                catch (derError) {\n                    if (!(derError instanceof DER.Err))\n                        throw derError;\n                    _sig = Signature.fromCompact(sg);\n                }\n            }\n            else if (typeof sg === 'object' && typeof sg.r === 'bigint' && typeof sg.s === 'bigint') {\n                const { r, s } = sg;\n                _sig = new Signature(r, s);\n            }\n            else {\n                throw new Error('PARSE');\n            }\n            P = Point.fromHex(publicKey);\n        }\n        catch (error) {\n            if (error.message === 'PARSE')\n                throw new Error(`signature must be Signature instance, Uint8Array or hex string`);\n            return false;\n        }\n        if (lowS && _sig.hasHighS())\n            return false;\n        if (prehash)\n            msgHash = CURVE.hash(msgHash);\n        const { r, s } = _sig;\n        const h = bits2int_modN(msgHash); // Cannot use fields methods, since it is group element\n        const is = invN(s); // s^-1\n        const u1 = modN(h * is); // u1 = hs^-1 mod n\n        const u2 = modN(r * is); // u2 = rs^-1 mod n\n        const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2)?.toAffine(); // R = u1⋅G + u2⋅P\n        if (!R)\n            return false;\n        const v = modN(R.x);\n        return v === r;\n    }\n    return {\n        CURVE,\n        getPublicKey,\n        getSharedSecret,\n        sign,\n        verify,\n        ProjectivePoint: Point,\n        Signature,\n        utils,\n    };\n}\n/**\n * Implementation of the Shallue and van de Woestijne method for any weierstrass curve.\n * TODO: check if there is a way to merge this with uvRatio in Edwards; move to modular.\n * b = True and y = sqrt(u / v) if (u / v) is square in F, and\n * b = False and y = sqrt(Z * (u / v)) otherwise.\n * @param Fp\n * @param Z\n * @returns\n */\nexport function SWUFpSqrtRatio(Fp, Z) {\n    // Generic implementation\n    const q = Fp.ORDER;\n    let l = _0n;\n    for (let o = q - _1n; o % _2n === _0n; o /= _2n)\n        l += _1n;\n    const c1 = l; // 1. c1, the largest integer such that 2^c1 divides q - 1.\n    // We need 2n ** c1 and 2n ** (c1-1). We can't use **; but we can use <<.\n    // 2n ** c1 == 2n << (c1-1)\n    const _2n_pow_c1_1 = _2n << (c1 - _1n - _1n);\n    const _2n_pow_c1 = _2n_pow_c1_1 * _2n;\n    const c2 = (q - _1n) / _2n_pow_c1; // 2. c2 = (q - 1) / (2^c1)  # Integer arithmetic\n    const c3 = (c2 - _1n) / _2n; // 3. c3 = (c2 - 1) / 2            # Integer arithmetic\n    const c4 = _2n_pow_c1 - _1n; // 4. c4 = 2^c1 - 1                # Integer arithmetic\n    const c5 = _2n_pow_c1_1; // 5. c5 = 2^(c1 - 1)                  # Integer arithmetic\n    const c6 = Fp.pow(Z, c2); // 6. c6 = Z^c2\n    const c7 = Fp.pow(Z, (c2 + _1n) / _2n); // 7. c7 = Z^((c2 + 1) / 2)\n    let sqrtRatio = (u, v) => {\n        let tv1 = c6; // 1. tv1 = c6\n        let tv2 = Fp.pow(v, c4); // 2. tv2 = v^c4\n        let tv3 = Fp.sqr(tv2); // 3. tv3 = tv2^2\n        tv3 = Fp.mul(tv3, v); // 4. tv3 = tv3 * v\n        let tv5 = Fp.mul(u, tv3); // 5. tv5 = u * tv3\n        tv5 = Fp.pow(tv5, c3); // 6. tv5 = tv5^c3\n        tv5 = Fp.mul(tv5, tv2); // 7. tv5 = tv5 * tv2\n        tv2 = Fp.mul(tv5, v); // 8. tv2 = tv5 * v\n        tv3 = Fp.mul(tv5, u); // 9. tv3 = tv5 * u\n        let tv4 = Fp.mul(tv3, tv2); // 10. tv4 = tv3 * tv2\n        tv5 = Fp.pow(tv4, c5); // 11. tv5 = tv4^c5\n        let isQR = Fp.eql(tv5, Fp.ONE); // 12. isQR = tv5 == 1\n        tv2 = Fp.mul(tv3, c7); // 13. tv2 = tv3 * c7\n        tv5 = Fp.mul(tv4, tv1); // 14. tv5 = tv4 * tv1\n        tv3 = Fp.cmov(tv2, tv3, isQR); // 15. tv3 = CMOV(tv2, tv3, isQR)\n        tv4 = Fp.cmov(tv5, tv4, isQR); // 16. tv4 = CMOV(tv5, tv4, isQR)\n        // 17. for i in (c1, c1 - 1, ..., 2):\n        for (let i = c1; i > _1n; i--) {\n            let tv5 = i - _2n; // 18.    tv5 = i - 2\n            tv5 = _2n << (tv5 - _1n); // 19.    tv5 = 2^tv5\n            let tvv5 = Fp.pow(tv4, tv5); // 20.    tv5 = tv4^tv5\n            const e1 = Fp.eql(tvv5, Fp.ONE); // 21.    e1 = tv5 == 1\n            tv2 = Fp.mul(tv3, tv1); // 22.    tv2 = tv3 * tv1\n            tv1 = Fp.mul(tv1, tv1); // 23.    tv1 = tv1 * tv1\n            tvv5 = Fp.mul(tv4, tv1); // 24.    tv5 = tv4 * tv1\n            tv3 = Fp.cmov(tv2, tv3, e1); // 25.    tv3 = CMOV(tv2, tv3, e1)\n            tv4 = Fp.cmov(tvv5, tv4, e1); // 26.    tv4 = CMOV(tv5, tv4, e1)\n        }\n        return { isValid: isQR, value: tv3 };\n    };\n    if (Fp.ORDER % _4n === _3n) {\n        // sqrt_ratio_3mod4(u, v)\n        const c1 = (Fp.ORDER - _3n) / _4n; // 1. c1 = (q - 3) / 4     # Integer arithmetic\n        const c2 = Fp.sqrt(Fp.neg(Z)); // 2. c2 = sqrt(-Z)\n        sqrtRatio = (u, v) => {\n            let tv1 = Fp.sqr(v); // 1. tv1 = v^2\n            const tv2 = Fp.mul(u, v); // 2. tv2 = u * v\n            tv1 = Fp.mul(tv1, tv2); // 3. tv1 = tv1 * tv2\n            let y1 = Fp.pow(tv1, c1); // 4. y1 = tv1^c1\n            y1 = Fp.mul(y1, tv2); // 5. y1 = y1 * tv2\n            const y2 = Fp.mul(y1, c2); // 6. y2 = y1 * c2\n            const tv3 = Fp.mul(Fp.sqr(y1), v); // 7. tv3 = y1^2; 8. tv3 = tv3 * v\n            const isQR = Fp.eql(tv3, u); // 9. isQR = tv3 == u\n            let y = Fp.cmov(y2, y1, isQR); // 10. y = CMOV(y2, y1, isQR)\n            return { isValid: isQR, value: y }; // 11. return (isQR, y) isQR ? y : y*c2\n        };\n    }\n    // No curves uses that\n    // if (Fp.ORDER % _8n === _5n) // sqrt_ratio_5mod8\n    return sqrtRatio;\n}\n/**\n * Simplified Shallue-van de Woestijne-Ulas Method\n * https://www.rfc-editor.org/rfc/rfc9380#section-6.6.2\n */\nexport function mapToCurveSimpleSWU(Fp, opts) {\n    mod.validateField(Fp);\n    if (!Fp.isValid(opts.A) || !Fp.isValid(opts.B) || !Fp.isValid(opts.Z))\n        throw new Error('mapToCurveSimpleSWU: invalid opts');\n    const sqrtRatio = SWUFpSqrtRatio(Fp, opts.Z);\n    if (!Fp.isOdd)\n        throw new Error('Fp.isOdd is not implemented!');\n    // Input: u, an element of F.\n    // Output: (x, y), a point on E.\n    return (u) => {\n        // prettier-ignore\n        let tv1, tv2, tv3, tv4, tv5, tv6, x, y;\n        tv1 = Fp.sqr(u); // 1.  tv1 = u^2\n        tv1 = Fp.mul(tv1, opts.Z); // 2.  tv1 = Z * tv1\n        tv2 = Fp.sqr(tv1); // 3.  tv2 = tv1^2\n        tv2 = Fp.add(tv2, tv1); // 4.  tv2 = tv2 + tv1\n        tv3 = Fp.add(tv2, Fp.ONE); // 5.  tv3 = tv2 + 1\n        tv3 = Fp.mul(tv3, opts.B); // 6.  tv3 = B * tv3\n        tv4 = Fp.cmov(opts.Z, Fp.neg(tv2), !Fp.eql(tv2, Fp.ZERO)); // 7.  tv4 = CMOV(Z, -tv2, tv2 != 0)\n        tv4 = Fp.mul(tv4, opts.A); // 8.  tv4 = A * tv4\n        tv2 = Fp.sqr(tv3); // 9.  tv2 = tv3^2\n        tv6 = Fp.sqr(tv4); // 10. tv6 = tv4^2\n        tv5 = Fp.mul(tv6, opts.A); // 11. tv5 = A * tv6\n        tv2 = Fp.add(tv2, tv5); // 12. tv2 = tv2 + tv5\n        tv2 = Fp.mul(tv2, tv3); // 13. tv2 = tv2 * tv3\n        tv6 = Fp.mul(tv6, tv4); // 14. tv6 = tv6 * tv4\n        tv5 = Fp.mul(tv6, opts.B); // 15. tv5 = B * tv6\n        tv2 = Fp.add(tv2, tv5); // 16. tv2 = tv2 + tv5\n        x = Fp.mul(tv1, tv3); // 17.   x = tv1 * tv3\n        const { isValid, value } = sqrtRatio(tv2, tv6); // 18. (is_gx1_square, y1) = sqrt_ratio(tv2, tv6)\n        y = Fp.mul(tv1, u); // 19.   y = tv1 * u  -> Z * u^3 * y1\n        y = Fp.mul(y, value); // 20.   y = y * y1\n        x = Fp.cmov(x, tv3, isValid); // 21.   x = CMOV(x, tv3, is_gx1_square)\n        y = Fp.cmov(y, value, isValid); // 22.   y = CMOV(y, y1, is_gx1_square)\n        const e1 = Fp.isOdd(u) === Fp.isOdd(y); // 23.  e1 = sgn0(u) == sgn0(y)\n        y = Fp.cmov(Fp.neg(y), y, e1); // 24.   y = CMOV(-y, y, e1)\n        x = Fp.div(x, tv4); // 25.   x = x / tv4\n        return { x, y };\n    };\n}\n//# sourceMappingURL=weierstrass.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { hmac } from '@noble/hashes/hmac';\nimport { concatBytes, randomBytes } from '@noble/hashes/utils';\nimport { weierstrass } from './abstract/weierstrass.js';\n// connects noble-curves to noble-hashes\nexport function getHash(hash) {\n    return {\n        hash,\n        hmac: (key, ...msgs) => hmac(hash, key, concatBytes(...msgs)),\n        randomBytes,\n    };\n}\nexport function createCurve(curveDef, defHash) {\n    const create = (hash) => weierstrass({ ...curveDef, ...getHash(hash) });\n    return Object.freeze({ ...create(defHash), create });\n}\n//# sourceMappingURL=_shortw_utils.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha256 } from '@noble/hashes/sha256';\nimport { randomBytes } from '@noble/hashes/utils';\nimport { Field, mod, pow2 } from './abstract/modular.js';\nimport { mapToCurveSimpleSWU } from './abstract/weierstrass.js';\nimport { bytesToNumberBE, concatBytes, ensureBytes, numberToBytesBE } from './abstract/utils.js';\nimport { createHasher, isogenyMap } from './abstract/hash-to-curve.js';\nimport { createCurve } from './_shortw_utils.js';\nconst secp256k1P = BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f');\nconst secp256k1N = BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141');\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst divNearest = (a, b) => (a + b / _2n) / b;\n/**\n * √n = n^((p+1)/4) for fields p = 3 mod 4. We unwrap the loop and multiply bit-by-bit.\n * (P+1n/4n).toString(2) would produce bits [223x 1, 0, 22x 1, 4x 0, 11, 00]\n */\nfunction sqrtMod(y) {\n    const P = secp256k1P;\n    // prettier-ignore\n    const _3n = BigInt(3), _6n = BigInt(6), _11n = BigInt(11), _22n = BigInt(22);\n    // prettier-ignore\n    const _23n = BigInt(23), _44n = BigInt(44), _88n = BigInt(88);\n    const b2 = (y * y * y) % P; // x^3, 11\n    const b3 = (b2 * b2 * y) % P; // x^7\n    const b6 = (pow2(b3, _3n, P) * b3) % P;\n    const b9 = (pow2(b6, _3n, P) * b3) % P;\n    const b11 = (pow2(b9, _2n, P) * b2) % P;\n    const b22 = (pow2(b11, _11n, P) * b11) % P;\n    const b44 = (pow2(b22, _22n, P) * b22) % P;\n    const b88 = (pow2(b44, _44n, P) * b44) % P;\n    const b176 = (pow2(b88, _88n, P) * b88) % P;\n    const b220 = (pow2(b176, _44n, P) * b44) % P;\n    const b223 = (pow2(b220, _3n, P) * b3) % P;\n    const t1 = (pow2(b223, _23n, P) * b22) % P;\n    const t2 = (pow2(t1, _6n, P) * b2) % P;\n    const root = pow2(t2, _2n, P);\n    if (!Fp.eql(Fp.sqr(root), y))\n        throw new Error('Cannot find square root');\n    return root;\n}\nconst Fp = Field(secp256k1P, undefined, undefined, { sqrt: sqrtMod });\nexport const secp256k1 = createCurve({\n    a: BigInt(0),\n    b: BigInt(7),\n    Fp,\n    n: secp256k1N,\n    // Base point (x, y) aka generator point\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    h: BigInt(1),\n    lowS: true,\n    /**\n     * secp256k1 belongs to Koblitz curves: it has efficiently computable endomorphism.\n     * Endomorphism uses 2x less RAM, speeds up precomputation by 2x and ECDH / key recovery by 20%.\n     * For precomputed wNAF it trades off 1/2 init time & 1/3 ram for 20% perf hit.\n     * Explanation: https://gist.github.com/paulmillr/eb670806793e84df628a7c434a873066\n     */\n    endo: {\n        beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n        splitScalar: (k) => {\n            const n = secp256k1N;\n            const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n            const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n            const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n            const b2 = a1;\n            const POW_2_128 = BigInt('0x100000000000000000000000000000000'); // (2n**128n).toString(16)\n            const c1 = divNearest(b2 * k, n);\n            const c2 = divNearest(-b1 * k, n);\n            let k1 = mod(k - c1 * a1 - c2 * a2, n);\n            let k2 = mod(-c1 * b1 - c2 * b2, n);\n            const k1neg = k1 > POW_2_128;\n            const k2neg = k2 > POW_2_128;\n            if (k1neg)\n                k1 = n - k1;\n            if (k2neg)\n                k2 = n - k2;\n            if (k1 > POW_2_128 || k2 > POW_2_128) {\n                throw new Error('splitScalar: Endomorphism failed, k=' + k);\n            }\n            return { k1neg, k1, k2neg, k2 };\n        },\n    },\n}, sha256);\n// Schnorr signatures are superior to ECDSA from above. Below is Schnorr-specific BIP0340 code.\n// https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\nconst _0n = BigInt(0);\nconst fe = (x) => typeof x === 'bigint' && _0n < x && x < secp256k1P;\nconst ge = (x) => typeof x === 'bigint' && _0n < x && x < secp256k1N;\n/** An object mapping tags to their tagged hash prefix of [SHA256(tag) | SHA256(tag)] */\nconst TAGGED_HASH_PREFIXES = {};\nfunction taggedHash(tag, ...messages) {\n    let tagP = TAGGED_HASH_PREFIXES[tag];\n    if (tagP === undefined) {\n        const tagH = sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n        tagP = concatBytes(tagH, tagH);\n        TAGGED_HASH_PREFIXES[tag] = tagP;\n    }\n    return sha256(concatBytes(tagP, ...messages));\n}\n// ECDSA compact points are 33-byte. Schnorr is 32: we strip first byte 0x02 or 0x03\nconst pointToBytes = (point) => point.toRawBytes(true).slice(1);\nconst numTo32b = (n) => numberToBytesBE(n, 32);\nconst modP = (x) => mod(x, secp256k1P);\nconst modN = (x) => mod(x, secp256k1N);\nconst Point = secp256k1.ProjectivePoint;\nconst GmulAdd = (Q, a, b) => Point.BASE.multiplyAndAddUnsafe(Q, a, b);\n// Calculate point, scalar and bytes\nfunction schnorrGetExtPubKey(priv) {\n    let d_ = secp256k1.utils.normPrivateKeyToScalar(priv); // same method executed in fromPrivateKey\n    let p = Point.fromPrivateKey(d_); // P = d'⋅G; 0 < d' < n check is done inside\n    const scalar = p.hasEvenY() ? d_ : modN(-d_);\n    return { scalar: scalar, bytes: pointToBytes(p) };\n}\n/**\n * lift_x from BIP340. Convert 32-byte x coordinate to elliptic curve point.\n * @returns valid point checked for being on-curve\n */\nfunction lift_x(x) {\n    if (!fe(x))\n        throw new Error('bad x: need 0 < x < p'); // Fail if x ≥ p.\n    const xx = modP(x * x);\n    const c = modP(xx * x + BigInt(7)); // Let c = x³ + 7 mod p.\n    let y = sqrtMod(c); // Let y = c^(p+1)/4 mod p.\n    if (y % _2n !== _0n)\n        y = modP(-y); // Return the unique point P such that x(P) = x and\n    const p = new Point(x, y, _1n); // y(P) = y if y mod 2 = 0 or y(P) = p-y otherwise.\n    p.assertValidity();\n    return p;\n}\n/**\n * Create tagged hash, convert it to bigint, reduce modulo-n.\n */\nfunction challenge(...args) {\n    return modN(bytesToNumberBE(taggedHash('BIP0340/challenge', ...args)));\n}\n/**\n * Schnorr public key is just `x` coordinate of Point as per BIP340.\n */\nfunction schnorrGetPublicKey(privateKey) {\n    return schnorrGetExtPubKey(privateKey).bytes; // d'=int(sk). Fail if d'=0 or d'≥n. Ret bytes(d'⋅G)\n}\n/**\n * Creates Schnorr signature as per BIP340. Verifies itself before returning anything.\n * auxRand is optional and is not the sole source of k generation: bad CSPRNG won't be dangerous.\n */\nfunction schnorrSign(message, privateKey, auxRand = randomBytes(32)) {\n    const m = ensureBytes('message', message);\n    const { bytes: px, scalar: d } = schnorrGetExtPubKey(privateKey); // checks for isWithinCurveOrder\n    const a = ensureBytes('auxRand', auxRand, 32); // Auxiliary random data a: a 32-byte array\n    const t = numTo32b(d ^ bytesToNumberBE(taggedHash('BIP0340/aux', a))); // Let t be the byte-wise xor of bytes(d) and hash/aux(a)\n    const rand = taggedHash('BIP0340/nonce', t, px, m); // Let rand = hash/nonce(t || bytes(P) || m)\n    const k_ = modN(bytesToNumberBE(rand)); // Let k' = int(rand) mod n\n    if (k_ === _0n)\n        throw new Error('sign failed: k is zero'); // Fail if k' = 0.\n    const { bytes: rx, scalar: k } = schnorrGetExtPubKey(k_); // Let R = k'⋅G.\n    const e = challenge(rx, px, m); // Let e = int(hash/challenge(bytes(R) || bytes(P) || m)) mod n.\n    const sig = new Uint8Array(64); // Let sig = bytes(R) || bytes((k + ed) mod n).\n    sig.set(rx, 0);\n    sig.set(numTo32b(modN(k + e * d)), 32);\n    // If Verify(bytes(P), m, sig) (see below) returns failure, abort\n    if (!schnorrVerify(sig, m, px))\n        throw new Error('sign: Invalid signature produced');\n    return sig;\n}\n/**\n * Verifies Schnorr signature.\n * Will swallow errors & return false except for initial type validation of arguments.\n */\nfunction schnorrVerify(signature, message, publicKey) {\n    const sig = ensureBytes('signature', signature, 64);\n    const m = ensureBytes('message', message);\n    const pub = ensureBytes('publicKey', publicKey, 32);\n    try {\n        const P = lift_x(bytesToNumberBE(pub)); // P = lift_x(int(pk)); fail if that fails\n        const r = bytesToNumberBE(sig.subarray(0, 32)); // Let r = int(sig[0:32]); fail if r ≥ p.\n        if (!fe(r))\n            return false;\n        const s = bytesToNumberBE(sig.subarray(32, 64)); // Let s = int(sig[32:64]); fail if s ≥ n.\n        if (!ge(s))\n            return false;\n        const e = challenge(numTo32b(r), pointToBytes(P), m); // int(challenge(bytes(r)||bytes(P)||m))%n\n        const R = GmulAdd(P, s, modN(-e)); // R = s⋅G - e⋅P\n        if (!R || !R.hasEvenY() || R.toAffine().x !== r)\n            return false; // -eP == (n-e)P\n        return true; // Fail if is_infinite(R) / not has_even_y(R) / x(R) ≠ r.\n    }\n    catch (error) {\n        return false;\n    }\n}\nexport const schnorr = /* @__PURE__ */ (() => ({\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    utils: {\n        randomPrivateKey: secp256k1.utils.randomPrivateKey,\n        lift_x,\n        pointToBytes,\n        numberToBytesBE,\n        bytesToNumberBE,\n        taggedHash,\n        mod,\n    },\n}))();\nconst isoMap = /* @__PURE__ */ (() => isogenyMap(Fp, [\n    // xNum\n    [\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7',\n        '0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581',\n        '0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262',\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c',\n    ],\n    // xDen\n    [\n        '0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b',\n        '0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n    // yNum\n    [\n        '0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c',\n        '0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3',\n        '0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931',\n        '0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84',\n    ],\n    // yDen\n    [\n        '0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b',\n        '0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573',\n        '0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n].map((i) => i.map((j) => BigInt(j)))))();\nconst mapSWU = /* @__PURE__ */ (() => mapToCurveSimpleSWU(Fp, {\n    A: BigInt('0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533'),\n    B: BigInt('1771'),\n    Z: Fp.create(BigInt('-11')),\n}))();\nconst htf = /* @__PURE__ */ (() => createHasher(secp256k1.ProjectivePoint, (scalars) => {\n    const { x, y } = mapSWU(Fp.create(scalars[0]));\n    return isoMap(x, y);\n}, {\n    DST: 'secp256k1_XMD:SHA-256_SSWU_RO_',\n    encodeDST: 'secp256k1_XMD:SHA-256_SSWU_NU_',\n    p: Fp.ORDER,\n    m: 1,\n    k: 128,\n    expand: 'xmd',\n    hash: sha256,\n}))();\nexport const hashToCurve = /* @__PURE__ */ (() => htf.hashToCurve)();\nexport const encodeToCurve = /* @__PURE__ */ (() => htf.encodeToCurve)();\n//# sourceMappingURL=secp256k1.js.map","export const crypto = typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n//# sourceMappingURL=crypto.js.map","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated, we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\nconst u8a = (a) => a instanceof Uint8Array;\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    if (!u8a(bytes))\n        throw new Error('Uint8Array expected');\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const len = hex.length;\n    if (len % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + len);\n    const array = new Uint8Array(len / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!u8a(data))\n        throw new Error(`expected Uint8Array, got ${typeof data}`);\n    return data;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    const r = new Uint8Array(arrays.reduce((sum, a) => sum + a.length, 0));\n    let pad = 0; // walk through each item, ensure they have proper type\n    arrays.forEach((a) => {\n        if (!u8a(a))\n            throw new Error('Uint8Array expected');\n        r.set(a, pad);\n        pad += a.length;\n    });\n    return r;\n}\n// For runtime check if class implements interface\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj) => Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\n        throw new Error('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexport function wrapConstructor(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexport function wrapXOFConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto && typeof crypto.getRandomValues === 'function') {\n        return crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n//# sourceMappingURL=utils.js.map","export function number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nexport function bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`Expected boolean, not ${b}`);\n}\nexport function bytes(b, ...lengths) {\n    if (!(b instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nexport function hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nexport function exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nexport function output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nconst assert = {\n    number,\n    bool,\n    bytes,\n    hash,\n    exists,\n    output,\n};\nexport default assert;\n//# sourceMappingURL=_assert.js.map","import assert from './_assert.js';\nimport { Hash, createView, toBytes } from './utils.js';\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nexport class SHA2 extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        assert.exists(this);\n        const { view, buffer, blockLen } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        assert.exists(this);\n        assert.output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n//# sourceMappingURL=_sha2.js.map","import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n// Choice: a ? b : c\nconst Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = new Uint32Array(64);\nclass SHA256 extends SHA2 {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = IV[0] | 0;\n        this.B = IV[1] | 0;\n        this.C = IV[2] | 0;\n        this.D = IV[3] | 0;\n        this.E = IV[4] | 0;\n        this.F = IV[5] | 0;\n        this.G = IV[6] | 0;\n        this.H = IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n    constructor() {\n        super();\n        this.A = 0xc1059ed8 | 0;\n        this.B = 0x367cd507 | 0;\n        this.C = 0x3070dd17 | 0;\n        this.D = 0xf70e5939 | 0;\n        this.E = 0xffc00b31 | 0;\n        this.F = 0x68581511 | 0;\n        this.G = 0x64f98fa7 | 0;\n        this.H = 0xbefa4fa4 | 0;\n        this.outputLen = 28;\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = wrapConstructor(() => new SHA256());\nexport const sha224 = wrapConstructor(() => new SHA224());\n//# sourceMappingURL=sha256.js.map","/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nexport function assertNumber(n) {\n    if (!Number.isSafeInteger(n))\n        throw new Error(`Wrong integer: ${n}`);\n}\nfunction chain(...args) {\n    const wrap = (a, b) => (c) => a(b(c));\n    const encode = Array.from(args)\n        .reverse()\n        .reduce((acc, i) => (acc ? wrap(acc, i.encode) : i.encode), undefined);\n    const decode = args.reduce((acc, i) => (acc ? wrap(acc, i.decode) : i.decode), undefined);\n    return { encode, decode };\n}\nfunction alphabet(alphabet) {\n    return {\n        encode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('alphabet.encode input should be an array of numbers');\n            return digits.map((i) => {\n                assertNumber(i);\n                if (i < 0 || i >= alphabet.length)\n                    throw new Error(`Digit index outside alphabet: ${i} (alphabet: ${alphabet.length})`);\n                return alphabet[i];\n            });\n        },\n        decode: (input) => {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('alphabet.decode input should be array of strings');\n            return input.map((letter) => {\n                if (typeof letter !== 'string')\n                    throw new Error(`alphabet.decode: not string element=${letter}`);\n                const index = alphabet.indexOf(letter);\n                if (index === -1)\n                    throw new Error(`Unknown letter: \"${letter}\". Allowed: ${alphabet}`);\n                return index;\n            });\n        },\n    };\n}\nfunction join(separator = '') {\n    if (typeof separator !== 'string')\n        throw new Error('join separator should be string');\n    return {\n        encode: (from) => {\n            if (!Array.isArray(from) || (from.length && typeof from[0] !== 'string'))\n                throw new Error('join.encode input should be array of strings');\n            for (let i of from)\n                if (typeof i !== 'string')\n                    throw new Error(`join.encode: non-string input=${i}`);\n            return from.join(separator);\n        },\n        decode: (to) => {\n            if (typeof to !== 'string')\n                throw new Error('join.decode input should be string');\n            return to.split(separator);\n        },\n    };\n}\nfunction padding(bits, chr = '=') {\n    assertNumber(bits);\n    if (typeof chr !== 'string')\n        throw new Error('padding chr should be string');\n    return {\n        encode(data) {\n            if (!Array.isArray(data) || (data.length && typeof data[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of data)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.encode: non-string input=${i}`);\n            while ((data.length * bits) % 8)\n                data.push(chr);\n            return data;\n        },\n        decode(input) {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of input)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.decode: non-string input=${i}`);\n            let end = input.length;\n            if ((end * bits) % 8)\n                throw new Error('Invalid padding: string should have whole number of bytes');\n            for (; end > 0 && input[end - 1] === chr; end--) {\n                if (!(((end - 1) * bits) % 8))\n                    throw new Error('Invalid padding: string has too much padding');\n            }\n            return input.slice(0, end);\n        },\n    };\n}\nfunction normalize(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('normalize fn should be function');\n    return { encode: (from) => from, decode: (to) => fn(to) };\n}\nfunction convertRadix(data, from, to) {\n    if (from < 2)\n        throw new Error(`convertRadix: wrong from=${from}, base cannot be less than 2`);\n    if (to < 2)\n        throw new Error(`convertRadix: wrong to=${to}, base cannot be less than 2`);\n    if (!Array.isArray(data))\n        throw new Error('convertRadix: data should be array');\n    if (!data.length)\n        return [];\n    let pos = 0;\n    const res = [];\n    const digits = Array.from(data);\n    digits.forEach((d) => {\n        assertNumber(d);\n        if (d < 0 || d >= from)\n            throw new Error(`Wrong integer: ${d}`);\n    });\n    while (true) {\n        let carry = 0;\n        let done = true;\n        for (let i = pos; i < digits.length; i++) {\n            const digit = digits[i];\n            const digitBase = from * carry + digit;\n            if (!Number.isSafeInteger(digitBase) ||\n                (from * carry) / from !== carry ||\n                digitBase - digit !== from * carry) {\n                throw new Error('convertRadix: carry overflow');\n            }\n            carry = digitBase % to;\n            digits[i] = Math.floor(digitBase / to);\n            if (!Number.isSafeInteger(digits[i]) || digits[i] * to + carry !== digitBase)\n                throw new Error('convertRadix: carry overflow');\n            if (!done)\n                continue;\n            else if (!digits[i])\n                pos = i;\n            else\n                done = false;\n        }\n        res.push(carry);\n        if (done)\n            break;\n    }\n    for (let i = 0; i < data.length - 1 && data[i] === 0; i++)\n        res.push(0);\n    return res.reverse();\n}\nconst gcd = (a, b) => (!b ? a : gcd(b, a % b));\nconst radix2carry = (from, to) => from + (to - gcd(from, to));\nfunction convertRadix2(data, from, to, padding) {\n    if (!Array.isArray(data))\n        throw new Error('convertRadix2: data should be array');\n    if (from <= 0 || from > 32)\n        throw new Error(`convertRadix2: wrong from=${from}`);\n    if (to <= 0 || to > 32)\n        throw new Error(`convertRadix2: wrong to=${to}`);\n    if (radix2carry(from, to) > 32) {\n        throw new Error(`convertRadix2: carry overflow from=${from} to=${to} carryBits=${radix2carry(from, to)}`);\n    }\n    let carry = 0;\n    let pos = 0;\n    const mask = 2 ** to - 1;\n    const res = [];\n    for (const n of data) {\n        assertNumber(n);\n        if (n >= 2 ** from)\n            throw new Error(`convertRadix2: invalid data word=${n} from=${from}`);\n        carry = (carry << from) | n;\n        if (pos + from > 32)\n            throw new Error(`convertRadix2: carry overflow pos=${pos} from=${from}`);\n        pos += from;\n        for (; pos >= to; pos -= to)\n            res.push(((carry >> (pos - to)) & mask) >>> 0);\n        carry &= 2 ** pos - 1;\n    }\n    carry = (carry << (to - pos)) & mask;\n    if (!padding && pos >= from)\n        throw new Error('Excess padding');\n    if (!padding && carry)\n        throw new Error(`Non-zero padding: ${carry}`);\n    if (padding && pos > 0)\n        res.push(carry >>> 0);\n    return res;\n}\nfunction radix(num) {\n    assertNumber(num);\n    return {\n        encode: (bytes) => {\n            if (!(bytes instanceof Uint8Array))\n                throw new Error('radix.encode input should be Uint8Array');\n            return convertRadix(Array.from(bytes), 2 ** 8, num);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix.decode input should be array of strings');\n            return Uint8Array.from(convertRadix(digits, num, 2 ** 8));\n        },\n    };\n}\nfunction radix2(bits, revPadding = false) {\n    assertNumber(bits);\n    if (bits <= 0 || bits > 32)\n        throw new Error('radix2: bits should be in (0..32]');\n    if (radix2carry(8, bits) > 32 || radix2carry(bits, 8) > 32)\n        throw new Error('radix2: carry overflow');\n    return {\n        encode: (bytes) => {\n            if (!(bytes instanceof Uint8Array))\n                throw new Error('radix2.encode input should be Uint8Array');\n            return convertRadix2(Array.from(bytes), 8, bits, !revPadding);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix2.decode input should be array of strings');\n            return Uint8Array.from(convertRadix2(digits, bits, 8, revPadding));\n        },\n    };\n}\nfunction unsafeWrapper(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('unsafeWrapper fn should be function');\n    return function (...args) {\n        try {\n            return fn.apply(null, args);\n        }\n        catch (e) { }\n    };\n}\nfunction checksum(len, fn) {\n    assertNumber(len);\n    if (typeof fn !== 'function')\n        throw new Error('checksum fn should be function');\n    return {\n        encode(data) {\n            if (!(data instanceof Uint8Array))\n                throw new Error('checksum.encode: input should be Uint8Array');\n            const checksum = fn(data).slice(0, len);\n            const res = new Uint8Array(data.length + len);\n            res.set(data);\n            res.set(checksum, data.length);\n            return res;\n        },\n        decode(data) {\n            if (!(data instanceof Uint8Array))\n                throw new Error('checksum.decode: input should be Uint8Array');\n            const payload = data.slice(0, -len);\n            const newChecksum = fn(payload).slice(0, len);\n            const oldChecksum = data.slice(-len);\n            for (let i = 0; i < len; i++)\n                if (newChecksum[i] !== oldChecksum[i])\n                    throw new Error('Invalid checksum');\n            return payload;\n        },\n    };\n}\nexport const utils = { alphabet, chain, checksum, radix, radix2, join, padding };\nexport const base16 = chain(radix2(4), alphabet('0123456789ABCDEF'), join(''));\nexport const base32 = chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), padding(5), join(''));\nexport const base32hex = chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), padding(5), join(''));\nexport const base32crockford = chain(radix2(5), alphabet('0123456789ABCDEFGHJKMNPQRSTVWXYZ'), join(''), normalize((s) => s.toUpperCase().replace(/O/g, '0').replace(/[IL]/g, '1')));\nexport const base64 = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), padding(6), join(''));\nexport const base64url = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), padding(6), join(''));\nconst genBase58 = (abc) => chain(radix(58), alphabet(abc), join(''));\nexport const base58 = genBase58('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz');\nexport const base58flickr = genBase58('123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ');\nexport const base58xrp = genBase58('rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz');\nconst XMR_BLOCK_LEN = [0, 2, 3, 5, 6, 7, 9, 10, 11];\nexport const base58xmr = {\n    encode(data) {\n        let res = '';\n        for (let i = 0; i < data.length; i += 8) {\n            const block = data.subarray(i, i + 8);\n            res += base58.encode(block).padStart(XMR_BLOCK_LEN[block.length], '1');\n        }\n        return res;\n    },\n    decode(str) {\n        let res = [];\n        for (let i = 0; i < str.length; i += 11) {\n            const slice = str.slice(i, i + 11);\n            const blockLen = XMR_BLOCK_LEN.indexOf(slice.length);\n            const block = base58.decode(slice);\n            for (let j = 0; j < block.length - blockLen; j++) {\n                if (block[j] !== 0)\n                    throw new Error('base58xmr: wrong padding');\n            }\n            res = res.concat(Array.from(block.slice(block.length - blockLen)));\n        }\n        return Uint8Array.from(res);\n    },\n};\nexport const base58check = (sha256) => chain(checksum(4, (data) => sha256(sha256(data))), base58);\nconst BECH_ALPHABET = chain(alphabet('qpzry9x8gf2tvdw0s3jn54khce6mua7l'), join(''));\nconst POLYMOD_GENERATORS = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];\nfunction bech32Polymod(pre) {\n    const b = pre >> 25;\n    let chk = (pre & 0x1ffffff) << 5;\n    for (let i = 0; i < POLYMOD_GENERATORS.length; i++) {\n        if (((b >> i) & 1) === 1)\n            chk ^= POLYMOD_GENERATORS[i];\n    }\n    return chk;\n}\nfunction bechChecksum(prefix, words, encodingConst = 1) {\n    const len = prefix.length;\n    let chk = 1;\n    for (let i = 0; i < len; i++) {\n        const c = prefix.charCodeAt(i);\n        if (c < 33 || c > 126)\n            throw new Error(`Invalid prefix (${prefix})`);\n        chk = bech32Polymod(chk) ^ (c >> 5);\n    }\n    chk = bech32Polymod(chk);\n    for (let i = 0; i < len; i++)\n        chk = bech32Polymod(chk) ^ (prefix.charCodeAt(i) & 0x1f);\n    for (let v of words)\n        chk = bech32Polymod(chk) ^ v;\n    for (let i = 0; i < 6; i++)\n        chk = bech32Polymod(chk);\n    chk ^= encodingConst;\n    return BECH_ALPHABET.encode(convertRadix2([chk % 2 ** 30], 30, 5, false));\n}\nfunction genBech32(encoding) {\n    const ENCODING_CONST = encoding === 'bech32' ? 1 : 0x2bc830a3;\n    const _words = radix2(5);\n    const fromWords = _words.decode;\n    const toWords = _words.encode;\n    const fromWordsUnsafe = unsafeWrapper(fromWords);\n    function encode(prefix, words, limit = 90) {\n        if (typeof prefix !== 'string')\n            throw new Error(`bech32.encode prefix should be string, not ${typeof prefix}`);\n        if (!Array.isArray(words) || (words.length && typeof words[0] !== 'number'))\n            throw new Error(`bech32.encode words should be array of numbers, not ${typeof words}`);\n        const actualLength = prefix.length + 7 + words.length;\n        if (limit !== false && actualLength > limit)\n            throw new TypeError(`Length ${actualLength} exceeds limit ${limit}`);\n        prefix = prefix.toLowerCase();\n        return `${prefix}1${BECH_ALPHABET.encode(words)}${bechChecksum(prefix, words, ENCODING_CONST)}`;\n    }\n    function decode(str, limit = 90) {\n        if (typeof str !== 'string')\n            throw new Error(`bech32.decode input should be string, not ${typeof str}`);\n        if (str.length < 8 || (limit !== false && str.length > limit))\n            throw new TypeError(`Wrong string length: ${str.length} (${str}). Expected (8..${limit})`);\n        const lowered = str.toLowerCase();\n        if (str !== lowered && str !== str.toUpperCase())\n            throw new Error(`String must be lowercase or uppercase`);\n        str = lowered;\n        const sepIndex = str.lastIndexOf('1');\n        if (sepIndex === 0 || sepIndex === -1)\n            throw new Error(`Letter \"1\" must be present between prefix and data only`);\n        const prefix = str.slice(0, sepIndex);\n        const _words = str.slice(sepIndex + 1);\n        if (_words.length < 6)\n            throw new Error('Data must be at least 6 characters long');\n        const words = BECH_ALPHABET.decode(_words).slice(0, -6);\n        const sum = bechChecksum(prefix, words, ENCODING_CONST);\n        if (!_words.endsWith(sum))\n            throw new Error(`Invalid checksum in ${str}: expected \"${sum}\"`);\n        return { prefix, words };\n    }\n    const decodeUnsafe = unsafeWrapper(decode);\n    function decodeToBytes(str) {\n        const { prefix, words } = decode(str, false);\n        return { prefix, words, bytes: fromWords(words) };\n    }\n    return { encode, decode, decodeToBytes, decodeUnsafe, fromWords, fromWordsUnsafe, toWords };\n}\nexport const bech32 = genBech32('bech32');\nexport const bech32m = genBech32('bech32m');\nexport const utf8 = {\n    encode: (data) => new TextDecoder().decode(data),\n    decode: (str) => new TextEncoder().encode(str),\n};\nexport const hex = chain(radix2(4), alphabet('0123456789abcdef'), join(''), normalize((s) => {\n    if (typeof s !== 'string' || s.length % 2)\n        throw new TypeError(`hex.decode: expected string, got ${typeof s} with length ${s.length}`);\n    return s.toLowerCase();\n}));\nconst CODERS = {\n    utf8, hex, base16, base32, base64, base64url, base58, base58xmr\n};\nconst coderTypeError = `Invalid encoding type. Available types: ${Object.keys(CODERS).join(', ')}`;\nexport const bytesToString = (type, bytes) => {\n    if (typeof type !== 'string' || !CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (!(bytes instanceof Uint8Array))\n        throw new TypeError('bytesToString() expects Uint8Array');\n    return CODERS[type].encode(bytes);\n};\nexport const str = bytesToString;\nexport const stringToBytes = (type, str) => {\n    if (!CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (typeof str !== 'string')\n        throw new TypeError('stringToBytes() expects string');\n    return CODERS[type].decode(str);\n};\nexport const bytes = stringToBytes;\n","function number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`positive integer expected, not ${n}`);\n}\nfunction bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`boolean expected, not ${b}`);\n}\nexport function isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\nfunction bytes(b, ...lengths) {\n    if (!isBytes(b))\n        throw new Error('Uint8Array expected');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error(`Uint8Array expected of length ${lengths}, not of length=${b.length}`);\n}\nfunction hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('hash must be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nfunction exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nfunction output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nexport { number, bool, bytes, hash, exists, output };\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n//# sourceMappingURL=_assert.js.map","/*! noble-ciphers - MIT License (c) 2023 Paul Miller (paulmillr.com) */\nimport { bytes as abytes, isBytes } from './_assert.js';\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u16 = (arr) => new Uint16Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 2));\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// big-endian hardware is rare. Just in case someone still decides to run ciphers:\n// early-throw an error because we don't support BE yet.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE)\n    throw new Error('Non little-endian hardware is not supported');\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    abytes(bytes);\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 };\nfunction asciiToBase16(char) {\n    if (char >= asciis._0 && char <= asciis._9)\n        return char - asciis._0;\n    if (char >= asciis._A && char <= asciis._F)\n        return char - (asciis._A - 10);\n    if (char >= asciis._a && char <= asciis._f)\n        return char - (asciis._a - 10);\n    return;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2;\n    }\n    return array;\n}\nexport function hexToNumber(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    // Big Endian\n    return BigInt(hex === '' ? '0' : `0x${hex}`);\n}\n// BE: Big Endian, LE: Little Endian\nexport function bytesToNumberBE(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nexport function numberToBytesBE(n, len) {\n    return hexToBytes(n.toString(16).padStart(len * 2, '0'));\n}\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`string expected, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * @example bytesToUtf8(new Uint8Array([97, 98, 99])) // 'abc'\n */\nexport function bytesToUtf8(bytes) {\n    return new TextDecoder().decode(bytes);\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    else if (isBytes(data))\n        data = data.slice();\n    else\n        throw new Error(`Uint8Array expected, got ${typeof data}`);\n    return data;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        abytes(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\nexport function checkOpts(defaults, opts) {\n    if (opts == null || typeof opts !== 'object')\n        throw new Error('options must be defined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\n// Compares 2 u8a-s in kinda constant time\nexport function equalBytes(a, b) {\n    if (a.length !== b.length)\n        return false;\n    let diff = 0;\n    for (let i = 0; i < a.length; i++)\n        diff |= a[i] ^ b[i];\n    return diff === 0;\n}\n// For runtime check if class implements interface\nexport class Hash {\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nexport const wrapCipher = (params, c) => {\n    Object.assign(c, params);\n    return c;\n};\n// Polyfill for Safari 14\nexport function setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\nexport function u64Lengths(ciphertext, AAD) {\n    const num = new Uint8Array(16);\n    const view = createView(num);\n    setBigUint64(view, 0, BigInt(AAD ? AAD.length : 0), true);\n    setBigUint64(view, 8, BigInt(ciphertext.length), true);\n    return num;\n}\n//# sourceMappingURL=utils.js.map","import { createView, toBytes, u32 } from './utils.js';\nimport { bytes as abytes, exists as aexists, output as aoutput } from './_assert.js';\n// GHash from AES-GCM and its little-endian \"mirror image\" Polyval from AES-SIV.\n// Implemented in terms of GHash with conversion function for keys\n// GCM GHASH from NIST SP800-38d, SIV from RFC 8452.\n// https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-38d.pdf\n// GHASH   modulo: x^128 + x^7   + x^2   + x     + 1\n// POLYVAL modulo: x^128 + x^127 + x^126 + x^121 + 1\nconst BLOCK_SIZE = 16;\n// TODO: rewrite\n// temporary padding buffer\nconst ZEROS16 = /* @__PURE__ */ new Uint8Array(16);\nconst ZEROS32 = u32(ZEROS16);\nconst POLY = 0xe1; // v = 2*v % POLY\n// v = 2*v % POLY\n// NOTE: because x + x = 0 (add/sub is same), mul2(x) != x+x\n// We can multiply any number using montgomery ladder and this function (works as double, add is simple xor)\nconst mul2 = (s0, s1, s2, s3) => {\n    const hiBit = s3 & 1;\n    return {\n        s3: (s2 << 31) | (s3 >>> 1),\n        s2: (s1 << 31) | (s2 >>> 1),\n        s1: (s0 << 31) | (s1 >>> 1),\n        s0: (s0 >>> 1) ^ ((POLY << 24) & -(hiBit & 1)), // reduce % poly\n    };\n};\nconst swapLE = (n) => (((n >>> 0) & 0xff) << 24) |\n    (((n >>> 8) & 0xff) << 16) |\n    (((n >>> 16) & 0xff) << 8) |\n    ((n >>> 24) & 0xff) |\n    0;\n/**\n * `mulX_POLYVAL(ByteReverse(H))` from spec\n * @param k mutated in place\n */\nexport function _toGHASHKey(k) {\n    k.reverse();\n    const hiBit = k[15] & 1;\n    // k >>= 1\n    let carry = 0;\n    for (let i = 0; i < k.length; i++) {\n        const t = k[i];\n        k[i] = (t >>> 1) | carry;\n        carry = (t & 1) << 7;\n    }\n    k[0] ^= -hiBit & 0xe1; // if (hiBit) n ^= 0xe1000000000000000000000000000000;\n    return k;\n}\nconst estimateWindow = (bytes) => {\n    if (bytes > 64 * 1024)\n        return 8;\n    if (bytes > 1024)\n        return 4;\n    return 2;\n};\nclass GHASH {\n    // We select bits per window adaptively based on expectedLength\n    constructor(key, expectedLength) {\n        this.blockLen = BLOCK_SIZE;\n        this.outputLen = BLOCK_SIZE;\n        this.s0 = 0;\n        this.s1 = 0;\n        this.s2 = 0;\n        this.s3 = 0;\n        this.finished = false;\n        key = toBytes(key);\n        abytes(key, 16);\n        const kView = createView(key);\n        let k0 = kView.getUint32(0, false);\n        let k1 = kView.getUint32(4, false);\n        let k2 = kView.getUint32(8, false);\n        let k3 = kView.getUint32(12, false);\n        // generate table of doubled keys (half of montgomery ladder)\n        const doubles = [];\n        for (let i = 0; i < 128; i++) {\n            doubles.push({ s0: swapLE(k0), s1: swapLE(k1), s2: swapLE(k2), s3: swapLE(k3) });\n            ({ s0: k0, s1: k1, s2: k2, s3: k3 } = mul2(k0, k1, k2, k3));\n        }\n        const W = estimateWindow(expectedLength || 1024);\n        if (![1, 2, 4, 8].includes(W))\n            throw new Error(`ghash: wrong window size=${W}, should be 2, 4 or 8`);\n        this.W = W;\n        const bits = 128; // always 128 bits;\n        const windows = bits / W;\n        const windowSize = (this.windowSize = 2 ** W);\n        const items = [];\n        // Create precompute table for window of W bits\n        for (let w = 0; w < windows; w++) {\n            // truth table: 00, 01, 10, 11\n            for (let byte = 0; byte < windowSize; byte++) {\n                // prettier-ignore\n                let s0 = 0, s1 = 0, s2 = 0, s3 = 0;\n                for (let j = 0; j < W; j++) {\n                    const bit = (byte >>> (W - j - 1)) & 1;\n                    if (!bit)\n                        continue;\n                    const { s0: d0, s1: d1, s2: d2, s3: d3 } = doubles[W * w + j];\n                    (s0 ^= d0), (s1 ^= d1), (s2 ^= d2), (s3 ^= d3);\n                }\n                items.push({ s0, s1, s2, s3 });\n            }\n        }\n        this.t = items;\n    }\n    _updateBlock(s0, s1, s2, s3) {\n        (s0 ^= this.s0), (s1 ^= this.s1), (s2 ^= this.s2), (s3 ^= this.s3);\n        const { W, t, windowSize } = this;\n        // prettier-ignore\n        let o0 = 0, o1 = 0, o2 = 0, o3 = 0;\n        const mask = (1 << W) - 1; // 2**W will kill performance.\n        let w = 0;\n        for (const num of [s0, s1, s2, s3]) {\n            for (let bytePos = 0; bytePos < 4; bytePos++) {\n                const byte = (num >>> (8 * bytePos)) & 0xff;\n                for (let bitPos = 8 / W - 1; bitPos >= 0; bitPos--) {\n                    const bit = (byte >>> (W * bitPos)) & mask;\n                    const { s0: e0, s1: e1, s2: e2, s3: e3 } = t[w * windowSize + bit];\n                    (o0 ^= e0), (o1 ^= e1), (o2 ^= e2), (o3 ^= e3);\n                    w += 1;\n                }\n            }\n        }\n        this.s0 = o0;\n        this.s1 = o1;\n        this.s2 = o2;\n        this.s3 = o3;\n    }\n    update(data) {\n        data = toBytes(data);\n        aexists(this);\n        const b32 = u32(data);\n        const blocks = Math.floor(data.length / BLOCK_SIZE);\n        const left = data.length % BLOCK_SIZE;\n        for (let i = 0; i < blocks; i++) {\n            this._updateBlock(b32[i * 4 + 0], b32[i * 4 + 1], b32[i * 4 + 2], b32[i * 4 + 3]);\n        }\n        if (left) {\n            ZEROS16.set(data.subarray(blocks * BLOCK_SIZE));\n            this._updateBlock(ZEROS32[0], ZEROS32[1], ZEROS32[2], ZEROS32[3]);\n            ZEROS32.fill(0); // clean tmp buffer\n        }\n        return this;\n    }\n    destroy() {\n        const { t } = this;\n        // clean precompute table\n        for (const elm of t) {\n            (elm.s0 = 0), (elm.s1 = 0), (elm.s2 = 0), (elm.s3 = 0);\n        }\n    }\n    digestInto(out) {\n        aexists(this);\n        aoutput(out, this);\n        this.finished = true;\n        const { s0, s1, s2, s3 } = this;\n        const o32 = u32(out);\n        o32[0] = s0;\n        o32[1] = s1;\n        o32[2] = s2;\n        o32[3] = s3;\n        return out;\n    }\n    digest() {\n        const res = new Uint8Array(BLOCK_SIZE);\n        this.digestInto(res);\n        this.destroy();\n        return res;\n    }\n}\nclass Polyval extends GHASH {\n    constructor(key, expectedLength) {\n        key = toBytes(key);\n        const ghKey = _toGHASHKey(key.slice());\n        super(ghKey, expectedLength);\n        ghKey.fill(0);\n    }\n    update(data) {\n        data = toBytes(data);\n        aexists(this);\n        const b32 = u32(data);\n        const left = data.length % BLOCK_SIZE;\n        const blocks = Math.floor(data.length / BLOCK_SIZE);\n        for (let i = 0; i < blocks; i++) {\n            this._updateBlock(swapLE(b32[i * 4 + 3]), swapLE(b32[i * 4 + 2]), swapLE(b32[i * 4 + 1]), swapLE(b32[i * 4 + 0]));\n        }\n        if (left) {\n            ZEROS16.set(data.subarray(blocks * BLOCK_SIZE));\n            this._updateBlock(swapLE(ZEROS32[3]), swapLE(ZEROS32[2]), swapLE(ZEROS32[1]), swapLE(ZEROS32[0]));\n            ZEROS32.fill(0); // clean tmp buffer\n        }\n        return this;\n    }\n    digestInto(out) {\n        aexists(this);\n        aoutput(out, this);\n        this.finished = true;\n        // tmp ugly hack\n        const { s0, s1, s2, s3 } = this;\n        const o32 = u32(out);\n        o32[0] = s0;\n        o32[1] = s1;\n        o32[2] = s2;\n        o32[3] = s3;\n        return out.reverse();\n    }\n}\nfunction wrapConstructorWithKey(hashCons) {\n    const hashC = (msg, key) => hashCons(key, msg.length).update(toBytes(msg)).digest();\n    const tmp = hashCons(new Uint8Array(16), 0);\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (key, expectedLength) => hashCons(key, expectedLength);\n    return hashC;\n}\nexport const ghash = wrapConstructorWithKey((key, expectedLength) => new GHASH(key, expectedLength));\nexport const polyval = wrapConstructorWithKey((key, expectedLength) => new Polyval(key, expectedLength));\n//# sourceMappingURL=_polyval.js.map","// prettier-ignore\nimport { wrapCipher, createView, setBigUint64, equalBytes, u32, u8, } from './utils.js';\nimport { ghash, polyval } from './_polyval.js';\nimport { bytes as abytes } from './_assert.js';\n/*\nAES (Advanced Encryption Standard) aka Rijndael block cipher.\n\nData is split into 128-bit blocks. Encrypted in 10/12/14 rounds (128/192/256 bits). In every round:\n1. **S-box**, table substitution\n2. **Shift rows**, cyclic shift left of all rows of data array\n3. **Mix columns**, multiplying every column by fixed polynomial\n4. **Add round key**, round_key xor i-th column of array\n\nResources:\n- FIPS-197 https://csrc.nist.gov/files/pubs/fips/197/final/docs/fips-197.pdf\n- Original proposal: https://csrc.nist.gov/csrc/media/projects/cryptographic-standards-and-guidelines/documents/aes-development/rijndael-ammended.pdf\n*/\nconst BLOCK_SIZE = 16;\nconst BLOCK_SIZE32 = 4;\nconst EMPTY_BLOCK = new Uint8Array(BLOCK_SIZE);\nconst POLY = 0x11b; // 1 + x + x**3 + x**4 + x**8\n// TODO: remove multiplication, binary ops only\nfunction mul2(n) {\n    return (n << 1) ^ (POLY & -(n >> 7));\n}\nfunction mul(a, b) {\n    let res = 0;\n    for (; b > 0; b >>= 1) {\n        // Montgomery ladder\n        res ^= a & -(b & 1); // if (b&1) res ^=a (but const-time).\n        a = mul2(a); // a = 2*a\n    }\n    return res;\n}\n// AES S-box is generated using finite field inversion,\n// an affine transform, and xor of a constant 0x63.\nconst sbox = /* @__PURE__ */ (() => {\n    let t = new Uint8Array(256);\n    for (let i = 0, x = 1; i < 256; i++, x ^= mul2(x))\n        t[i] = x;\n    const box = new Uint8Array(256);\n    box[0] = 0x63; // first elm\n    for (let i = 0; i < 255; i++) {\n        let x = t[255 - i];\n        x |= x << 8;\n        box[t[i]] = (x ^ (x >> 4) ^ (x >> 5) ^ (x >> 6) ^ (x >> 7) ^ 0x63) & 0xff;\n    }\n    return box;\n})();\n// Inverted S-box\nconst invSbox = /* @__PURE__ */ sbox.map((_, j) => sbox.indexOf(j));\n// Rotate u32 by 8\nconst rotr32_8 = (n) => (n << 24) | (n >>> 8);\nconst rotl32_8 = (n) => (n << 8) | (n >>> 24);\n// T-table is optimization suggested in 5.2 of original proposal (missed from FIPS-197). Changes:\n// - LE instead of BE\n// - bigger tables: T0 and T1 are merged into T01 table and T2 & T3 into T23;\n//   so index is u16, instead of u8. This speeds up things, unexpectedly\nfunction genTtable(sbox, fn) {\n    if (sbox.length !== 256)\n        throw new Error('Wrong sbox length');\n    const T0 = new Uint32Array(256).map((_, j) => fn(sbox[j]));\n    const T1 = T0.map(rotl32_8);\n    const T2 = T1.map(rotl32_8);\n    const T3 = T2.map(rotl32_8);\n    const T01 = new Uint32Array(256 * 256);\n    const T23 = new Uint32Array(256 * 256);\n    const sbox2 = new Uint16Array(256 * 256);\n    for (let i = 0; i < 256; i++) {\n        for (let j = 0; j < 256; j++) {\n            const idx = i * 256 + j;\n            T01[idx] = T0[i] ^ T1[j];\n            T23[idx] = T2[i] ^ T3[j];\n            sbox2[idx] = (sbox[i] << 8) | sbox[j];\n        }\n    }\n    return { sbox, sbox2, T0, T1, T2, T3, T01, T23 };\n}\nconst tableEncoding = /* @__PURE__ */ genTtable(sbox, (s) => (mul(s, 3) << 24) | (s << 16) | (s << 8) | mul(s, 2));\nconst tableDecoding = /* @__PURE__ */ genTtable(invSbox, (s) => (mul(s, 11) << 24) | (mul(s, 13) << 16) | (mul(s, 9) << 8) | mul(s, 14));\nconst xPowers = /* @__PURE__ */ (() => {\n    const p = new Uint8Array(16);\n    for (let i = 0, x = 1; i < 16; i++, x = mul2(x))\n        p[i] = x;\n    return p;\n})();\nexport function expandKeyLE(key) {\n    abytes(key);\n    const len = key.length;\n    if (![16, 24, 32].includes(len))\n        throw new Error(`aes: wrong key size: should be 16, 24 or 32, got: ${len}`);\n    const { sbox2 } = tableEncoding;\n    const k32 = u32(key);\n    const Nk = k32.length;\n    const subByte = (n) => applySbox(sbox2, n, n, n, n);\n    const xk = new Uint32Array(len + 28); // expanded key\n    xk.set(k32);\n    // 4.3.1 Key expansion\n    for (let i = Nk; i < xk.length; i++) {\n        let t = xk[i - 1];\n        if (i % Nk === 0)\n            t = subByte(rotr32_8(t)) ^ xPowers[i / Nk - 1];\n        else if (Nk > 6 && i % Nk === 4)\n            t = subByte(t);\n        xk[i] = xk[i - Nk] ^ t;\n    }\n    return xk;\n}\nexport function expandKeyDecLE(key) {\n    const encKey = expandKeyLE(key);\n    const xk = encKey.slice();\n    const Nk = encKey.length;\n    const { sbox2 } = tableEncoding;\n    const { T0, T1, T2, T3 } = tableDecoding;\n    // Inverse key by chunks of 4 (rounds)\n    for (let i = 0; i < Nk; i += 4) {\n        for (let j = 0; j < 4; j++)\n            xk[i + j] = encKey[Nk - i - 4 + j];\n    }\n    encKey.fill(0);\n    // apply InvMixColumn except first & last round\n    for (let i = 4; i < Nk - 4; i++) {\n        const x = xk[i];\n        const w = applySbox(sbox2, x, x, x, x);\n        xk[i] = T0[w & 0xff] ^ T1[(w >>> 8) & 0xff] ^ T2[(w >>> 16) & 0xff] ^ T3[w >>> 24];\n    }\n    return xk;\n}\n// Apply tables\nfunction apply0123(T01, T23, s0, s1, s2, s3) {\n    return (T01[((s0 << 8) & 0xff00) | ((s1 >>> 8) & 0xff)] ^\n        T23[((s2 >>> 8) & 0xff00) | ((s3 >>> 24) & 0xff)]);\n}\nfunction applySbox(sbox2, s0, s1, s2, s3) {\n    return (sbox2[(s0 & 0xff) | (s1 & 0xff00)] |\n        (sbox2[((s2 >>> 16) & 0xff) | ((s3 >>> 16) & 0xff00)] << 16));\n}\nfunction encrypt(xk, s0, s1, s2, s3) {\n    const { sbox2, T01, T23 } = tableEncoding;\n    let k = 0;\n    (s0 ^= xk[k++]), (s1 ^= xk[k++]), (s2 ^= xk[k++]), (s3 ^= xk[k++]);\n    const rounds = xk.length / 4 - 2;\n    for (let i = 0; i < rounds; i++) {\n        const t0 = xk[k++] ^ apply0123(T01, T23, s0, s1, s2, s3);\n        const t1 = xk[k++] ^ apply0123(T01, T23, s1, s2, s3, s0);\n        const t2 = xk[k++] ^ apply0123(T01, T23, s2, s3, s0, s1);\n        const t3 = xk[k++] ^ apply0123(T01, T23, s3, s0, s1, s2);\n        (s0 = t0), (s1 = t1), (s2 = t2), (s3 = t3);\n    }\n    // last round (without mixcolumns, so using SBOX2 table)\n    const t0 = xk[k++] ^ applySbox(sbox2, s0, s1, s2, s3);\n    const t1 = xk[k++] ^ applySbox(sbox2, s1, s2, s3, s0);\n    const t2 = xk[k++] ^ applySbox(sbox2, s2, s3, s0, s1);\n    const t3 = xk[k++] ^ applySbox(sbox2, s3, s0, s1, s2);\n    return { s0: t0, s1: t1, s2: t2, s3: t3 };\n}\nfunction decrypt(xk, s0, s1, s2, s3) {\n    const { sbox2, T01, T23 } = tableDecoding;\n    let k = 0;\n    (s0 ^= xk[k++]), (s1 ^= xk[k++]), (s2 ^= xk[k++]), (s3 ^= xk[k++]);\n    const rounds = xk.length / 4 - 2;\n    for (let i = 0; i < rounds; i++) {\n        const t0 = xk[k++] ^ apply0123(T01, T23, s0, s3, s2, s1);\n        const t1 = xk[k++] ^ apply0123(T01, T23, s1, s0, s3, s2);\n        const t2 = xk[k++] ^ apply0123(T01, T23, s2, s1, s0, s3);\n        const t3 = xk[k++] ^ apply0123(T01, T23, s3, s2, s1, s0);\n        (s0 = t0), (s1 = t1), (s2 = t2), (s3 = t3);\n    }\n    // Last round\n    const t0 = xk[k++] ^ applySbox(sbox2, s0, s3, s2, s1);\n    const t1 = xk[k++] ^ applySbox(sbox2, s1, s0, s3, s2);\n    const t2 = xk[k++] ^ applySbox(sbox2, s2, s1, s0, s3);\n    const t3 = xk[k++] ^ applySbox(sbox2, s3, s2, s1, s0);\n    return { s0: t0, s1: t1, s2: t2, s3: t3 };\n}\nfunction getDst(len, dst) {\n    if (!dst)\n        return new Uint8Array(len);\n    abytes(dst);\n    if (dst.length < len)\n        throw new Error(`aes: wrong destination length, expected at least ${len}, got: ${dst.length}`);\n    return dst;\n}\n// TODO: investigate merging with ctr32\nfunction ctrCounter(xk, nonce, src, dst) {\n    abytes(nonce, BLOCK_SIZE);\n    abytes(src);\n    const srcLen = src.length;\n    dst = getDst(srcLen, dst);\n    const ctr = nonce;\n    const c32 = u32(ctr);\n    // Fill block (empty, ctr=0)\n    let { s0, s1, s2, s3 } = encrypt(xk, c32[0], c32[1], c32[2], c32[3]);\n    const src32 = u32(src);\n    const dst32 = u32(dst);\n    // process blocks\n    for (let i = 0; i + 4 <= src32.length; i += 4) {\n        dst32[i + 0] = src32[i + 0] ^ s0;\n        dst32[i + 1] = src32[i + 1] ^ s1;\n        dst32[i + 2] = src32[i + 2] ^ s2;\n        dst32[i + 3] = src32[i + 3] ^ s3;\n        // Full 128 bit counter with wrap around\n        let carry = 1;\n        for (let i = ctr.length - 1; i >= 0; i--) {\n            carry = (carry + (ctr[i] & 0xff)) | 0;\n            ctr[i] = carry & 0xff;\n            carry >>>= 8;\n        }\n        ({ s0, s1, s2, s3 } = encrypt(xk, c32[0], c32[1], c32[2], c32[3]));\n    }\n    // leftovers (less than block)\n    // It's possible to handle > u32 fast, but is it worth it?\n    const start = BLOCK_SIZE * Math.floor(src32.length / BLOCK_SIZE32);\n    if (start < srcLen) {\n        const b32 = new Uint32Array([s0, s1, s2, s3]);\n        const buf = u8(b32);\n        for (let i = start, pos = 0; i < srcLen; i++, pos++)\n            dst[i] = src[i] ^ buf[pos];\n    }\n    return dst;\n}\n// AES CTR with overflowing 32 bit counter\n// It's possible to do 32le significantly simpler (and probably faster) by using u32.\n// But, we need both, and perf bottleneck is in ghash anyway.\nfunction ctr32(xk, isLE, nonce, src, dst) {\n    abytes(nonce, BLOCK_SIZE);\n    abytes(src);\n    dst = getDst(src.length, dst);\n    const ctr = nonce; // write new value to nonce, so it can be re-used\n    const c32 = u32(ctr);\n    const view = createView(ctr);\n    const src32 = u32(src);\n    const dst32 = u32(dst);\n    const ctrPos = isLE ? 0 : 12;\n    const srcLen = src.length;\n    // Fill block (empty, ctr=0)\n    let ctrNum = view.getUint32(ctrPos, isLE); // read current counter value\n    let { s0, s1, s2, s3 } = encrypt(xk, c32[0], c32[1], c32[2], c32[3]);\n    // process blocks\n    for (let i = 0; i + 4 <= src32.length; i += 4) {\n        dst32[i + 0] = src32[i + 0] ^ s0;\n        dst32[i + 1] = src32[i + 1] ^ s1;\n        dst32[i + 2] = src32[i + 2] ^ s2;\n        dst32[i + 3] = src32[i + 3] ^ s3;\n        ctrNum = (ctrNum + 1) >>> 0; // u32 wrap\n        view.setUint32(ctrPos, ctrNum, isLE);\n        ({ s0, s1, s2, s3 } = encrypt(xk, c32[0], c32[1], c32[2], c32[3]));\n    }\n    // leftovers (less than a block)\n    const start = BLOCK_SIZE * Math.floor(src32.length / BLOCK_SIZE32);\n    if (start < srcLen) {\n        const b32 = new Uint32Array([s0, s1, s2, s3]);\n        const buf = u8(b32);\n        for (let i = start, pos = 0; i < srcLen; i++, pos++)\n            dst[i] = src[i] ^ buf[pos];\n    }\n    return dst;\n}\n/**\n * CTR: counter mode. Creates stream cipher.\n * Requires good IV. Parallelizable. OK, but no MAC.\n */\nexport const ctr = wrapCipher({ blockSize: 16, nonceLength: 16 }, function ctr(key, nonce) {\n    abytes(key);\n    abytes(nonce, BLOCK_SIZE);\n    function processCtr(buf, dst) {\n        const xk = expandKeyLE(key);\n        const n = nonce.slice();\n        const out = ctrCounter(xk, n, buf, dst);\n        xk.fill(0);\n        n.fill(0);\n        return out;\n    }\n    return {\n        encrypt: (plaintext, dst) => processCtr(plaintext, dst),\n        decrypt: (ciphertext, dst) => processCtr(ciphertext, dst),\n    };\n});\nfunction validateBlockDecrypt(data) {\n    abytes(data);\n    if (data.length % BLOCK_SIZE !== 0) {\n        throw new Error(`aes/(cbc-ecb).decrypt ciphertext should consist of blocks with size ${BLOCK_SIZE}`);\n    }\n}\nfunction validateBlockEncrypt(plaintext, pcks5, dst) {\n    let outLen = plaintext.length;\n    const remaining = outLen % BLOCK_SIZE;\n    if (!pcks5 && remaining !== 0)\n        throw new Error('aec/(cbc-ecb): unpadded plaintext with disabled padding');\n    const b = u32(plaintext);\n    if (pcks5) {\n        let left = BLOCK_SIZE - remaining;\n        if (!left)\n            left = BLOCK_SIZE; // if no bytes left, create empty padding block\n        outLen = outLen + left;\n    }\n    const out = getDst(outLen, dst);\n    const o = u32(out);\n    return { b, o, out };\n}\nfunction validatePCKS(data, pcks5) {\n    if (!pcks5)\n        return data;\n    const len = data.length;\n    if (!len)\n        throw new Error(`aes/pcks5: empty ciphertext not allowed`);\n    const lastByte = data[len - 1];\n    if (lastByte <= 0 || lastByte > 16)\n        throw new Error(`aes/pcks5: wrong padding byte: ${lastByte}`);\n    const out = data.subarray(0, -lastByte);\n    for (let i = 0; i < lastByte; i++)\n        if (data[len - i - 1] !== lastByte)\n            throw new Error(`aes/pcks5: wrong padding`);\n    return out;\n}\nfunction padPCKS(left) {\n    const tmp = new Uint8Array(16);\n    const tmp32 = u32(tmp);\n    tmp.set(left);\n    const paddingByte = BLOCK_SIZE - left.length;\n    for (let i = BLOCK_SIZE - paddingByte; i < BLOCK_SIZE; i++)\n        tmp[i] = paddingByte;\n    return tmp32;\n}\n/**\n * ECB: Electronic CodeBook. Simple deterministic replacement.\n * Dangerous: always map x to y. See [AES Penguin](https://words.filippo.io/the-ecb-penguin/).\n */\nexport const ecb = wrapCipher({ blockSize: 16 }, function ecb(key, opts = {}) {\n    abytes(key);\n    const pcks5 = !opts.disablePadding;\n    return {\n        encrypt: (plaintext, dst) => {\n            abytes(plaintext);\n            const { b, o, out: _out } = validateBlockEncrypt(plaintext, pcks5, dst);\n            const xk = expandKeyLE(key);\n            let i = 0;\n            for (; i + 4 <= b.length;) {\n                const { s0, s1, s2, s3 } = encrypt(xk, b[i + 0], b[i + 1], b[i + 2], b[i + 3]);\n                (o[i++] = s0), (o[i++] = s1), (o[i++] = s2), (o[i++] = s3);\n            }\n            if (pcks5) {\n                const tmp32 = padPCKS(plaintext.subarray(i * 4));\n                const { s0, s1, s2, s3 } = encrypt(xk, tmp32[0], tmp32[1], tmp32[2], tmp32[3]);\n                (o[i++] = s0), (o[i++] = s1), (o[i++] = s2), (o[i++] = s3);\n            }\n            xk.fill(0);\n            return _out;\n        },\n        decrypt: (ciphertext, dst) => {\n            validateBlockDecrypt(ciphertext);\n            const xk = expandKeyDecLE(key);\n            const out = getDst(ciphertext.length, dst);\n            const b = u32(ciphertext);\n            const o = u32(out);\n            for (let i = 0; i + 4 <= b.length;) {\n                const { s0, s1, s2, s3 } = decrypt(xk, b[i + 0], b[i + 1], b[i + 2], b[i + 3]);\n                (o[i++] = s0), (o[i++] = s1), (o[i++] = s2), (o[i++] = s3);\n            }\n            xk.fill(0);\n            return validatePCKS(out, pcks5);\n        },\n    };\n});\n/**\n * CBC: Cipher-Block-Chaining. Key is previous round’s block.\n * Fragile: needs proper padding. Unauthenticated: needs MAC.\n */\nexport const cbc = wrapCipher({ blockSize: 16, nonceLength: 16 }, function cbc(key, iv, opts = {}) {\n    abytes(key);\n    abytes(iv, 16);\n    const pcks5 = !opts.disablePadding;\n    return {\n        encrypt: (plaintext, dst) => {\n            const xk = expandKeyLE(key);\n            const { b, o, out: _out } = validateBlockEncrypt(plaintext, pcks5, dst);\n            const n32 = u32(iv);\n            // prettier-ignore\n            let s0 = n32[0], s1 = n32[1], s2 = n32[2], s3 = n32[3];\n            let i = 0;\n            for (; i + 4 <= b.length;) {\n                (s0 ^= b[i + 0]), (s1 ^= b[i + 1]), (s2 ^= b[i + 2]), (s3 ^= b[i + 3]);\n                ({ s0, s1, s2, s3 } = encrypt(xk, s0, s1, s2, s3));\n                (o[i++] = s0), (o[i++] = s1), (o[i++] = s2), (o[i++] = s3);\n            }\n            if (pcks5) {\n                const tmp32 = padPCKS(plaintext.subarray(i * 4));\n                (s0 ^= tmp32[0]), (s1 ^= tmp32[1]), (s2 ^= tmp32[2]), (s3 ^= tmp32[3]);\n                ({ s0, s1, s2, s3 } = encrypt(xk, s0, s1, s2, s3));\n                (o[i++] = s0), (o[i++] = s1), (o[i++] = s2), (o[i++] = s3);\n            }\n            xk.fill(0);\n            return _out;\n        },\n        decrypt: (ciphertext, dst) => {\n            validateBlockDecrypt(ciphertext);\n            const xk = expandKeyDecLE(key);\n            const n32 = u32(iv);\n            const out = getDst(ciphertext.length, dst);\n            const b = u32(ciphertext);\n            const o = u32(out);\n            // prettier-ignore\n            let s0 = n32[0], s1 = n32[1], s2 = n32[2], s3 = n32[3];\n            for (let i = 0; i + 4 <= b.length;) {\n                // prettier-ignore\n                const ps0 = s0, ps1 = s1, ps2 = s2, ps3 = s3;\n                (s0 = b[i + 0]), (s1 = b[i + 1]), (s2 = b[i + 2]), (s3 = b[i + 3]);\n                const { s0: o0, s1: o1, s2: o2, s3: o3 } = decrypt(xk, s0, s1, s2, s3);\n                (o[i++] = o0 ^ ps0), (o[i++] = o1 ^ ps1), (o[i++] = o2 ^ ps2), (o[i++] = o3 ^ ps3);\n            }\n            xk.fill(0);\n            return validatePCKS(out, pcks5);\n        },\n    };\n});\n/**\n * CFB: Cipher Feedback Mode. The input for the block cipher is the previous cipher output.\n * Unauthenticated: needs MAC.\n */\nexport const cfb = wrapCipher({ blockSize: 16, nonceLength: 16 }, function cfb(key, iv) {\n    abytes(key);\n    abytes(iv, 16);\n    function processCfb(src, isEncrypt, dst) {\n        const xk = expandKeyLE(key);\n        const srcLen = src.length;\n        dst = getDst(srcLen, dst);\n        const src32 = u32(src);\n        const dst32 = u32(dst);\n        const next32 = isEncrypt ? dst32 : src32;\n        const n32 = u32(iv);\n        // prettier-ignore\n        let s0 = n32[0], s1 = n32[1], s2 = n32[2], s3 = n32[3];\n        for (let i = 0; i + 4 <= src32.length;) {\n            const { s0: e0, s1: e1, s2: e2, s3: e3 } = encrypt(xk, s0, s1, s2, s3);\n            dst32[i + 0] = src32[i + 0] ^ e0;\n            dst32[i + 1] = src32[i + 1] ^ e1;\n            dst32[i + 2] = src32[i + 2] ^ e2;\n            dst32[i + 3] = src32[i + 3] ^ e3;\n            (s0 = next32[i++]), (s1 = next32[i++]), (s2 = next32[i++]), (s3 = next32[i++]);\n        }\n        // leftovers (less than block)\n        const start = BLOCK_SIZE * Math.floor(src32.length / BLOCK_SIZE32);\n        if (start < srcLen) {\n            ({ s0, s1, s2, s3 } = encrypt(xk, s0, s1, s2, s3));\n            const buf = u8(new Uint32Array([s0, s1, s2, s3]));\n            for (let i = start, pos = 0; i < srcLen; i++, pos++)\n                dst[i] = src[i] ^ buf[pos];\n            buf.fill(0);\n        }\n        xk.fill(0);\n        return dst;\n    }\n    return {\n        encrypt: (plaintext, dst) => processCfb(plaintext, true, dst),\n        decrypt: (ciphertext, dst) => processCfb(ciphertext, false, dst),\n    };\n});\n// TODO: merge with chacha, however gcm has bitLen while chacha has byteLen\nfunction computeTag(fn, isLE, key, data, AAD) {\n    const h = fn.create(key, data.length + (AAD?.length || 0));\n    if (AAD)\n        h.update(AAD);\n    h.update(data);\n    const num = new Uint8Array(16);\n    const view = createView(num);\n    if (AAD)\n        setBigUint64(view, 0, BigInt(AAD.length * 8), isLE);\n    setBigUint64(view, 8, BigInt(data.length * 8), isLE);\n    h.update(num);\n    return h.digest();\n}\n/**\n * GCM: Galois/Counter Mode.\n * Good, modern version of CTR, parallel, with MAC.\n * Be careful: MACs can be forged.\n */\nexport const gcm = wrapCipher({ blockSize: 16, nonceLength: 12, tagLength: 16 }, function gcm(key, nonce, AAD) {\n    abytes(nonce);\n    // Nonce can be pretty much anything (even 1 byte). But smaller nonces less secure.\n    if (nonce.length === 0)\n        throw new Error('aes/gcm: empty nonce');\n    const tagLength = 16;\n    function _computeTag(authKey, tagMask, data) {\n        const tag = computeTag(ghash, false, authKey, data, AAD);\n        for (let i = 0; i < tagMask.length; i++)\n            tag[i] ^= tagMask[i];\n        return tag;\n    }\n    function deriveKeys() {\n        const xk = expandKeyLE(key);\n        const authKey = EMPTY_BLOCK.slice();\n        const counter = EMPTY_BLOCK.slice();\n        ctr32(xk, false, counter, counter, authKey);\n        if (nonce.length === 12) {\n            counter.set(nonce);\n        }\n        else {\n            // Spec (NIST 800-38d) supports variable size nonce.\n            // Not supported for now, but can be useful.\n            const nonceLen = EMPTY_BLOCK.slice();\n            const view = createView(nonceLen);\n            setBigUint64(view, 8, BigInt(nonce.length * 8), false);\n            // ghash(nonce || u64be(0) || u64be(nonceLen*8))\n            ghash.create(authKey).update(nonce).update(nonceLen).digestInto(counter);\n        }\n        const tagMask = ctr32(xk, false, counter, EMPTY_BLOCK);\n        return { xk, authKey, counter, tagMask };\n    }\n    return {\n        encrypt: (plaintext) => {\n            abytes(plaintext);\n            const { xk, authKey, counter, tagMask } = deriveKeys();\n            const out = new Uint8Array(plaintext.length + tagLength);\n            ctr32(xk, false, counter, plaintext, out);\n            const tag = _computeTag(authKey, tagMask, out.subarray(0, out.length - tagLength));\n            out.set(tag, plaintext.length);\n            xk.fill(0);\n            return out;\n        },\n        decrypt: (ciphertext) => {\n            abytes(ciphertext);\n            if (ciphertext.length < tagLength)\n                throw new Error(`aes/gcm: ciphertext less than tagLen (${tagLength})`);\n            const { xk, authKey, counter, tagMask } = deriveKeys();\n            const data = ciphertext.subarray(0, -tagLength);\n            const passedTag = ciphertext.subarray(-tagLength);\n            const tag = _computeTag(authKey, tagMask, data);\n            if (!equalBytes(tag, passedTag))\n                throw new Error('aes/gcm: invalid ghash tag');\n            const out = ctr32(xk, false, counter, data);\n            authKey.fill(0);\n            tagMask.fill(0);\n            xk.fill(0);\n            return out;\n        },\n    };\n});\nconst limit = (name, min, max) => (value) => {\n    if (!Number.isSafeInteger(value) || min > value || value > max)\n        throw new Error(`${name}: invalid value=${value}, must be [${min}..${max}]`);\n};\n/**\n * AES-GCM-SIV: classic AES-GCM with nonce-misuse resistance.\n * Guarantees that, when a nonce is repeated, the only security loss is that identical\n * plaintexts will produce identical ciphertexts.\n * RFC 8452, https://datatracker.ietf.org/doc/html/rfc8452\n */\nexport const siv = wrapCipher({ blockSize: 16, nonceLength: 12, tagLength: 16 }, function siv(key, nonce, AAD) {\n    const tagLength = 16;\n    // From RFC 8452: Section 6\n    const AAD_LIMIT = limit('AAD', 0, 2 ** 36);\n    const PLAIN_LIMIT = limit('plaintext', 0, 2 ** 36);\n    const NONCE_LIMIT = limit('nonce', 12, 12);\n    const CIPHER_LIMIT = limit('ciphertext', 16, 2 ** 36 + 16);\n    abytes(nonce);\n    NONCE_LIMIT(nonce.length);\n    if (AAD) {\n        abytes(AAD);\n        AAD_LIMIT(AAD.length);\n    }\n    function deriveKeys() {\n        const len = key.length;\n        if (len !== 16 && len !== 24 && len !== 32)\n            throw new Error(`key length must be 16, 24 or 32 bytes, got: ${len} bytes`);\n        const xk = expandKeyLE(key);\n        const encKey = new Uint8Array(len);\n        const authKey = new Uint8Array(16);\n        const n32 = u32(nonce);\n        // prettier-ignore\n        let s0 = 0, s1 = n32[0], s2 = n32[1], s3 = n32[2];\n        let counter = 0;\n        for (const derivedKey of [authKey, encKey].map(u32)) {\n            const d32 = u32(derivedKey);\n            for (let i = 0; i < d32.length; i += 2) {\n                // aes(u32le(0) || nonce)[:8] || aes(u32le(1) || nonce)[:8] ...\n                const { s0: o0, s1: o1 } = encrypt(xk, s0, s1, s2, s3);\n                d32[i + 0] = o0;\n                d32[i + 1] = o1;\n                s0 = ++counter; // increment counter inside state\n            }\n        }\n        xk.fill(0);\n        return { authKey, encKey: expandKeyLE(encKey) };\n    }\n    function _computeTag(encKey, authKey, data) {\n        const tag = computeTag(polyval, true, authKey, data, AAD);\n        // Compute the expected tag by XORing S_s and the nonce, clearing the\n        // most significant bit of the last byte and encrypting with the\n        // message-encryption key.\n        for (let i = 0; i < 12; i++)\n            tag[i] ^= nonce[i];\n        tag[15] &= 0x7f; // Clear the highest bit\n        // encrypt tag as block\n        const t32 = u32(tag);\n        // prettier-ignore\n        let s0 = t32[0], s1 = t32[1], s2 = t32[2], s3 = t32[3];\n        ({ s0, s1, s2, s3 } = encrypt(encKey, s0, s1, s2, s3));\n        (t32[0] = s0), (t32[1] = s1), (t32[2] = s2), (t32[3] = s3);\n        return tag;\n    }\n    // actual decrypt/encrypt of message.\n    function processSiv(encKey, tag, input) {\n        let block = tag.slice();\n        block[15] |= 0x80; // Force highest bit\n        return ctr32(encKey, true, block, input);\n    }\n    return {\n        encrypt: (plaintext) => {\n            abytes(plaintext);\n            PLAIN_LIMIT(plaintext.length);\n            const { encKey, authKey } = deriveKeys();\n            const tag = _computeTag(encKey, authKey, plaintext);\n            const out = new Uint8Array(plaintext.length + tagLength);\n            out.set(tag, plaintext.length);\n            out.set(processSiv(encKey, tag, plaintext));\n            encKey.fill(0);\n            authKey.fill(0);\n            return out;\n        },\n        decrypt: (ciphertext) => {\n            abytes(ciphertext);\n            CIPHER_LIMIT(ciphertext.length);\n            const tag = ciphertext.subarray(-tagLength);\n            const { encKey, authKey } = deriveKeys();\n            const plaintext = processSiv(encKey, tag, ciphertext.subarray(0, -tagLength));\n            const expectedTag = _computeTag(encKey, authKey, plaintext);\n            encKey.fill(0);\n            authKey.fill(0);\n            if (!equalBytes(tag, expectedTag))\n                throw new Error('invalid polyval tag');\n            return plaintext;\n        },\n    };\n});\nfunction isBytes32(a) {\n    return (a != null &&\n        typeof a === 'object' &&\n        (a instanceof Uint32Array || a.constructor.name === 'Uint32Array'));\n}\nfunction encryptBlock(xk, block) {\n    abytes(block, 16);\n    if (!isBytes32(xk))\n        throw new Error('_encryptBlock accepts result of expandKeyLE');\n    const b32 = u32(block);\n    let { s0, s1, s2, s3 } = encrypt(xk, b32[0], b32[1], b32[2], b32[3]);\n    (b32[0] = s0), (b32[1] = s1), (b32[2] = s2), (b32[3] = s3);\n    return block;\n}\nfunction decryptBlock(xk, block) {\n    abytes(block, 16);\n    if (!isBytes32(xk))\n        throw new Error('_decryptBlock accepts result of expandKeyLE');\n    const b32 = u32(block);\n    let { s0, s1, s2, s3 } = decrypt(xk, b32[0], b32[1], b32[2], b32[3]);\n    (b32[0] = s0), (b32[1] = s1), (b32[2] = s2), (b32[3] = s3);\n    return block;\n}\n// Highly unsafe private functions for implementing new modes or ciphers based on AES\n// Can change at any time, no API guarantees\nexport const unsafe = {\n    expandKeyLE,\n    expandKeyDecLE,\n    encrypt,\n    decrypt,\n    encryptBlock,\n    decryptBlock,\n    ctrCounter,\n    ctr32,\n};\n//# sourceMappingURL=aes.js.map","import { exists as aexists, bytes as abytes, output as aoutput } from './_assert.js';\nimport { toBytes } from './utils.js';\n// Poly1305 is a fast and parallel secret-key message-authentication code.\n// https://cr.yp.to/mac.html, https://cr.yp.to/mac/poly1305-20050329.pdf\n// https://datatracker.ietf.org/doc/html/rfc8439\n// Based on Public Domain poly1305-donna https://github.com/floodyberry/poly1305-donna\nconst u8to16 = (a, i) => (a[i++] & 0xff) | ((a[i++] & 0xff) << 8);\nclass Poly1305 {\n    constructor(key) {\n        this.blockLen = 16;\n        this.outputLen = 16;\n        this.buffer = new Uint8Array(16);\n        this.r = new Uint16Array(10);\n        this.h = new Uint16Array(10);\n        this.pad = new Uint16Array(8);\n        this.pos = 0;\n        this.finished = false;\n        key = toBytes(key);\n        abytes(key, 32);\n        const t0 = u8to16(key, 0);\n        const t1 = u8to16(key, 2);\n        const t2 = u8to16(key, 4);\n        const t3 = u8to16(key, 6);\n        const t4 = u8to16(key, 8);\n        const t5 = u8to16(key, 10);\n        const t6 = u8to16(key, 12);\n        const t7 = u8to16(key, 14);\n        // https://github.com/floodyberry/poly1305-donna/blob/e6ad6e091d30d7f4ec2d4f978be1fcfcbce72781/poly1305-donna-16.h#L47\n        this.r[0] = t0 & 0x1fff;\n        this.r[1] = ((t0 >>> 13) | (t1 << 3)) & 0x1fff;\n        this.r[2] = ((t1 >>> 10) | (t2 << 6)) & 0x1f03;\n        this.r[3] = ((t2 >>> 7) | (t3 << 9)) & 0x1fff;\n        this.r[4] = ((t3 >>> 4) | (t4 << 12)) & 0x00ff;\n        this.r[5] = (t4 >>> 1) & 0x1ffe;\n        this.r[6] = ((t4 >>> 14) | (t5 << 2)) & 0x1fff;\n        this.r[7] = ((t5 >>> 11) | (t6 << 5)) & 0x1f81;\n        this.r[8] = ((t6 >>> 8) | (t7 << 8)) & 0x1fff;\n        this.r[9] = (t7 >>> 5) & 0x007f;\n        for (let i = 0; i < 8; i++)\n            this.pad[i] = u8to16(key, 16 + 2 * i);\n    }\n    process(data, offset, isLast = false) {\n        const hibit = isLast ? 0 : 1 << 11;\n        const { h, r } = this;\n        const r0 = r[0];\n        const r1 = r[1];\n        const r2 = r[2];\n        const r3 = r[3];\n        const r4 = r[4];\n        const r5 = r[5];\n        const r6 = r[6];\n        const r7 = r[7];\n        const r8 = r[8];\n        const r9 = r[9];\n        const t0 = u8to16(data, offset + 0);\n        const t1 = u8to16(data, offset + 2);\n        const t2 = u8to16(data, offset + 4);\n        const t3 = u8to16(data, offset + 6);\n        const t4 = u8to16(data, offset + 8);\n        const t5 = u8to16(data, offset + 10);\n        const t6 = u8to16(data, offset + 12);\n        const t7 = u8to16(data, offset + 14);\n        let h0 = h[0] + (t0 & 0x1fff);\n        let h1 = h[1] + (((t0 >>> 13) | (t1 << 3)) & 0x1fff);\n        let h2 = h[2] + (((t1 >>> 10) | (t2 << 6)) & 0x1fff);\n        let h3 = h[3] + (((t2 >>> 7) | (t3 << 9)) & 0x1fff);\n        let h4 = h[4] + (((t3 >>> 4) | (t4 << 12)) & 0x1fff);\n        let h5 = h[5] + ((t4 >>> 1) & 0x1fff);\n        let h6 = h[6] + (((t4 >>> 14) | (t5 << 2)) & 0x1fff);\n        let h7 = h[7] + (((t5 >>> 11) | (t6 << 5)) & 0x1fff);\n        let h8 = h[8] + (((t6 >>> 8) | (t7 << 8)) & 0x1fff);\n        let h9 = h[9] + ((t7 >>> 5) | hibit);\n        let c = 0;\n        let d0 = c + h0 * r0 + h1 * (5 * r9) + h2 * (5 * r8) + h3 * (5 * r7) + h4 * (5 * r6);\n        c = d0 >>> 13;\n        d0 &= 0x1fff;\n        d0 += h5 * (5 * r5) + h6 * (5 * r4) + h7 * (5 * r3) + h8 * (5 * r2) + h9 * (5 * r1);\n        c += d0 >>> 13;\n        d0 &= 0x1fff;\n        let d1 = c + h0 * r1 + h1 * r0 + h2 * (5 * r9) + h3 * (5 * r8) + h4 * (5 * r7);\n        c = d1 >>> 13;\n        d1 &= 0x1fff;\n        d1 += h5 * (5 * r6) + h6 * (5 * r5) + h7 * (5 * r4) + h8 * (5 * r3) + h9 * (5 * r2);\n        c += d1 >>> 13;\n        d1 &= 0x1fff;\n        let d2 = c + h0 * r2 + h1 * r1 + h2 * r0 + h3 * (5 * r9) + h4 * (5 * r8);\n        c = d2 >>> 13;\n        d2 &= 0x1fff;\n        d2 += h5 * (5 * r7) + h6 * (5 * r6) + h7 * (5 * r5) + h8 * (5 * r4) + h9 * (5 * r3);\n        c += d2 >>> 13;\n        d2 &= 0x1fff;\n        let d3 = c + h0 * r3 + h1 * r2 + h2 * r1 + h3 * r0 + h4 * (5 * r9);\n        c = d3 >>> 13;\n        d3 &= 0x1fff;\n        d3 += h5 * (5 * r8) + h6 * (5 * r7) + h7 * (5 * r6) + h8 * (5 * r5) + h9 * (5 * r4);\n        c += d3 >>> 13;\n        d3 &= 0x1fff;\n        let d4 = c + h0 * r4 + h1 * r3 + h2 * r2 + h3 * r1 + h4 * r0;\n        c = d4 >>> 13;\n        d4 &= 0x1fff;\n        d4 += h5 * (5 * r9) + h6 * (5 * r8) + h7 * (5 * r7) + h8 * (5 * r6) + h9 * (5 * r5);\n        c += d4 >>> 13;\n        d4 &= 0x1fff;\n        let d5 = c + h0 * r5 + h1 * r4 + h2 * r3 + h3 * r2 + h4 * r1;\n        c = d5 >>> 13;\n        d5 &= 0x1fff;\n        d5 += h5 * r0 + h6 * (5 * r9) + h7 * (5 * r8) + h8 * (5 * r7) + h9 * (5 * r6);\n        c += d5 >>> 13;\n        d5 &= 0x1fff;\n        let d6 = c + h0 * r6 + h1 * r5 + h2 * r4 + h3 * r3 + h4 * r2;\n        c = d6 >>> 13;\n        d6 &= 0x1fff;\n        d6 += h5 * r1 + h6 * r0 + h7 * (5 * r9) + h8 * (5 * r8) + h9 * (5 * r7);\n        c += d6 >>> 13;\n        d6 &= 0x1fff;\n        let d7 = c + h0 * r7 + h1 * r6 + h2 * r5 + h3 * r4 + h4 * r3;\n        c = d7 >>> 13;\n        d7 &= 0x1fff;\n        d7 += h5 * r2 + h6 * r1 + h7 * r0 + h8 * (5 * r9) + h9 * (5 * r8);\n        c += d7 >>> 13;\n        d7 &= 0x1fff;\n        let d8 = c + h0 * r8 + h1 * r7 + h2 * r6 + h3 * r5 + h4 * r4;\n        c = d8 >>> 13;\n        d8 &= 0x1fff;\n        d8 += h5 * r3 + h6 * r2 + h7 * r1 + h8 * r0 + h9 * (5 * r9);\n        c += d8 >>> 13;\n        d8 &= 0x1fff;\n        let d9 = c + h0 * r9 + h1 * r8 + h2 * r7 + h3 * r6 + h4 * r5;\n        c = d9 >>> 13;\n        d9 &= 0x1fff;\n        d9 += h5 * r4 + h6 * r3 + h7 * r2 + h8 * r1 + h9 * r0;\n        c += d9 >>> 13;\n        d9 &= 0x1fff;\n        c = ((c << 2) + c) | 0;\n        c = (c + d0) | 0;\n        d0 = c & 0x1fff;\n        c = c >>> 13;\n        d1 += c;\n        h[0] = d0;\n        h[1] = d1;\n        h[2] = d2;\n        h[3] = d3;\n        h[4] = d4;\n        h[5] = d5;\n        h[6] = d6;\n        h[7] = d7;\n        h[8] = d8;\n        h[9] = d9;\n    }\n    finalize() {\n        const { h, pad } = this;\n        const g = new Uint16Array(10);\n        let c = h[1] >>> 13;\n        h[1] &= 0x1fff;\n        for (let i = 2; i < 10; i++) {\n            h[i] += c;\n            c = h[i] >>> 13;\n            h[i] &= 0x1fff;\n        }\n        h[0] += c * 5;\n        c = h[0] >>> 13;\n        h[0] &= 0x1fff;\n        h[1] += c;\n        c = h[1] >>> 13;\n        h[1] &= 0x1fff;\n        h[2] += c;\n        g[0] = h[0] + 5;\n        c = g[0] >>> 13;\n        g[0] &= 0x1fff;\n        for (let i = 1; i < 10; i++) {\n            g[i] = h[i] + c;\n            c = g[i] >>> 13;\n            g[i] &= 0x1fff;\n        }\n        g[9] -= 1 << 13;\n        let mask = (c ^ 1) - 1;\n        for (let i = 0; i < 10; i++)\n            g[i] &= mask;\n        mask = ~mask;\n        for (let i = 0; i < 10; i++)\n            h[i] = (h[i] & mask) | g[i];\n        h[0] = (h[0] | (h[1] << 13)) & 0xffff;\n        h[1] = ((h[1] >>> 3) | (h[2] << 10)) & 0xffff;\n        h[2] = ((h[2] >>> 6) | (h[3] << 7)) & 0xffff;\n        h[3] = ((h[3] >>> 9) | (h[4] << 4)) & 0xffff;\n        h[4] = ((h[4] >>> 12) | (h[5] << 1) | (h[6] << 14)) & 0xffff;\n        h[5] = ((h[6] >>> 2) | (h[7] << 11)) & 0xffff;\n        h[6] = ((h[7] >>> 5) | (h[8] << 8)) & 0xffff;\n        h[7] = ((h[8] >>> 8) | (h[9] << 5)) & 0xffff;\n        let f = h[0] + pad[0];\n        h[0] = f & 0xffff;\n        for (let i = 1; i < 8; i++) {\n            f = (((h[i] + pad[i]) | 0) + (f >>> 16)) | 0;\n            h[i] = f & 0xffff;\n        }\n    }\n    update(data) {\n        aexists(this);\n        const { buffer, blockLen } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input\n            if (take === blockLen) {\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(data, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(buffer, 0, false);\n                this.pos = 0;\n            }\n        }\n        return this;\n    }\n    destroy() {\n        this.h.fill(0);\n        this.r.fill(0);\n        this.buffer.fill(0);\n        this.pad.fill(0);\n    }\n    digestInto(out) {\n        aexists(this);\n        aoutput(out, this);\n        this.finished = true;\n        const { buffer, h } = this;\n        let { pos } = this;\n        if (pos) {\n            buffer[pos++] = 1;\n            // buffer.subarray(pos).fill(0);\n            for (; pos < 16; pos++)\n                buffer[pos] = 0;\n            this.process(buffer, 0, true);\n        }\n        this.finalize();\n        let opos = 0;\n        for (let i = 0; i < 8; i++) {\n            out[opos++] = h[i] >>> 0;\n            out[opos++] = h[i] >>> 8;\n        }\n        return out;\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n}\nexport function wrapConstructorWithKey(hashCons) {\n    const hashC = (msg, key) => hashCons(key).update(toBytes(msg)).digest();\n    const tmp = hashCons(new Uint8Array(32));\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (key) => hashCons(key);\n    return hashC;\n}\nexport const poly1305 = wrapConstructorWithKey((key) => new Poly1305(key));\n//# sourceMappingURL=_poly1305.js.map","// Basic utils for ARX (add-rotate-xor) salsa and chacha ciphers.\nimport { number as anumber, bytes as abytes, bool as abool } from './_assert.js';\nimport { checkOpts, u32 } from './utils.js';\n/*\nRFC8439 requires multi-step cipher stream, where\nauthKey starts with counter: 0, actual msg with counter: 1.\n\nFor this, we need a way to re-use nonce / counter:\n\n    const counter = new Uint8Array(4);\n    chacha(..., counter, ...); // counter is now 1\n    chacha(..., counter, ...); // counter is now 2\n\nThis is complicated:\n\n- 32-bit counters are enough, no need for 64-bit: max ArrayBuffer size in JS is 4GB\n- Original papers don't allow mutating counters\n- Counter overflow is undefined [^1]\n- Idea A: allow providing (nonce | counter) instead of just nonce, re-use it\n- Caveat: Cannot be re-used through all cases:\n- * chacha has (counter | nonce)\n- * xchacha has (nonce16 | counter | nonce16)\n- Idea B: separate nonce / counter and provide separate API for counter re-use\n- Caveat: there are different counter sizes depending on an algorithm.\n- salsa & chacha also differ in structures of key & sigma:\n  salsa20:      s[0] | k(4) | s[1] | nonce(2) | ctr(2) | s[2] | k(4) | s[3]\n  chacha:       s(4) | k(8) | ctr(1) | nonce(3)\n  chacha20orig: s(4) | k(8) | ctr(2) | nonce(2)\n- Idea C: helper method such as `setSalsaState(key, nonce, sigma, data)`\n- Caveat: we can't re-use counter array\n\nxchacha [^2] uses the subkey and remaining 8 byte nonce with ChaCha20 as normal\n(prefixed by 4 NUL bytes, since [RFC8439] specifies a 12-byte nonce).\n\n[^1]: https://mailarchive.ietf.org/arch/msg/cfrg/gsOnTJzcbgG6OqD8Sc0GO5aR_tU/\n[^2]: https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-xchacha#appendix-A.2\n*/\n// We can't make top-level var depend on utils.utf8ToBytes\n// because it's not present in all envs. Creating a similar fn here\nconst _utf8ToBytes = (str) => Uint8Array.from(str.split('').map((c) => c.charCodeAt(0)));\nconst sigma16 = _utf8ToBytes('expand 16-byte k');\nconst sigma32 = _utf8ToBytes('expand 32-byte k');\nconst sigma16_32 = u32(sigma16);\nconst sigma32_32 = u32(sigma32);\nexport const sigma = sigma32_32.slice();\nexport function rotl(a, b) {\n    return (a << b) | (a >>> (32 - b));\n}\n// Is byte array aligned to 4 byte offset (u32)?\nfunction isAligned32(b) {\n    return b.byteOffset % 4 === 0;\n}\n// Salsa and Chacha block length is always 512-bit\nconst BLOCK_LEN = 64;\nconst BLOCK_LEN32 = 16;\n// new Uint32Array([2**32])   // => Uint32Array(1) [ 0 ]\n// new Uint32Array([2**32-1]) // => Uint32Array(1) [ 4294967295 ]\nconst MAX_COUNTER = 2 ** 32 - 1;\nconst U32_EMPTY = new Uint32Array();\nfunction runCipher(core, sigma, key, nonce, data, output, counter, rounds) {\n    const len = data.length;\n    const block = new Uint8Array(BLOCK_LEN);\n    const b32 = u32(block);\n    // Make sure that buffers aligned to 4 bytes\n    const isAligned = isAligned32(data) && isAligned32(output);\n    const d32 = isAligned ? u32(data) : U32_EMPTY;\n    const o32 = isAligned ? u32(output) : U32_EMPTY;\n    for (let pos = 0; pos < len; counter++) {\n        core(sigma, key, nonce, b32, counter, rounds);\n        if (counter >= MAX_COUNTER)\n            throw new Error('arx: counter overflow');\n        const take = Math.min(BLOCK_LEN, len - pos);\n        // aligned to 4 bytes\n        if (isAligned && take === BLOCK_LEN) {\n            const pos32 = pos / 4;\n            if (pos % 4 !== 0)\n                throw new Error('arx: invalid block position');\n            for (let j = 0, posj; j < BLOCK_LEN32; j++) {\n                posj = pos32 + j;\n                o32[posj] = d32[posj] ^ b32[j];\n            }\n            pos += BLOCK_LEN;\n            continue;\n        }\n        for (let j = 0, posj; j < take; j++) {\n            posj = pos + j;\n            output[posj] = data[posj] ^ block[j];\n        }\n        pos += take;\n    }\n}\nexport function createCipher(core, opts) {\n    const { allowShortKeys, extendNonceFn, counterLength, counterRight, rounds } = checkOpts({ allowShortKeys: false, counterLength: 8, counterRight: false, rounds: 20 }, opts);\n    if (typeof core !== 'function')\n        throw new Error('core must be a function');\n    anumber(counterLength);\n    anumber(rounds);\n    abool(counterRight);\n    abool(allowShortKeys);\n    return (key, nonce, data, output, counter = 0) => {\n        abytes(key);\n        abytes(nonce);\n        abytes(data);\n        const len = data.length;\n        if (!output)\n            output = new Uint8Array(len);\n        abytes(output);\n        anumber(counter);\n        if (counter < 0 || counter >= MAX_COUNTER)\n            throw new Error('arx: counter overflow');\n        if (output.length < len)\n            throw new Error(`arx: output (${output.length}) is shorter than data (${len})`);\n        const toClean = [];\n        // Key & sigma\n        // key=16 -> sigma16, k=key|key\n        // key=32 -> sigma32, k=key\n        let l = key.length, k, sigma;\n        if (l === 32) {\n            k = key.slice();\n            toClean.push(k);\n            sigma = sigma32_32;\n        }\n        else if (l === 16 && allowShortKeys) {\n            k = new Uint8Array(32);\n            k.set(key);\n            k.set(key, 16);\n            sigma = sigma16_32;\n            toClean.push(k);\n        }\n        else {\n            throw new Error(`arx: invalid 32-byte key, got length=${l}`);\n        }\n        // Nonce\n        // salsa20:      8   (8-byte counter)\n        // chacha20orig: 8   (8-byte counter)\n        // chacha20:     12  (4-byte counter)\n        // xsalsa20:     24  (16 -> hsalsa,  8 -> old nonce)\n        // xchacha20:    24  (16 -> hchacha, 8 -> old nonce)\n        // Align nonce to 4 bytes\n        if (!isAligned32(nonce)) {\n            nonce = nonce.slice();\n            toClean.push(nonce);\n        }\n        const k32 = u32(k);\n        // hsalsa & hchacha: handle extended nonce\n        if (extendNonceFn) {\n            if (nonce.length !== 24)\n                throw new Error(`arx: extended nonce must be 24 bytes`);\n            extendNonceFn(sigma, k32, u32(nonce.subarray(0, 16)), k32);\n            nonce = nonce.subarray(16);\n        }\n        // Handle nonce counter\n        const nonceNcLen = 16 - counterLength;\n        if (nonceNcLen !== nonce.length)\n            throw new Error(`arx: nonce must be ${nonceNcLen} or 16 bytes`);\n        // Pad counter when nonce is 64 bit\n        if (nonceNcLen !== 12) {\n            const nc = new Uint8Array(12);\n            nc.set(nonce, counterRight ? 0 : 12 - nonce.length);\n            nonce = nc;\n            toClean.push(nonce);\n        }\n        const n32 = u32(nonce);\n        runCipher(core, sigma, k32, n32, data, output, counter, rounds);\n        while (toClean.length > 0)\n            toClean.pop().fill(0);\n        return output;\n    };\n}\n//# sourceMappingURL=_arx.js.map","// prettier-ignore\nimport { wrapCipher, createView, equalBytes, setBigUint64, } from './utils.js';\nimport { poly1305 } from './_poly1305.js';\nimport { createCipher, rotl } from './_arx.js';\nimport { bytes as abytes } from './_assert.js';\n// ChaCha20 stream cipher was released in 2008. ChaCha aims to increase\n// the diffusion per round, but had slightly less cryptanalysis.\n// https://cr.yp.to/chacha.html, http://cr.yp.to/chacha/chacha-20080128.pdf\n/**\n * ChaCha core function.\n */\n// prettier-ignore\nfunction chachaCore(s, k, n, out, cnt, rounds = 20) {\n    let y00 = s[0], y01 = s[1], y02 = s[2], y03 = s[3], // \"expa\"   \"nd 3\"  \"2-by\"  \"te k\"\n    y04 = k[0], y05 = k[1], y06 = k[2], y07 = k[3], // Key      Key     Key     Key\n    y08 = k[4], y09 = k[5], y10 = k[6], y11 = k[7], // Key      Key     Key     Key\n    y12 = cnt, y13 = n[0], y14 = n[1], y15 = n[2]; // Counter  Counter\tNonce   Nonce\n    // Save state to temporary variables\n    let x00 = y00, x01 = y01, x02 = y02, x03 = y03, x04 = y04, x05 = y05, x06 = y06, x07 = y07, x08 = y08, x09 = y09, x10 = y10, x11 = y11, x12 = y12, x13 = y13, x14 = y14, x15 = y15;\n    for (let r = 0; r < rounds; r += 2) {\n        x00 = (x00 + x04) | 0;\n        x12 = rotl(x12 ^ x00, 16);\n        x08 = (x08 + x12) | 0;\n        x04 = rotl(x04 ^ x08, 12);\n        x00 = (x00 + x04) | 0;\n        x12 = rotl(x12 ^ x00, 8);\n        x08 = (x08 + x12) | 0;\n        x04 = rotl(x04 ^ x08, 7);\n        x01 = (x01 + x05) | 0;\n        x13 = rotl(x13 ^ x01, 16);\n        x09 = (x09 + x13) | 0;\n        x05 = rotl(x05 ^ x09, 12);\n        x01 = (x01 + x05) | 0;\n        x13 = rotl(x13 ^ x01, 8);\n        x09 = (x09 + x13) | 0;\n        x05 = rotl(x05 ^ x09, 7);\n        x02 = (x02 + x06) | 0;\n        x14 = rotl(x14 ^ x02, 16);\n        x10 = (x10 + x14) | 0;\n        x06 = rotl(x06 ^ x10, 12);\n        x02 = (x02 + x06) | 0;\n        x14 = rotl(x14 ^ x02, 8);\n        x10 = (x10 + x14) | 0;\n        x06 = rotl(x06 ^ x10, 7);\n        x03 = (x03 + x07) | 0;\n        x15 = rotl(x15 ^ x03, 16);\n        x11 = (x11 + x15) | 0;\n        x07 = rotl(x07 ^ x11, 12);\n        x03 = (x03 + x07) | 0;\n        x15 = rotl(x15 ^ x03, 8);\n        x11 = (x11 + x15) | 0;\n        x07 = rotl(x07 ^ x11, 7);\n        x00 = (x00 + x05) | 0;\n        x15 = rotl(x15 ^ x00, 16);\n        x10 = (x10 + x15) | 0;\n        x05 = rotl(x05 ^ x10, 12);\n        x00 = (x00 + x05) | 0;\n        x15 = rotl(x15 ^ x00, 8);\n        x10 = (x10 + x15) | 0;\n        x05 = rotl(x05 ^ x10, 7);\n        x01 = (x01 + x06) | 0;\n        x12 = rotl(x12 ^ x01, 16);\n        x11 = (x11 + x12) | 0;\n        x06 = rotl(x06 ^ x11, 12);\n        x01 = (x01 + x06) | 0;\n        x12 = rotl(x12 ^ x01, 8);\n        x11 = (x11 + x12) | 0;\n        x06 = rotl(x06 ^ x11, 7);\n        x02 = (x02 + x07) | 0;\n        x13 = rotl(x13 ^ x02, 16);\n        x08 = (x08 + x13) | 0;\n        x07 = rotl(x07 ^ x08, 12);\n        x02 = (x02 + x07) | 0;\n        x13 = rotl(x13 ^ x02, 8);\n        x08 = (x08 + x13) | 0;\n        x07 = rotl(x07 ^ x08, 7);\n        x03 = (x03 + x04) | 0;\n        x14 = rotl(x14 ^ x03, 16);\n        x09 = (x09 + x14) | 0;\n        x04 = rotl(x04 ^ x09, 12);\n        x03 = (x03 + x04) | 0;\n        x14 = rotl(x14 ^ x03, 8);\n        x09 = (x09 + x14) | 0;\n        x04 = rotl(x04 ^ x09, 7);\n    }\n    // Write output\n    let oi = 0;\n    out[oi++] = (y00 + x00) | 0;\n    out[oi++] = (y01 + x01) | 0;\n    out[oi++] = (y02 + x02) | 0;\n    out[oi++] = (y03 + x03) | 0;\n    out[oi++] = (y04 + x04) | 0;\n    out[oi++] = (y05 + x05) | 0;\n    out[oi++] = (y06 + x06) | 0;\n    out[oi++] = (y07 + x07) | 0;\n    out[oi++] = (y08 + x08) | 0;\n    out[oi++] = (y09 + x09) | 0;\n    out[oi++] = (y10 + x10) | 0;\n    out[oi++] = (y11 + x11) | 0;\n    out[oi++] = (y12 + x12) | 0;\n    out[oi++] = (y13 + x13) | 0;\n    out[oi++] = (y14 + x14) | 0;\n    out[oi++] = (y15 + x15) | 0;\n}\n/**\n * hchacha helper method, used primarily in xchacha, to hash\n * key and nonce into key' and nonce'.\n * Same as chachaCore, but there doesn't seem to be a way to move the block\n * out without 25% performance hit.\n */\n// prettier-ignore\nexport function hchacha(s, k, i, o32) {\n    let x00 = s[0], x01 = s[1], x02 = s[2], x03 = s[3], x04 = k[0], x05 = k[1], x06 = k[2], x07 = k[3], x08 = k[4], x09 = k[5], x10 = k[6], x11 = k[7], x12 = i[0], x13 = i[1], x14 = i[2], x15 = i[3];\n    for (let r = 0; r < 20; r += 2) {\n        x00 = (x00 + x04) | 0;\n        x12 = rotl(x12 ^ x00, 16);\n        x08 = (x08 + x12) | 0;\n        x04 = rotl(x04 ^ x08, 12);\n        x00 = (x00 + x04) | 0;\n        x12 = rotl(x12 ^ x00, 8);\n        x08 = (x08 + x12) | 0;\n        x04 = rotl(x04 ^ x08, 7);\n        x01 = (x01 + x05) | 0;\n        x13 = rotl(x13 ^ x01, 16);\n        x09 = (x09 + x13) | 0;\n        x05 = rotl(x05 ^ x09, 12);\n        x01 = (x01 + x05) | 0;\n        x13 = rotl(x13 ^ x01, 8);\n        x09 = (x09 + x13) | 0;\n        x05 = rotl(x05 ^ x09, 7);\n        x02 = (x02 + x06) | 0;\n        x14 = rotl(x14 ^ x02, 16);\n        x10 = (x10 + x14) | 0;\n        x06 = rotl(x06 ^ x10, 12);\n        x02 = (x02 + x06) | 0;\n        x14 = rotl(x14 ^ x02, 8);\n        x10 = (x10 + x14) | 0;\n        x06 = rotl(x06 ^ x10, 7);\n        x03 = (x03 + x07) | 0;\n        x15 = rotl(x15 ^ x03, 16);\n        x11 = (x11 + x15) | 0;\n        x07 = rotl(x07 ^ x11, 12);\n        x03 = (x03 + x07) | 0;\n        x15 = rotl(x15 ^ x03, 8);\n        x11 = (x11 + x15) | 0;\n        x07 = rotl(x07 ^ x11, 7);\n        x00 = (x00 + x05) | 0;\n        x15 = rotl(x15 ^ x00, 16);\n        x10 = (x10 + x15) | 0;\n        x05 = rotl(x05 ^ x10, 12);\n        x00 = (x00 + x05) | 0;\n        x15 = rotl(x15 ^ x00, 8);\n        x10 = (x10 + x15) | 0;\n        x05 = rotl(x05 ^ x10, 7);\n        x01 = (x01 + x06) | 0;\n        x12 = rotl(x12 ^ x01, 16);\n        x11 = (x11 + x12) | 0;\n        x06 = rotl(x06 ^ x11, 12);\n        x01 = (x01 + x06) | 0;\n        x12 = rotl(x12 ^ x01, 8);\n        x11 = (x11 + x12) | 0;\n        x06 = rotl(x06 ^ x11, 7);\n        x02 = (x02 + x07) | 0;\n        x13 = rotl(x13 ^ x02, 16);\n        x08 = (x08 + x13) | 0;\n        x07 = rotl(x07 ^ x08, 12);\n        x02 = (x02 + x07) | 0;\n        x13 = rotl(x13 ^ x02, 8);\n        x08 = (x08 + x13) | 0;\n        x07 = rotl(x07 ^ x08, 7);\n        x03 = (x03 + x04) | 0;\n        x14 = rotl(x14 ^ x03, 16);\n        x09 = (x09 + x14) | 0;\n        x04 = rotl(x04 ^ x09, 12);\n        x03 = (x03 + x04) | 0;\n        x14 = rotl(x14 ^ x03, 8);\n        x09 = (x09 + x14) | 0;\n        x04 = rotl(x04 ^ x09, 7);\n    }\n    let oi = 0;\n    o32[oi++] = x00;\n    o32[oi++] = x01;\n    o32[oi++] = x02;\n    o32[oi++] = x03;\n    o32[oi++] = x12;\n    o32[oi++] = x13;\n    o32[oi++] = x14;\n    o32[oi++] = x15;\n}\n/**\n * Original, non-RFC chacha20 from DJB. 8-byte nonce, 8-byte counter.\n */\nexport const chacha20orig = /* @__PURE__ */ createCipher(chachaCore, {\n    counterRight: false,\n    counterLength: 8,\n    allowShortKeys: true,\n});\n/**\n * ChaCha stream cipher. Conforms to RFC 8439 (IETF, TLS). 12-byte nonce, 4-byte counter.\n * With 12-byte nonce, it's not safe to use fill it with random (CSPRNG), due to collision chance.\n */\nexport const chacha20 = /* @__PURE__ */ createCipher(chachaCore, {\n    counterRight: false,\n    counterLength: 4,\n    allowShortKeys: false,\n});\n/**\n * XChaCha eXtended-nonce ChaCha. 24-byte nonce.\n * With 24-byte nonce, it's safe to use fill it with random (CSPRNG).\n * https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-xchacha\n */\nexport const xchacha20 = /* @__PURE__ */ createCipher(chachaCore, {\n    counterRight: false,\n    counterLength: 8,\n    extendNonceFn: hchacha,\n    allowShortKeys: false,\n});\n/**\n * Reduced 8-round chacha, described in original paper.\n */\nexport const chacha8 = /* @__PURE__ */ createCipher(chachaCore, {\n    counterRight: false,\n    counterLength: 4,\n    rounds: 8,\n});\n/**\n * Reduced 12-round chacha, described in original paper.\n */\nexport const chacha12 = /* @__PURE__ */ createCipher(chachaCore, {\n    counterRight: false,\n    counterLength: 4,\n    rounds: 12,\n});\nconst ZEROS16 = /* @__PURE__ */ new Uint8Array(16);\n// Pad to digest size with zeros\nconst updatePadded = (h, msg) => {\n    h.update(msg);\n    const left = msg.length % 16;\n    if (left)\n        h.update(ZEROS16.subarray(left));\n};\nconst ZEROS32 = /* @__PURE__ */ new Uint8Array(32);\nfunction computeTag(fn, key, nonce, data, AAD) {\n    const authKey = fn(key, nonce, ZEROS32);\n    const h = poly1305.create(authKey);\n    if (AAD)\n        updatePadded(h, AAD);\n    updatePadded(h, data);\n    const num = new Uint8Array(16);\n    const view = createView(num);\n    setBigUint64(view, 0, BigInt(AAD ? AAD.length : 0), true);\n    setBigUint64(view, 8, BigInt(data.length), true);\n    h.update(num);\n    const res = h.digest();\n    authKey.fill(0);\n    return res;\n}\n/**\n * AEAD algorithm from RFC 8439.\n * Salsa20 and chacha (RFC 8439) use poly1305 differently.\n * We could have composed them similar to:\n * https://github.com/paulmillr/scure-base/blob/b266c73dde977b1dd7ef40ef7a23cc15aab526b3/index.ts#L250\n * But it's hard because of authKey:\n * In salsa20, authKey changes position in salsa stream.\n * In chacha, authKey can't be computed inside computeTag, it modifies the counter.\n */\nexport const _poly1305_aead = (xorStream) => (key, nonce, AAD) => {\n    const tagLength = 16;\n    abytes(key, 32);\n    abytes(nonce);\n    return {\n        encrypt: (plaintext, output) => {\n            const plength = plaintext.length;\n            const clength = plength + tagLength;\n            if (output) {\n                abytes(output, clength);\n            }\n            else {\n                output = new Uint8Array(clength);\n            }\n            xorStream(key, nonce, plaintext, output, 1);\n            const tag = computeTag(xorStream, key, nonce, output.subarray(0, -tagLength), AAD);\n            output.set(tag, plength); // append tag\n            return output;\n        },\n        decrypt: (ciphertext, output) => {\n            const clength = ciphertext.length;\n            const plength = clength - tagLength;\n            if (clength < tagLength)\n                throw new Error(`encrypted data must be at least ${tagLength} bytes`);\n            if (output) {\n                abytes(output, plength);\n            }\n            else {\n                output = new Uint8Array(plength);\n            }\n            const data = ciphertext.subarray(0, -tagLength);\n            const passedTag = ciphertext.subarray(-tagLength);\n            const tag = computeTag(xorStream, key, nonce, data, AAD);\n            if (!equalBytes(passedTag, tag))\n                throw new Error('invalid tag');\n            xorStream(key, nonce, data, output, 1);\n            return output;\n        },\n    };\n};\n/**\n * ChaCha20-Poly1305 from RFC 8439.\n * With 12-byte nonce, it's not safe to use fill it with random (CSPRNG), due to collision chance.\n */\nexport const chacha20poly1305 = /* @__PURE__ */ wrapCipher({ blockSize: 64, nonceLength: 12, tagLength: 16 }, _poly1305_aead(chacha20));\n/**\n * XChaCha20-Poly1305 extended-nonce chacha.\n * https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-xchacha\n * With 24-byte nonce, it's safe to use fill it with random (CSPRNG).\n */\nexport const xchacha20poly1305 = /* @__PURE__ */ wrapCipher({ blockSize: 64, nonceLength: 24, tagLength: 16 }, _poly1305_aead(xchacha20));\n//# sourceMappingURL=chacha.js.map","import assert from './_assert.js';\nimport { Hash, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nexport class HMAC extends Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        assert.hash(hash);\n        const key = toBytes(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new Error('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        assert.exists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        assert.exists(this);\n        assert.bytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nhmac.create = (hash, key) => new HMAC(hash, key);\n//# sourceMappingURL=hmac.js.map","import assert from './_assert.js';\nimport { toBytes } from './utils.js';\nimport { hmac } from './hmac.js';\n// HKDF (RFC 5869)\n// https://soatok.blog/2021/11/17/understanding-hkdf/\n/**\n * HKDF-Extract(IKM, salt) -> PRK\n * Arguments position differs from spec (IKM is first one, since it is not optional)\n * @param hash\n * @param ikm\n * @param salt\n * @returns\n */\nexport function extract(hash, ikm, salt) {\n    assert.hash(hash);\n    // NOTE: some libraries treat zero-length array as 'not provided';\n    // we don't, since we have undefined as 'not provided'\n    // https://github.com/RustCrypto/KDFs/issues/15\n    if (salt === undefined)\n        salt = new Uint8Array(hash.outputLen); // if not provided, it is set to a string of HashLen zeros\n    return hmac(hash, toBytes(salt), toBytes(ikm));\n}\n// HKDF-Expand(PRK, info, L) -> OKM\nconst HKDF_COUNTER = new Uint8Array([0]);\nconst EMPTY_BUFFER = new Uint8Array();\n/**\n * HKDF-expand from the spec.\n * @param prk - a pseudorandom key of at least HashLen octets (usually, the output from the extract step)\n * @param info - optional context and application specific information (can be a zero-length string)\n * @param length - length of output keying material in octets\n */\nexport function expand(hash, prk, info, length = 32) {\n    assert.hash(hash);\n    assert.number(length);\n    if (length > 255 * hash.outputLen)\n        throw new Error('Length should be <= 255*HashLen');\n    const blocks = Math.ceil(length / hash.outputLen);\n    if (info === undefined)\n        info = EMPTY_BUFFER;\n    // first L(ength) octets of T\n    const okm = new Uint8Array(blocks * hash.outputLen);\n    // Re-use HMAC instance between blocks\n    const HMAC = hmac.create(hash, prk);\n    const HMACTmp = HMAC._cloneInto();\n    const T = new Uint8Array(HMAC.outputLen);\n    for (let counter = 0; counter < blocks; counter++) {\n        HKDF_COUNTER[0] = counter + 1;\n        // T(0) = empty string (zero length)\n        // T(N) = HMAC-Hash(PRK, T(N-1) | info | N)\n        HMACTmp.update(counter === 0 ? EMPTY_BUFFER : T)\n            .update(info)\n            .update(HKDF_COUNTER)\n            .digestInto(T);\n        okm.set(T, hash.outputLen * counter);\n        HMAC._cloneInto(HMACTmp);\n    }\n    HMAC.destroy();\n    HMACTmp.destroy();\n    T.fill(0);\n    HKDF_COUNTER.fill(0);\n    return okm.slice(0, length);\n}\n/**\n * HKDF (RFC 5869): extract + expand in one step.\n * @param hash - hash function that would be used (e.g. sha256)\n * @param ikm - input keying material, the initial key\n * @param salt - optional salt value (a non-secret random value)\n * @param info - optional context and application specific information\n * @param length - length of output keying material in octets\n */\nexport const hkdf = (hash, ikm, salt, info, length) => expand(hash, extract(hash, ikm, salt), info, length);\n//# sourceMappingURL=hkdf.js.map","var __defProp = Object.defineProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\n\n// pure.ts\nimport { schnorr } from \"@noble/curves/secp256k1\";\nimport { bytesToHex } from \"@noble/hashes/utils\";\n\n// core.ts\nvar verifiedSymbol = Symbol(\"verified\");\nvar isRecord = (obj) => obj instanceof Object;\nfunction validateEvent(event) {\n  if (!isRecord(event))\n    return false;\n  if (typeof event.kind !== \"number\")\n    return false;\n  if (typeof event.content !== \"string\")\n    return false;\n  if (typeof event.created_at !== \"number\")\n    return false;\n  if (typeof event.pubkey !== \"string\")\n    return false;\n  if (!event.pubkey.match(/^[a-f0-9]{64}$/))\n    return false;\n  if (!Array.isArray(event.tags))\n    return false;\n  for (let i2 = 0; i2 < event.tags.length; i2++) {\n    let tag = event.tags[i2];\n    if (!Array.isArray(tag))\n      return false;\n    for (let j = 0; j < tag.length; j++) {\n      if (typeof tag[j] === \"object\")\n        return false;\n    }\n  }\n  return true;\n}\nfunction sortEvents(events) {\n  return events.sort((a, b) => {\n    if (a.created_at !== b.created_at) {\n      return b.created_at - a.created_at;\n    }\n    return a.id.localeCompare(b.id);\n  });\n}\n\n// pure.ts\nimport { sha256 } from \"@noble/hashes/sha256\";\n\n// utils.ts\nvar utils_exports = {};\n__export(utils_exports, {\n  Queue: () => Queue,\n  QueueNode: () => QueueNode,\n  binarySearch: () => binarySearch,\n  insertEventIntoAscendingList: () => insertEventIntoAscendingList,\n  insertEventIntoDescendingList: () => insertEventIntoDescendingList,\n  normalizeURL: () => normalizeURL,\n  utf8Decoder: () => utf8Decoder,\n  utf8Encoder: () => utf8Encoder\n});\nvar utf8Decoder = new TextDecoder(\"utf-8\");\nvar utf8Encoder = new TextEncoder();\nfunction normalizeURL(url) {\n  if (url.indexOf(\"://\") === -1)\n    url = \"wss://\" + url;\n  let p = new URL(url);\n  p.pathname = p.pathname.replace(/\\/+/g, \"/\");\n  if (p.pathname.endsWith(\"/\"))\n    p.pathname = p.pathname.slice(0, -1);\n  if (p.port === \"80\" && p.protocol === \"ws:\" || p.port === \"443\" && p.protocol === \"wss:\")\n    p.port = \"\";\n  p.searchParams.sort();\n  p.hash = \"\";\n  return p.toString();\n}\nfunction insertEventIntoDescendingList(sortedArray, event) {\n  const [idx, found] = binarySearch(sortedArray, (b) => {\n    if (event.id === b.id)\n      return 0;\n    if (event.created_at === b.created_at)\n      return -1;\n    return b.created_at - event.created_at;\n  });\n  if (!found) {\n    sortedArray.splice(idx, 0, event);\n  }\n  return sortedArray;\n}\nfunction insertEventIntoAscendingList(sortedArray, event) {\n  const [idx, found] = binarySearch(sortedArray, (b) => {\n    if (event.id === b.id)\n      return 0;\n    if (event.created_at === b.created_at)\n      return -1;\n    return event.created_at - b.created_at;\n  });\n  if (!found) {\n    sortedArray.splice(idx, 0, event);\n  }\n  return sortedArray;\n}\nfunction binarySearch(arr, compare) {\n  let start = 0;\n  let end = arr.length - 1;\n  while (start <= end) {\n    const mid = Math.floor((start + end) / 2);\n    const cmp = compare(arr[mid]);\n    if (cmp === 0) {\n      return [mid, true];\n    }\n    if (cmp < 0) {\n      end = mid - 1;\n    } else {\n      start = mid + 1;\n    }\n  }\n  return [start, false];\n}\nvar QueueNode = class {\n  value;\n  next = null;\n  prev = null;\n  constructor(message) {\n    this.value = message;\n  }\n};\nvar Queue = class {\n  first;\n  last;\n  constructor() {\n    this.first = null;\n    this.last = null;\n  }\n  enqueue(value) {\n    const newNode = new QueueNode(value);\n    if (!this.last) {\n      this.first = newNode;\n      this.last = newNode;\n    } else if (this.last === this.first) {\n      this.last = newNode;\n      this.last.prev = this.first;\n      this.first.next = newNode;\n    } else {\n      newNode.prev = this.last;\n      this.last.next = newNode;\n      this.last = newNode;\n    }\n    return true;\n  }\n  dequeue() {\n    if (!this.first)\n      return null;\n    if (this.first === this.last) {\n      const target2 = this.first;\n      this.first = null;\n      this.last = null;\n      return target2.value;\n    }\n    const target = this.first;\n    this.first = target.next;\n    return target.value;\n  }\n};\n\n// pure.ts\nvar JS = class {\n  generateSecretKey() {\n    return schnorr.utils.randomPrivateKey();\n  }\n  getPublicKey(secretKey) {\n    return bytesToHex(schnorr.getPublicKey(secretKey));\n  }\n  finalizeEvent(t, secretKey) {\n    const event = t;\n    event.pubkey = bytesToHex(schnorr.getPublicKey(secretKey));\n    event.id = getEventHash(event);\n    event.sig = bytesToHex(schnorr.sign(getEventHash(event), secretKey));\n    event[verifiedSymbol] = true;\n    return event;\n  }\n  verifyEvent(event) {\n    if (typeof event[verifiedSymbol] === \"boolean\")\n      return event[verifiedSymbol];\n    const hash = getEventHash(event);\n    if (hash !== event.id) {\n      event[verifiedSymbol] = false;\n      return false;\n    }\n    try {\n      const valid = schnorr.verify(event.sig, hash, event.pubkey);\n      event[verifiedSymbol] = valid;\n      return valid;\n    } catch (err) {\n      event[verifiedSymbol] = false;\n      return false;\n    }\n  }\n};\nfunction serializeEvent(evt) {\n  if (!validateEvent(evt))\n    throw new Error(\"can't serialize event with wrong or missing properties\");\n  return JSON.stringify([0, evt.pubkey, evt.created_at, evt.kind, evt.tags, evt.content]);\n}\nfunction getEventHash(event) {\n  let eventHash = sha256(utf8Encoder.encode(serializeEvent(event)));\n  return bytesToHex(eventHash);\n}\nvar i = new JS();\nvar generateSecretKey = i.generateSecretKey;\nvar getPublicKey = i.getPublicKey;\nvar finalizeEvent = i.finalizeEvent;\nvar verifyEvent = i.verifyEvent;\n\n// kinds.ts\nvar kinds_exports = {};\n__export(kinds_exports, {\n  Application: () => Application,\n  BadgeAward: () => BadgeAward,\n  BadgeDefinition: () => BadgeDefinition,\n  BlockedRelaysList: () => BlockedRelaysList,\n  BookmarkList: () => BookmarkList,\n  Bookmarksets: () => Bookmarksets,\n  Calendar: () => Calendar,\n  CalendarEventRSVP: () => CalendarEventRSVP,\n  ChannelCreation: () => ChannelCreation,\n  ChannelHideMessage: () => ChannelHideMessage,\n  ChannelMessage: () => ChannelMessage,\n  ChannelMetadata: () => ChannelMetadata,\n  ChannelMuteUser: () => ChannelMuteUser,\n  ClassifiedListing: () => ClassifiedListing,\n  ClientAuth: () => ClientAuth,\n  CommunitiesList: () => CommunitiesList,\n  CommunityDefinition: () => CommunityDefinition,\n  CommunityPostApproval: () => CommunityPostApproval,\n  Contacts: () => Contacts,\n  CreateOrUpdateProduct: () => CreateOrUpdateProduct,\n  CreateOrUpdateStall: () => CreateOrUpdateStall,\n  Curationsets: () => Curationsets,\n  Date: () => Date2,\n  DirectMessageRelaysList: () => DirectMessageRelaysList,\n  DraftClassifiedListing: () => DraftClassifiedListing,\n  DraftLong: () => DraftLong,\n  Emojisets: () => Emojisets,\n  EncryptedDirectMessage: () => EncryptedDirectMessage,\n  EventDeletion: () => EventDeletion,\n  FileMetadata: () => FileMetadata,\n  FileServerPreference: () => FileServerPreference,\n  Followsets: () => Followsets,\n  GenericRepost: () => GenericRepost,\n  Genericlists: () => Genericlists,\n  GiftWrap: () => GiftWrap,\n  HTTPAuth: () => HTTPAuth,\n  Handlerinformation: () => Handlerinformation,\n  Handlerrecommendation: () => Handlerrecommendation,\n  Highlights: () => Highlights,\n  InterestsList: () => InterestsList,\n  Interestsets: () => Interestsets,\n  JobFeedback: () => JobFeedback,\n  JobRequest: () => JobRequest,\n  JobResult: () => JobResult,\n  Label: () => Label,\n  LightningPubRPC: () => LightningPubRPC,\n  LiveChatMessage: () => LiveChatMessage,\n  LiveEvent: () => LiveEvent,\n  LongFormArticle: () => LongFormArticle,\n  Metadata: () => Metadata,\n  Mutelist: () => Mutelist,\n  NWCWalletInfo: () => NWCWalletInfo,\n  NWCWalletRequest: () => NWCWalletRequest,\n  NWCWalletResponse: () => NWCWalletResponse,\n  NostrConnect: () => NostrConnect,\n  OpenTimestamps: () => OpenTimestamps,\n  Pinlist: () => Pinlist,\n  PrivateDirectMessage: () => PrivateDirectMessage,\n  ProblemTracker: () => ProblemTracker,\n  ProfileBadges: () => ProfileBadges,\n  PublicChatsList: () => PublicChatsList,\n  Reaction: () => Reaction,\n  RecommendRelay: () => RecommendRelay,\n  RelayList: () => RelayList,\n  Relaysets: () => Relaysets,\n  Report: () => Report,\n  Reporting: () => Reporting,\n  Repost: () => Repost,\n  Seal: () => Seal,\n  SearchRelaysList: () => SearchRelaysList,\n  ShortTextNote: () => ShortTextNote,\n  Time: () => Time,\n  UserEmojiList: () => UserEmojiList,\n  UserStatuses: () => UserStatuses,\n  Zap: () => Zap,\n  ZapGoal: () => ZapGoal,\n  ZapRequest: () => ZapRequest,\n  classifyKind: () => classifyKind,\n  isEphemeralKind: () => isEphemeralKind,\n  isKind: () => isKind,\n  isParameterizedReplaceableKind: () => isParameterizedReplaceableKind,\n  isRegularKind: () => isRegularKind,\n  isReplaceableKind: () => isReplaceableKind\n});\nfunction isRegularKind(kind) {\n  return 1e3 <= kind && kind < 1e4 || [1, 2, 4, 5, 6, 7, 8, 16, 40, 41, 42, 43, 44].includes(kind);\n}\nfunction isReplaceableKind(kind) {\n  return [0, 3].includes(kind) || 1e4 <= kind && kind < 2e4;\n}\nfunction isEphemeralKind(kind) {\n  return 2e4 <= kind && kind < 3e4;\n}\nfunction isParameterizedReplaceableKind(kind) {\n  return 3e4 <= kind && kind < 4e4;\n}\nfunction classifyKind(kind) {\n  if (isRegularKind(kind))\n    return \"regular\";\n  if (isReplaceableKind(kind))\n    return \"replaceable\";\n  if (isEphemeralKind(kind))\n    return \"ephemeral\";\n  if (isParameterizedReplaceableKind(kind))\n    return \"parameterized\";\n  return \"unknown\";\n}\nfunction isKind(event, kind) {\n  const kindAsArray = kind instanceof Array ? kind : [kind];\n  return validateEvent(event) && kindAsArray.includes(event.kind) || false;\n}\nvar Metadata = 0;\nvar ShortTextNote = 1;\nvar RecommendRelay = 2;\nvar Contacts = 3;\nvar EncryptedDirectMessage = 4;\nvar EventDeletion = 5;\nvar Repost = 6;\nvar Reaction = 7;\nvar BadgeAward = 8;\nvar Seal = 13;\nvar PrivateDirectMessage = 14;\nvar GenericRepost = 16;\nvar ChannelCreation = 40;\nvar ChannelMetadata = 41;\nvar ChannelMessage = 42;\nvar ChannelHideMessage = 43;\nvar ChannelMuteUser = 44;\nvar OpenTimestamps = 1040;\nvar GiftWrap = 1059;\nvar FileMetadata = 1063;\nvar LiveChatMessage = 1311;\nvar ProblemTracker = 1971;\nvar Report = 1984;\nvar Reporting = 1984;\nvar Label = 1985;\nvar CommunityPostApproval = 4550;\nvar JobRequest = 5999;\nvar JobResult = 6999;\nvar JobFeedback = 7e3;\nvar ZapGoal = 9041;\nvar ZapRequest = 9734;\nvar Zap = 9735;\nvar Highlights = 9802;\nvar Mutelist = 1e4;\nvar Pinlist = 10001;\nvar RelayList = 10002;\nvar BookmarkList = 10003;\nvar CommunitiesList = 10004;\nvar PublicChatsList = 10005;\nvar BlockedRelaysList = 10006;\nvar SearchRelaysList = 10007;\nvar InterestsList = 10015;\nvar UserEmojiList = 10030;\nvar DirectMessageRelaysList = 10050;\nvar FileServerPreference = 10096;\nvar NWCWalletInfo = 13194;\nvar LightningPubRPC = 21e3;\nvar ClientAuth = 22242;\nvar NWCWalletRequest = 23194;\nvar NWCWalletResponse = 23195;\nvar NostrConnect = 24133;\nvar HTTPAuth = 27235;\nvar Followsets = 3e4;\nvar Genericlists = 30001;\nvar Relaysets = 30002;\nvar Bookmarksets = 30003;\nvar Curationsets = 30004;\nvar ProfileBadges = 30008;\nvar BadgeDefinition = 30009;\nvar Interestsets = 30015;\nvar CreateOrUpdateStall = 30017;\nvar CreateOrUpdateProduct = 30018;\nvar LongFormArticle = 30023;\nvar DraftLong = 30024;\nvar Emojisets = 30030;\nvar Application = 30078;\nvar LiveEvent = 30311;\nvar UserStatuses = 30315;\nvar ClassifiedListing = 30402;\nvar DraftClassifiedListing = 30403;\nvar Date2 = 31922;\nvar Time = 31923;\nvar Calendar = 31924;\nvar CalendarEventRSVP = 31925;\nvar Handlerrecommendation = 31989;\nvar Handlerinformation = 31990;\nvar CommunityDefinition = 34550;\n\n// filter.ts\nfunction matchFilter(filter, event) {\n  if (filter.ids && filter.ids.indexOf(event.id) === -1) {\n    return false;\n  }\n  if (filter.kinds && filter.kinds.indexOf(event.kind) === -1) {\n    return false;\n  }\n  if (filter.authors && filter.authors.indexOf(event.pubkey) === -1) {\n    return false;\n  }\n  for (let f in filter) {\n    if (f[0] === \"#\") {\n      let tagName = f.slice(1);\n      let values = filter[`#${tagName}`];\n      if (values && !event.tags.find(([t, v]) => t === f.slice(1) && values.indexOf(v) !== -1))\n        return false;\n    }\n  }\n  if (filter.since && event.created_at < filter.since)\n    return false;\n  if (filter.until && event.created_at > filter.until)\n    return false;\n  return true;\n}\nfunction matchFilters(filters, event) {\n  for (let i2 = 0; i2 < filters.length; i2++) {\n    if (matchFilter(filters[i2], event)) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction mergeFilters(...filters) {\n  let result = {};\n  for (let i2 = 0; i2 < filters.length; i2++) {\n    let filter = filters[i2];\n    Object.entries(filter).forEach(([property, values]) => {\n      if (property === \"kinds\" || property === \"ids\" || property === \"authors\" || property[0] === \"#\") {\n        result[property] = result[property] || [];\n        for (let v = 0; v < values.length; v++) {\n          let value = values[v];\n          if (!result[property].includes(value))\n            result[property].push(value);\n        }\n      }\n    });\n    if (filter.limit && (!result.limit || filter.limit > result.limit))\n      result.limit = filter.limit;\n    if (filter.until && (!result.until || filter.until > result.until))\n      result.until = filter.until;\n    if (filter.since && (!result.since || filter.since < result.since))\n      result.since = filter.since;\n  }\n  return result;\n}\nfunction getFilterLimit(filter) {\n  if (filter.ids && !filter.ids.length)\n    return 0;\n  if (filter.kinds && !filter.kinds.length)\n    return 0;\n  if (filter.authors && !filter.authors.length)\n    return 0;\n  for (const [key, value] of Object.entries(filter)) {\n    if (key[0] === \"#\" && Array.isArray(value) && !value.length)\n      return 0;\n  }\n  return Math.min(\n    Math.max(0, filter.limit ?? Infinity),\n    filter.ids?.length ?? Infinity,\n    filter.authors?.length && filter.kinds?.every((kind) => isReplaceableKind(kind)) ? filter.authors.length * filter.kinds.length : Infinity,\n    filter.authors?.length && filter.kinds?.every((kind) => isParameterizedReplaceableKind(kind)) && filter[\"#d\"]?.length ? filter.authors.length * filter.kinds.length * filter[\"#d\"].length : Infinity\n  );\n}\n\n// fakejson.ts\nvar fakejson_exports = {};\n__export(fakejson_exports, {\n  getHex64: () => getHex64,\n  getInt: () => getInt,\n  getSubscriptionId: () => getSubscriptionId,\n  matchEventId: () => matchEventId,\n  matchEventKind: () => matchEventKind,\n  matchEventPubkey: () => matchEventPubkey\n});\nfunction getHex64(json, field) {\n  let len = field.length + 3;\n  let idx = json.indexOf(`\"${field}\":`) + len;\n  let s = json.slice(idx).indexOf(`\"`) + idx + 1;\n  return json.slice(s, s + 64);\n}\nfunction getInt(json, field) {\n  let len = field.length;\n  let idx = json.indexOf(`\"${field}\":`) + len + 3;\n  let sliced = json.slice(idx);\n  let end = Math.min(sliced.indexOf(\",\"), sliced.indexOf(\"}\"));\n  return parseInt(sliced.slice(0, end), 10);\n}\nfunction getSubscriptionId(json) {\n  let idx = json.slice(0, 22).indexOf(`\"EVENT\"`);\n  if (idx === -1)\n    return null;\n  let pstart = json.slice(idx + 7 + 1).indexOf(`\"`);\n  if (pstart === -1)\n    return null;\n  let start = idx + 7 + 1 + pstart;\n  let pend = json.slice(start + 1, 80).indexOf(`\"`);\n  if (pend === -1)\n    return null;\n  let end = start + 1 + pend;\n  return json.slice(start + 1, end);\n}\nfunction matchEventId(json, id) {\n  return id === getHex64(json, \"id\");\n}\nfunction matchEventPubkey(json, pubkey) {\n  return pubkey === getHex64(json, \"pubkey\");\n}\nfunction matchEventKind(json, kind) {\n  return kind === getInt(json, \"kind\");\n}\n\n// nip42.ts\nvar nip42_exports = {};\n__export(nip42_exports, {\n  makeAuthEvent: () => makeAuthEvent\n});\nfunction makeAuthEvent(relayURL, challenge) {\n  return {\n    kind: ClientAuth,\n    created_at: Math.floor(Date.now() / 1e3),\n    tags: [\n      [\"relay\", relayURL],\n      [\"challenge\", challenge]\n    ],\n    content: \"\"\n  };\n}\n\n// helpers.ts\nasync function yieldThread() {\n  return new Promise((resolve) => {\n    const ch = new MessageChannel();\n    const handler = () => {\n      ch.port1.removeEventListener(\"message\", handler);\n      resolve();\n    };\n    ch.port1.addEventListener(\"message\", handler);\n    ch.port2.postMessage(0);\n    ch.port1.start();\n  });\n}\nvar alwaysTrue = (t) => {\n  t[verifiedSymbol] = true;\n  return true;\n};\n\n// abstract-relay.ts\nvar AbstractRelay = class {\n  url;\n  _connected = false;\n  onclose = null;\n  onnotice = (msg) => console.debug(`NOTICE from ${this.url}: ${msg}`);\n  _onauth = null;\n  baseEoseTimeout = 4400;\n  connectionTimeout = 4400;\n  publishTimeout = 4400;\n  openSubs = /* @__PURE__ */ new Map();\n  connectionTimeoutHandle;\n  connectionPromise;\n  openCountRequests = /* @__PURE__ */ new Map();\n  openEventPublishes = /* @__PURE__ */ new Map();\n  ws;\n  incomingMessageQueue = new Queue();\n  queueRunning = false;\n  challenge;\n  serial = 0;\n  verifyEvent;\n  _WebSocket;\n  constructor(url, opts) {\n    this.url = normalizeURL(url);\n    this.verifyEvent = opts.verifyEvent;\n    this._WebSocket = opts.websocketImplementation || WebSocket;\n  }\n  static async connect(url, opts) {\n    const relay = new AbstractRelay(url, opts);\n    await relay.connect();\n    return relay;\n  }\n  closeAllSubscriptions(reason) {\n    for (let [_, sub] of this.openSubs) {\n      sub.close(reason);\n    }\n    this.openSubs.clear();\n    for (let [_, ep] of this.openEventPublishes) {\n      ep.reject(new Error(reason));\n    }\n    this.openEventPublishes.clear();\n    for (let [_, cr] of this.openCountRequests) {\n      cr.reject(new Error(reason));\n    }\n    this.openCountRequests.clear();\n  }\n  get connected() {\n    return this._connected;\n  }\n  async connect() {\n    if (this.connectionPromise)\n      return this.connectionPromise;\n    this.challenge = void 0;\n    this.connectionPromise = new Promise((resolve, reject) => {\n      this.connectionTimeoutHandle = setTimeout(() => {\n        reject(\"connection timed out\");\n        this.connectionPromise = void 0;\n        this.onclose?.();\n        this.closeAllSubscriptions(\"relay connection timed out\");\n      }, this.connectionTimeout);\n      try {\n        this.ws = new this._WebSocket(this.url);\n      } catch (err) {\n        reject(err);\n        return;\n      }\n      this.ws.onopen = () => {\n        clearTimeout(this.connectionTimeoutHandle);\n        this._connected = true;\n        resolve();\n      };\n      this.ws.onerror = (ev) => {\n        reject(ev.message || \"websocket error\");\n        if (this._connected) {\n          this._connected = false;\n          this.connectionPromise = void 0;\n          this.onclose?.();\n          this.closeAllSubscriptions(\"relay connection errored\");\n        }\n      };\n      this.ws.onclose = async () => {\n        if (this._connected) {\n          this._connected = false;\n          this.connectionPromise = void 0;\n          this.onclose?.();\n          this.closeAllSubscriptions(\"relay connection closed\");\n        }\n      };\n      this.ws.onmessage = this._onmessage.bind(this);\n    });\n    return this.connectionPromise;\n  }\n  async runQueue() {\n    this.queueRunning = true;\n    while (true) {\n      if (false === this.handleNext()) {\n        break;\n      }\n      await yieldThread();\n    }\n    this.queueRunning = false;\n  }\n  handleNext() {\n    const json = this.incomingMessageQueue.dequeue();\n    if (!json) {\n      return false;\n    }\n    const subid = getSubscriptionId(json);\n    if (subid) {\n      const so = this.openSubs.get(subid);\n      if (!so) {\n        return;\n      }\n      const id = getHex64(json, \"id\");\n      const alreadyHave = so.alreadyHaveEvent?.(id);\n      so.receivedEvent?.(this, id);\n      if (alreadyHave) {\n        return;\n      }\n    }\n    try {\n      let data = JSON.parse(json);\n      switch (data[0]) {\n        case \"EVENT\": {\n          const so = this.openSubs.get(data[1]);\n          const event = data[2];\n          if (this.verifyEvent(event) && matchFilters(so.filters, event)) {\n            so.onevent(event);\n          }\n          return;\n        }\n        case \"COUNT\": {\n          const id = data[1];\n          const payload = data[2];\n          const cr = this.openCountRequests.get(id);\n          if (cr) {\n            cr.resolve(payload.count);\n            this.openCountRequests.delete(id);\n          }\n          return;\n        }\n        case \"EOSE\": {\n          const so = this.openSubs.get(data[1]);\n          if (!so)\n            return;\n          so.receivedEose();\n          return;\n        }\n        case \"OK\": {\n          const id = data[1];\n          const ok = data[2];\n          const reason = data[3];\n          const ep = this.openEventPublishes.get(id);\n          if (ep) {\n            if (ok)\n              ep.resolve(reason);\n            else\n              ep.reject(new Error(reason));\n            this.openEventPublishes.delete(id);\n          }\n          return;\n        }\n        case \"CLOSED\": {\n          const id = data[1];\n          const so = this.openSubs.get(id);\n          if (!so)\n            return;\n          so.closed = true;\n          so.close(data[2]);\n          return;\n        }\n        case \"NOTICE\":\n          this.onnotice(data[1]);\n          return;\n        case \"AUTH\": {\n          this.challenge = data[1];\n          this._onauth?.(data[1]);\n          return;\n        }\n      }\n    } catch (err) {\n      return;\n    }\n  }\n  async send(message) {\n    if (!this.connectionPromise)\n      throw new Error(\"sending on closed connection\");\n    this.connectionPromise.then(() => {\n      this.ws?.send(message);\n    });\n  }\n  async auth(signAuthEvent) {\n    if (!this.challenge)\n      throw new Error(\"can't perform auth, no challenge was received\");\n    const evt = await signAuthEvent(makeAuthEvent(this.url, this.challenge));\n    const ret = new Promise((resolve, reject) => {\n      this.openEventPublishes.set(evt.id, { resolve, reject });\n    });\n    this.send('[\"AUTH\",' + JSON.stringify(evt) + \"]\");\n    return ret;\n  }\n  async publish(event) {\n    const ret = new Promise((resolve, reject) => {\n      this.openEventPublishes.set(event.id, { resolve, reject });\n    });\n    this.send('[\"EVENT\",' + JSON.stringify(event) + \"]\");\n    setTimeout(() => {\n      const ep = this.openEventPublishes.get(event.id);\n      if (ep) {\n        ep.reject(new Error(\"publish timed out\"));\n        this.openEventPublishes.delete(event.id);\n      }\n    }, this.publishTimeout);\n    return ret;\n  }\n  async count(filters, params) {\n    this.serial++;\n    const id = params?.id || \"count:\" + this.serial;\n    const ret = new Promise((resolve, reject) => {\n      this.openCountRequests.set(id, { resolve, reject });\n    });\n    this.send('[\"COUNT\",\"' + id + '\",' + JSON.stringify(filters).substring(1));\n    return ret;\n  }\n  subscribe(filters, params) {\n    const subscription = this.prepareSubscription(filters, params);\n    subscription.fire();\n    return subscription;\n  }\n  prepareSubscription(filters, params) {\n    this.serial++;\n    const id = params.id || \"sub:\" + this.serial;\n    const subscription = new Subscription(this, id, filters, params);\n    this.openSubs.set(id, subscription);\n    return subscription;\n  }\n  close() {\n    this.closeAllSubscriptions(\"relay connection closed by us\");\n    this._connected = false;\n    this.ws?.close();\n  }\n  _onmessage(ev) {\n    this.incomingMessageQueue.enqueue(ev.data);\n    if (!this.queueRunning) {\n      this.runQueue();\n    }\n  }\n};\nvar Subscription = class {\n  relay;\n  id;\n  closed = false;\n  eosed = false;\n  filters;\n  alreadyHaveEvent;\n  receivedEvent;\n  onevent;\n  oneose;\n  onclose;\n  eoseTimeout;\n  eoseTimeoutHandle;\n  constructor(relay, id, filters, params) {\n    this.relay = relay;\n    this.filters = filters;\n    this.id = id;\n    this.alreadyHaveEvent = params.alreadyHaveEvent;\n    this.receivedEvent = params.receivedEvent;\n    this.eoseTimeout = params.eoseTimeout || relay.baseEoseTimeout;\n    this.oneose = params.oneose;\n    this.onclose = params.onclose;\n    this.onevent = params.onevent || ((event) => {\n      console.warn(\n        `onevent() callback not defined for subscription '${this.id}' in relay ${this.relay.url}. event received:`,\n        event\n      );\n    });\n  }\n  fire() {\n    this.relay.send('[\"REQ\",\"' + this.id + '\",' + JSON.stringify(this.filters).substring(1));\n    this.eoseTimeoutHandle = setTimeout(this.receivedEose.bind(this), this.eoseTimeout);\n  }\n  receivedEose() {\n    if (this.eosed)\n      return;\n    clearTimeout(this.eoseTimeoutHandle);\n    this.eosed = true;\n    this.oneose?.();\n  }\n  close(reason = \"closed by caller\") {\n    if (!this.closed && this.relay.connected) {\n      this.relay.send('[\"CLOSE\",' + JSON.stringify(this.id) + \"]\");\n      this.closed = true;\n    }\n    this.relay.openSubs.delete(this.id);\n    this.onclose?.(reason);\n  }\n};\n\n// relay.ts\nvar _WebSocket;\ntry {\n  _WebSocket = WebSocket;\n} catch {\n}\nvar Relay = class extends AbstractRelay {\n  constructor(url) {\n    super(url, { verifyEvent, websocketImplementation: _WebSocket });\n  }\n  static async connect(url) {\n    const relay = new Relay(url);\n    await relay.connect();\n    return relay;\n  }\n};\n\n// abstract-pool.ts\nvar AbstractSimplePool = class {\n  relays = /* @__PURE__ */ new Map();\n  seenOn = /* @__PURE__ */ new Map();\n  trackRelays = false;\n  verifyEvent;\n  trustedRelayURLs = /* @__PURE__ */ new Set();\n  _WebSocket;\n  constructor(opts) {\n    this.verifyEvent = opts.verifyEvent;\n    this._WebSocket = opts.websocketImplementation;\n  }\n  async ensureRelay(url, params) {\n    url = normalizeURL(url);\n    let relay = this.relays.get(url);\n    if (!relay) {\n      relay = new AbstractRelay(url, {\n        verifyEvent: this.trustedRelayURLs.has(url) ? alwaysTrue : this.verifyEvent,\n        websocketImplementation: this._WebSocket\n      });\n      if (params?.connectionTimeout)\n        relay.connectionTimeout = params.connectionTimeout;\n      this.relays.set(url, relay);\n    }\n    await relay.connect();\n    return relay;\n  }\n  close(relays) {\n    relays.map(normalizeURL).forEach((url) => {\n      this.relays.get(url)?.close();\n    });\n  }\n  subscribeMany(relays, filters, params) {\n    return this.subscribeManyMap(Object.fromEntries(relays.map((url) => [url, filters])), params);\n  }\n  subscribeManyMap(requests, params) {\n    if (this.trackRelays) {\n      params.receivedEvent = (relay, id) => {\n        let set = this.seenOn.get(id);\n        if (!set) {\n          set = /* @__PURE__ */ new Set();\n          this.seenOn.set(id, set);\n        }\n        set.add(relay);\n      };\n    }\n    const _knownIds = /* @__PURE__ */ new Set();\n    const subs = [];\n    const relaysLength = Object.keys(requests).length;\n    const eosesReceived = [];\n    let handleEose = (i2) => {\n      eosesReceived[i2] = true;\n      if (eosesReceived.filter((a) => a).length === relaysLength) {\n        params.oneose?.();\n        handleEose = () => {\n        };\n      }\n    };\n    const closesReceived = [];\n    let handleClose = (i2, reason) => {\n      handleEose(i2);\n      closesReceived[i2] = reason;\n      if (closesReceived.filter((a) => a).length === relaysLength) {\n        params.onclose?.(closesReceived);\n        handleClose = () => {\n        };\n      }\n    };\n    const localAlreadyHaveEventHandler = (id) => {\n      if (params.alreadyHaveEvent?.(id)) {\n        return true;\n      }\n      const have = _knownIds.has(id);\n      _knownIds.add(id);\n      return have;\n    };\n    const allOpened = Promise.all(\n      Object.entries(requests).map(async (req, i2, arr) => {\n        if (arr.indexOf(req) !== i2) {\n          handleClose(i2, \"duplicate url\");\n          return;\n        }\n        let [url, filters] = req;\n        url = normalizeURL(url);\n        let relay;\n        try {\n          relay = await this.ensureRelay(url, {\n            connectionTimeout: params.maxWait ? Math.max(params.maxWait * 0.8, params.maxWait - 1e3) : void 0\n          });\n        } catch (err) {\n          handleClose(i2, err?.message || String(err));\n          return;\n        }\n        let subscription = relay.subscribe(filters, {\n          ...params,\n          oneose: () => handleEose(i2),\n          onclose: (reason) => handleClose(i2, reason),\n          alreadyHaveEvent: localAlreadyHaveEventHandler,\n          eoseTimeout: params.maxWait\n        });\n        subs.push(subscription);\n      })\n    );\n    return {\n      async close() {\n        await allOpened;\n        subs.forEach((sub) => {\n          sub.close();\n        });\n      }\n    };\n  }\n  subscribeManyEose(relays, filters, params) {\n    const subcloser = this.subscribeMany(relays, filters, {\n      ...params,\n      oneose() {\n        subcloser.close();\n      }\n    });\n    return subcloser;\n  }\n  async querySync(relays, filter, params) {\n    return new Promise(async (resolve) => {\n      const events = [];\n      this.subscribeManyEose(relays, [filter], {\n        ...params,\n        onevent(event) {\n          events.push(event);\n        },\n        onclose(_) {\n          resolve(events);\n        }\n      });\n    });\n  }\n  async get(relays, filter, params) {\n    filter.limit = 1;\n    const events = await this.querySync(relays, filter, params);\n    events.sort((a, b) => b.created_at - a.created_at);\n    return events[0] || null;\n  }\n  publish(relays, event) {\n    return relays.map(normalizeURL).map(async (url, i2, arr) => {\n      if (arr.indexOf(url) !== i2) {\n        return Promise.reject(\"duplicate url\");\n      }\n      let r = await this.ensureRelay(url);\n      return r.publish(event).then((reason) => {\n        if (this.trackRelays) {\n          let set = this.seenOn.get(event.id);\n          if (!set) {\n            set = /* @__PURE__ */ new Set();\n            this.seenOn.set(event.id, set);\n          }\n          set.add(r);\n        }\n        return reason;\n      });\n    });\n  }\n  listConnectionStatus() {\n    const map = /* @__PURE__ */ new Map();\n    this.relays.forEach((relay, url) => map.set(url, relay.connected));\n    return map;\n  }\n  destroy() {\n    this.relays.forEach((conn) => conn.close());\n    this.relays = /* @__PURE__ */ new Map();\n  }\n};\n\n// pool.ts\nvar _WebSocket2;\ntry {\n  _WebSocket2 = WebSocket;\n} catch {\n}\nvar SimplePool = class extends AbstractSimplePool {\n  constructor() {\n    super({ verifyEvent, websocketImplementation: _WebSocket2 });\n  }\n};\n\n// nip19.ts\nvar nip19_exports = {};\n__export(nip19_exports, {\n  BECH32_REGEX: () => BECH32_REGEX,\n  Bech32MaxSize: () => Bech32MaxSize,\n  NostrTypeGuard: () => NostrTypeGuard,\n  decode: () => decode,\n  encodeBytes: () => encodeBytes,\n  naddrEncode: () => naddrEncode,\n  neventEncode: () => neventEncode,\n  noteEncode: () => noteEncode,\n  nprofileEncode: () => nprofileEncode,\n  npubEncode: () => npubEncode,\n  nsecEncode: () => nsecEncode\n});\nimport { bytesToHex as bytesToHex2, concatBytes, hexToBytes } from \"@noble/hashes/utils\";\nimport { bech32 } from \"@scure/base\";\nvar NostrTypeGuard = {\n  isNProfile: (value) => /^nprofile1[a-z\\d]+$/.test(value || \"\"),\n  isNEvent: (value) => /^nevent1[a-z\\d]+$/.test(value || \"\"),\n  isNAddr: (value) => /^naddr1[a-z\\d]+$/.test(value || \"\"),\n  isNSec: (value) => /^nsec1[a-z\\d]{58}$/.test(value || \"\"),\n  isNPub: (value) => /^npub1[a-z\\d]{58}$/.test(value || \"\"),\n  isNote: (value) => /^note1[a-z\\d]+$/.test(value || \"\"),\n  isNcryptsec: (value) => /^ncryptsec1[a-z\\d]+$/.test(value || \"\")\n};\nvar Bech32MaxSize = 5e3;\nvar BECH32_REGEX = /[\\x21-\\x7E]{1,83}1[023456789acdefghjklmnpqrstuvwxyz]{6,}/;\nfunction integerToUint8Array(number) {\n  const uint8Array = new Uint8Array(4);\n  uint8Array[0] = number >> 24 & 255;\n  uint8Array[1] = number >> 16 & 255;\n  uint8Array[2] = number >> 8 & 255;\n  uint8Array[3] = number & 255;\n  return uint8Array;\n}\nfunction decode(nip19) {\n  let { prefix, words } = bech32.decode(nip19, Bech32MaxSize);\n  let data = new Uint8Array(bech32.fromWords(words));\n  switch (prefix) {\n    case \"nprofile\": {\n      let tlv = parseTLV(data);\n      if (!tlv[0]?.[0])\n        throw new Error(\"missing TLV 0 for nprofile\");\n      if (tlv[0][0].length !== 32)\n        throw new Error(\"TLV 0 should be 32 bytes\");\n      return {\n        type: \"nprofile\",\n        data: {\n          pubkey: bytesToHex2(tlv[0][0]),\n          relays: tlv[1] ? tlv[1].map((d) => utf8Decoder.decode(d)) : []\n        }\n      };\n    }\n    case \"nevent\": {\n      let tlv = parseTLV(data);\n      if (!tlv[0]?.[0])\n        throw new Error(\"missing TLV 0 for nevent\");\n      if (tlv[0][0].length !== 32)\n        throw new Error(\"TLV 0 should be 32 bytes\");\n      if (tlv[2] && tlv[2][0].length !== 32)\n        throw new Error(\"TLV 2 should be 32 bytes\");\n      if (tlv[3] && tlv[3][0].length !== 4)\n        throw new Error(\"TLV 3 should be 4 bytes\");\n      return {\n        type: \"nevent\",\n        data: {\n          id: bytesToHex2(tlv[0][0]),\n          relays: tlv[1] ? tlv[1].map((d) => utf8Decoder.decode(d)) : [],\n          author: tlv[2]?.[0] ? bytesToHex2(tlv[2][0]) : void 0,\n          kind: tlv[3]?.[0] ? parseInt(bytesToHex2(tlv[3][0]), 16) : void 0\n        }\n      };\n    }\n    case \"naddr\": {\n      let tlv = parseTLV(data);\n      if (!tlv[0]?.[0])\n        throw new Error(\"missing TLV 0 for naddr\");\n      if (!tlv[2]?.[0])\n        throw new Error(\"missing TLV 2 for naddr\");\n      if (tlv[2][0].length !== 32)\n        throw new Error(\"TLV 2 should be 32 bytes\");\n      if (!tlv[3]?.[0])\n        throw new Error(\"missing TLV 3 for naddr\");\n      if (tlv[3][0].length !== 4)\n        throw new Error(\"TLV 3 should be 4 bytes\");\n      return {\n        type: \"naddr\",\n        data: {\n          identifier: utf8Decoder.decode(tlv[0][0]),\n          pubkey: bytesToHex2(tlv[2][0]),\n          kind: parseInt(bytesToHex2(tlv[3][0]), 16),\n          relays: tlv[1] ? tlv[1].map((d) => utf8Decoder.decode(d)) : []\n        }\n      };\n    }\n    case \"nsec\":\n      return { type: prefix, data };\n    case \"npub\":\n    case \"note\":\n      return { type: prefix, data: bytesToHex2(data) };\n    default:\n      throw new Error(`unknown prefix ${prefix}`);\n  }\n}\nfunction parseTLV(data) {\n  let result = {};\n  let rest = data;\n  while (rest.length > 0) {\n    let t = rest[0];\n    let l = rest[1];\n    let v = rest.slice(2, 2 + l);\n    rest = rest.slice(2 + l);\n    if (v.length < l)\n      throw new Error(`not enough data to read on TLV ${t}`);\n    result[t] = result[t] || [];\n    result[t].push(v);\n  }\n  return result;\n}\nfunction nsecEncode(key) {\n  return encodeBytes(\"nsec\", key);\n}\nfunction npubEncode(hex) {\n  return encodeBytes(\"npub\", hexToBytes(hex));\n}\nfunction noteEncode(hex) {\n  return encodeBytes(\"note\", hexToBytes(hex));\n}\nfunction encodeBech32(prefix, data) {\n  let words = bech32.toWords(data);\n  return bech32.encode(prefix, words, Bech32MaxSize);\n}\nfunction encodeBytes(prefix, bytes) {\n  return encodeBech32(prefix, bytes);\n}\nfunction nprofileEncode(profile) {\n  let data = encodeTLV({\n    0: [hexToBytes(profile.pubkey)],\n    1: (profile.relays || []).map((url) => utf8Encoder.encode(url))\n  });\n  return encodeBech32(\"nprofile\", data);\n}\nfunction neventEncode(event) {\n  let kindArray;\n  if (event.kind !== void 0) {\n    kindArray = integerToUint8Array(event.kind);\n  }\n  let data = encodeTLV({\n    0: [hexToBytes(event.id)],\n    1: (event.relays || []).map((url) => utf8Encoder.encode(url)),\n    2: event.author ? [hexToBytes(event.author)] : [],\n    3: kindArray ? [new Uint8Array(kindArray)] : []\n  });\n  return encodeBech32(\"nevent\", data);\n}\nfunction naddrEncode(addr) {\n  let kind = new ArrayBuffer(4);\n  new DataView(kind).setUint32(0, addr.kind, false);\n  let data = encodeTLV({\n    0: [utf8Encoder.encode(addr.identifier)],\n    1: (addr.relays || []).map((url) => utf8Encoder.encode(url)),\n    2: [hexToBytes(addr.pubkey)],\n    3: [new Uint8Array(kind)]\n  });\n  return encodeBech32(\"naddr\", data);\n}\nfunction encodeTLV(tlv) {\n  let entries = [];\n  Object.entries(tlv).reverse().forEach(([t, vs]) => {\n    vs.forEach((v) => {\n      let entry = new Uint8Array(v.length + 2);\n      entry.set([parseInt(t)], 0);\n      entry.set([v.length], 1);\n      entry.set(v, 2);\n      entries.push(entry);\n    });\n  });\n  return concatBytes(...entries);\n}\n\n// references.ts\nvar mentionRegex = /\\bnostr:((note|npub|naddr|nevent|nprofile)1\\w+)\\b|#\\[(\\d+)\\]/g;\nfunction parseReferences(evt) {\n  let references = [];\n  for (let ref of evt.content.matchAll(mentionRegex)) {\n    if (ref[2]) {\n      try {\n        let { type, data } = decode(ref[1]);\n        switch (type) {\n          case \"npub\": {\n            references.push({\n              text: ref[0],\n              profile: { pubkey: data, relays: [] }\n            });\n            break;\n          }\n          case \"nprofile\": {\n            references.push({\n              text: ref[0],\n              profile: data\n            });\n            break;\n          }\n          case \"note\": {\n            references.push({\n              text: ref[0],\n              event: { id: data, relays: [] }\n            });\n            break;\n          }\n          case \"nevent\": {\n            references.push({\n              text: ref[0],\n              event: data\n            });\n            break;\n          }\n          case \"naddr\": {\n            references.push({\n              text: ref[0],\n              address: data\n            });\n            break;\n          }\n        }\n      } catch (err) {\n      }\n    } else if (ref[3]) {\n      let idx = parseInt(ref[3], 10);\n      let tag = evt.tags[idx];\n      if (!tag)\n        continue;\n      switch (tag[0]) {\n        case \"p\": {\n          references.push({\n            text: ref[0],\n            profile: { pubkey: tag[1], relays: tag[2] ? [tag[2]] : [] }\n          });\n          break;\n        }\n        case \"e\": {\n          references.push({\n            text: ref[0],\n            event: { id: tag[1], relays: tag[2] ? [tag[2]] : [] }\n          });\n          break;\n        }\n        case \"a\": {\n          try {\n            let [kind, pubkey, identifier] = tag[1].split(\":\");\n            references.push({\n              text: ref[0],\n              address: {\n                identifier,\n                pubkey,\n                kind: parseInt(kind, 10),\n                relays: tag[2] ? [tag[2]] : []\n              }\n            });\n          } catch (err) {\n          }\n          break;\n        }\n      }\n    }\n  }\n  return references;\n}\n\n// nip04.ts\nvar nip04_exports = {};\n__export(nip04_exports, {\n  decrypt: () => decrypt,\n  encrypt: () => encrypt\n});\nimport { bytesToHex as bytesToHex3, randomBytes } from \"@noble/hashes/utils\";\nimport { secp256k1 } from \"@noble/curves/secp256k1\";\nimport { cbc } from \"@noble/ciphers/aes\";\nimport { base64 } from \"@scure/base\";\nasync function encrypt(secretKey, pubkey, text) {\n  const privkey = secretKey instanceof Uint8Array ? bytesToHex3(secretKey) : secretKey;\n  const key = secp256k1.getSharedSecret(privkey, \"02\" + pubkey);\n  const normalizedKey = getNormalizedX(key);\n  let iv = Uint8Array.from(randomBytes(16));\n  let plaintext = utf8Encoder.encode(text);\n  let ciphertext = cbc(normalizedKey, iv).encrypt(plaintext);\n  let ctb64 = base64.encode(new Uint8Array(ciphertext));\n  let ivb64 = base64.encode(new Uint8Array(iv.buffer));\n  return `${ctb64}?iv=${ivb64}`;\n}\nasync function decrypt(secretKey, pubkey, data) {\n  const privkey = secretKey instanceof Uint8Array ? bytesToHex3(secretKey) : secretKey;\n  let [ctb64, ivb64] = data.split(\"?iv=\");\n  let key = secp256k1.getSharedSecret(privkey, \"02\" + pubkey);\n  let normalizedKey = getNormalizedX(key);\n  let iv = base64.decode(ivb64);\n  let ciphertext = base64.decode(ctb64);\n  let plaintext = cbc(normalizedKey, iv).decrypt(ciphertext);\n  return utf8Decoder.decode(plaintext);\n}\nfunction getNormalizedX(key) {\n  return key.slice(1, 33);\n}\n\n// nip05.ts\nvar nip05_exports = {};\n__export(nip05_exports, {\n  NIP05_REGEX: () => NIP05_REGEX,\n  isNip05: () => isNip05,\n  isValid: () => isValid,\n  queryProfile: () => queryProfile,\n  searchDomain: () => searchDomain,\n  useFetchImplementation: () => useFetchImplementation\n});\nvar NIP05_REGEX = /^(?:([\\w.+-]+)@)?([\\w_-]+(\\.[\\w_-]+)+)$/;\nvar isNip05 = (value) => NIP05_REGEX.test(value || \"\");\nvar _fetch;\ntry {\n  _fetch = fetch;\n} catch (_) {\n  null;\n}\nfunction useFetchImplementation(fetchImplementation) {\n  _fetch = fetchImplementation;\n}\nasync function searchDomain(domain, query = \"\") {\n  try {\n    const url = `https://${domain}/.well-known/nostr.json?name=${query}`;\n    const res = await _fetch(url, { redirect: \"manual\" });\n    if (res.status !== 200) {\n      throw Error(\"Wrong response code\");\n    }\n    const json = await res.json();\n    return json.names;\n  } catch (_) {\n    return {};\n  }\n}\nasync function queryProfile(fullname) {\n  const match = fullname.match(NIP05_REGEX);\n  if (!match)\n    return null;\n  const [, name = \"_\", domain] = match;\n  try {\n    const url = `https://${domain}/.well-known/nostr.json?name=${name}`;\n    const res = await _fetch(url, { redirect: \"manual\" });\n    if (res.status !== 200) {\n      throw Error(\"Wrong response code\");\n    }\n    const json = await res.json();\n    const pubkey = json.names[name];\n    return pubkey ? { pubkey, relays: json.relays?.[pubkey] } : null;\n  } catch (_e) {\n    return null;\n  }\n}\nasync function isValid(pubkey, nip05) {\n  const res = await queryProfile(nip05);\n  return res ? res.pubkey === pubkey : false;\n}\n\n// nip10.ts\nvar nip10_exports = {};\n__export(nip10_exports, {\n  parse: () => parse\n});\nfunction parse(event) {\n  const result = {\n    reply: void 0,\n    root: void 0,\n    mentions: [],\n    profiles: [],\n    quotes: []\n  };\n  let maybeParent;\n  let maybeRoot;\n  for (let i2 = event.tags.length - 1; i2 >= 0; i2--) {\n    const tag = event.tags[i2];\n    if (tag[0] === \"e\" && tag[1]) {\n      const [_, eTagEventId, eTagRelayUrl, eTagMarker, eTagAuthor] = tag;\n      const eventPointer = {\n        id: eTagEventId,\n        relays: eTagRelayUrl ? [eTagRelayUrl] : [],\n        author: eTagAuthor\n      };\n      if (eTagMarker === \"root\") {\n        result.root = eventPointer;\n        continue;\n      }\n      if (eTagMarker === \"reply\") {\n        result.reply = eventPointer;\n        continue;\n      }\n      if (eTagMarker === \"mention\") {\n        result.mentions.push(eventPointer);\n        continue;\n      }\n      if (!maybeParent) {\n        maybeParent = eventPointer;\n      } else {\n        maybeRoot = eventPointer;\n      }\n      result.mentions.push(eventPointer);\n      continue;\n    }\n    if (tag[0] === \"q\" && tag[1]) {\n      const [_, eTagEventId, eTagRelayUrl] = tag;\n      result.quotes.push({\n        id: eTagEventId,\n        relays: eTagRelayUrl ? [eTagRelayUrl] : []\n      });\n    }\n    if (tag[0] === \"p\" && tag[1]) {\n      result.profiles.push({\n        pubkey: tag[1],\n        relays: tag[2] ? [tag[2]] : []\n      });\n      continue;\n    }\n  }\n  if (!result.root) {\n    result.root = maybeRoot || maybeParent || result.reply;\n  }\n  if (!result.reply) {\n    result.reply = maybeParent || result.root;\n  }\n  ;\n  [result.reply, result.root].forEach((ref) => {\n    if (!ref)\n      return;\n    let idx = result.mentions.indexOf(ref);\n    if (idx !== -1) {\n      result.mentions.splice(idx, 1);\n    }\n    if (ref.author) {\n      let author = result.profiles.find((p) => p.pubkey === ref.author);\n      if (author && author.relays) {\n        if (!ref.relays) {\n          ref.relays = [];\n        }\n        author.relays.forEach((url) => {\n          if (ref.relays?.indexOf(url) === -1)\n            ref.relays.push(url);\n        });\n        author.relays = ref.relays;\n      }\n    }\n  });\n  result.mentions.forEach((ref) => {\n    if (ref.author) {\n      let author = result.profiles.find((p) => p.pubkey === ref.author);\n      if (author && author.relays) {\n        if (!ref.relays) {\n          ref.relays = [];\n        }\n        author.relays.forEach((url) => {\n          if (ref.relays.indexOf(url) === -1)\n            ref.relays.push(url);\n        });\n        author.relays = ref.relays;\n      }\n    }\n  });\n  return result;\n}\n\n// nip11.ts\nvar nip11_exports = {};\n__export(nip11_exports, {\n  fetchRelayInformation: () => fetchRelayInformation,\n  useFetchImplementation: () => useFetchImplementation2\n});\nvar _fetch2;\ntry {\n  _fetch2 = fetch;\n} catch {\n}\nfunction useFetchImplementation2(fetchImplementation) {\n  _fetch2 = fetchImplementation;\n}\nasync function fetchRelayInformation(url) {\n  return await (await fetch(url.replace(\"ws://\", \"http://\").replace(\"wss://\", \"https://\"), {\n    headers: { Accept: \"application/nostr+json\" }\n  })).json();\n}\n\n// nip13.ts\nvar nip13_exports = {};\n__export(nip13_exports, {\n  fastEventHash: () => fastEventHash,\n  getPow: () => getPow,\n  minePow: () => minePow\n});\nimport { bytesToHex as bytesToHex4 } from \"@noble/hashes/utils\";\nimport { sha256 as sha2562 } from \"@noble/hashes/sha256\";\nfunction getPow(hex) {\n  let count = 0;\n  for (let i2 = 0; i2 < 64; i2 += 8) {\n    const nibble = parseInt(hex.substring(i2, i2 + 8), 16);\n    if (nibble === 0) {\n      count += 32;\n    } else {\n      count += Math.clz32(nibble);\n      break;\n    }\n  }\n  return count;\n}\nfunction minePow(unsigned, difficulty) {\n  let count = 0;\n  const event = unsigned;\n  const tag = [\"nonce\", count.toString(), difficulty.toString()];\n  event.tags.push(tag);\n  while (true) {\n    const now2 = Math.floor(new Date().getTime() / 1e3);\n    if (now2 !== event.created_at) {\n      count = 0;\n      event.created_at = now2;\n    }\n    tag[1] = (++count).toString();\n    event.id = fastEventHash(event);\n    if (getPow(event.id) >= difficulty) {\n      break;\n    }\n  }\n  return event;\n}\nfunction fastEventHash(evt) {\n  return bytesToHex4(\n    sha2562(utf8Encoder.encode(JSON.stringify([0, evt.pubkey, evt.created_at, evt.kind, evt.tags, evt.content])))\n  );\n}\n\n// nip18.ts\nvar nip18_exports = {};\n__export(nip18_exports, {\n  finishRepostEvent: () => finishRepostEvent,\n  getRepostedEvent: () => getRepostedEvent,\n  getRepostedEventPointer: () => getRepostedEventPointer\n});\nfunction finishRepostEvent(t, reposted, relayUrl, privateKey) {\n  return finalizeEvent(\n    {\n      kind: Repost,\n      tags: [...t.tags ?? [], [\"e\", reposted.id, relayUrl], [\"p\", reposted.pubkey]],\n      content: t.content === \"\" ? \"\" : JSON.stringify(reposted),\n      created_at: t.created_at\n    },\n    privateKey\n  );\n}\nfunction getRepostedEventPointer(event) {\n  if (event.kind !== Repost) {\n    return void 0;\n  }\n  let lastETag;\n  let lastPTag;\n  for (let i2 = event.tags.length - 1; i2 >= 0 && (lastETag === void 0 || lastPTag === void 0); i2--) {\n    const tag = event.tags[i2];\n    if (tag.length >= 2) {\n      if (tag[0] === \"e\" && lastETag === void 0) {\n        lastETag = tag;\n      } else if (tag[0] === \"p\" && lastPTag === void 0) {\n        lastPTag = tag;\n      }\n    }\n  }\n  if (lastETag === void 0) {\n    return void 0;\n  }\n  return {\n    id: lastETag[1],\n    relays: [lastETag[2], lastPTag?.[2]].filter((x) => typeof x === \"string\"),\n    author: lastPTag?.[1]\n  };\n}\nfunction getRepostedEvent(event, { skipVerification } = {}) {\n  const pointer = getRepostedEventPointer(event);\n  if (pointer === void 0 || event.content === \"\") {\n    return void 0;\n  }\n  let repostedEvent;\n  try {\n    repostedEvent = JSON.parse(event.content);\n  } catch (error) {\n    return void 0;\n  }\n  if (repostedEvent.id !== pointer.id) {\n    return void 0;\n  }\n  if (!skipVerification && !verifyEvent(repostedEvent)) {\n    return void 0;\n  }\n  return repostedEvent;\n}\n\n// nip21.ts\nvar nip21_exports = {};\n__export(nip21_exports, {\n  NOSTR_URI_REGEX: () => NOSTR_URI_REGEX,\n  parse: () => parse2,\n  test: () => test\n});\nvar NOSTR_URI_REGEX = new RegExp(`nostr:(${BECH32_REGEX.source})`);\nfunction test(value) {\n  return typeof value === \"string\" && new RegExp(`^${NOSTR_URI_REGEX.source}$`).test(value);\n}\nfunction parse2(uri) {\n  const match = uri.match(new RegExp(`^${NOSTR_URI_REGEX.source}$`));\n  if (!match)\n    throw new Error(`Invalid Nostr URI: ${uri}`);\n  return {\n    uri: match[0],\n    value: match[1],\n    decoded: decode(match[1])\n  };\n}\n\n// nip25.ts\nvar nip25_exports = {};\n__export(nip25_exports, {\n  finishReactionEvent: () => finishReactionEvent,\n  getReactedEventPointer: () => getReactedEventPointer\n});\nfunction finishReactionEvent(t, reacted, privateKey) {\n  const inheritedTags = reacted.tags.filter((tag) => tag.length >= 2 && (tag[0] === \"e\" || tag[0] === \"p\"));\n  return finalizeEvent(\n    {\n      ...t,\n      kind: Reaction,\n      tags: [...t.tags ?? [], ...inheritedTags, [\"e\", reacted.id], [\"p\", reacted.pubkey]],\n      content: t.content ?? \"+\"\n    },\n    privateKey\n  );\n}\nfunction getReactedEventPointer(event) {\n  if (event.kind !== Reaction) {\n    return void 0;\n  }\n  let lastETag;\n  let lastPTag;\n  for (let i2 = event.tags.length - 1; i2 >= 0 && (lastETag === void 0 || lastPTag === void 0); i2--) {\n    const tag = event.tags[i2];\n    if (tag.length >= 2) {\n      if (tag[0] === \"e\" && lastETag === void 0) {\n        lastETag = tag;\n      } else if (tag[0] === \"p\" && lastPTag === void 0) {\n        lastPTag = tag;\n      }\n    }\n  }\n  if (lastETag === void 0 || lastPTag === void 0) {\n    return void 0;\n  }\n  return {\n    id: lastETag[1],\n    relays: [lastETag[2], lastPTag[2]].filter((x) => x !== void 0),\n    author: lastPTag[1]\n  };\n}\n\n// nip27.ts\nvar nip27_exports = {};\n__export(nip27_exports, {\n  matchAll: () => matchAll,\n  regex: () => regex,\n  replaceAll: () => replaceAll\n});\nvar regex = () => new RegExp(`\\\\b${NOSTR_URI_REGEX.source}\\\\b`, \"g\");\nfunction* matchAll(content) {\n  const matches = content.matchAll(regex());\n  for (const match of matches) {\n    try {\n      const [uri, value] = match;\n      yield {\n        uri,\n        value,\n        decoded: decode(value),\n        start: match.index,\n        end: match.index + uri.length\n      };\n    } catch (_e) {\n    }\n  }\n}\nfunction replaceAll(content, replacer) {\n  return content.replaceAll(regex(), (uri, value) => {\n    return replacer({\n      uri,\n      value,\n      decoded: decode(value)\n    });\n  });\n}\n\n// nip28.ts\nvar nip28_exports = {};\n__export(nip28_exports, {\n  channelCreateEvent: () => channelCreateEvent,\n  channelHideMessageEvent: () => channelHideMessageEvent,\n  channelMessageEvent: () => channelMessageEvent,\n  channelMetadataEvent: () => channelMetadataEvent,\n  channelMuteUserEvent: () => channelMuteUserEvent\n});\nvar channelCreateEvent = (t, privateKey) => {\n  let content;\n  if (typeof t.content === \"object\") {\n    content = JSON.stringify(t.content);\n  } else if (typeof t.content === \"string\") {\n    content = t.content;\n  } else {\n    return void 0;\n  }\n  return finalizeEvent(\n    {\n      kind: ChannelCreation,\n      tags: [...t.tags ?? []],\n      content,\n      created_at: t.created_at\n    },\n    privateKey\n  );\n};\nvar channelMetadataEvent = (t, privateKey) => {\n  let content;\n  if (typeof t.content === \"object\") {\n    content = JSON.stringify(t.content);\n  } else if (typeof t.content === \"string\") {\n    content = t.content;\n  } else {\n    return void 0;\n  }\n  return finalizeEvent(\n    {\n      kind: ChannelMetadata,\n      tags: [[\"e\", t.channel_create_event_id], ...t.tags ?? []],\n      content,\n      created_at: t.created_at\n    },\n    privateKey\n  );\n};\nvar channelMessageEvent = (t, privateKey) => {\n  const tags = [[\"e\", t.channel_create_event_id, t.relay_url, \"root\"]];\n  if (t.reply_to_channel_message_event_id) {\n    tags.push([\"e\", t.reply_to_channel_message_event_id, t.relay_url, \"reply\"]);\n  }\n  return finalizeEvent(\n    {\n      kind: ChannelMessage,\n      tags: [...tags, ...t.tags ?? []],\n      content: t.content,\n      created_at: t.created_at\n    },\n    privateKey\n  );\n};\nvar channelHideMessageEvent = (t, privateKey) => {\n  let content;\n  if (typeof t.content === \"object\") {\n    content = JSON.stringify(t.content);\n  } else if (typeof t.content === \"string\") {\n    content = t.content;\n  } else {\n    return void 0;\n  }\n  return finalizeEvent(\n    {\n      kind: ChannelHideMessage,\n      tags: [[\"e\", t.channel_message_event_id], ...t.tags ?? []],\n      content,\n      created_at: t.created_at\n    },\n    privateKey\n  );\n};\nvar channelMuteUserEvent = (t, privateKey) => {\n  let content;\n  if (typeof t.content === \"object\") {\n    content = JSON.stringify(t.content);\n  } else if (typeof t.content === \"string\") {\n    content = t.content;\n  } else {\n    return void 0;\n  }\n  return finalizeEvent(\n    {\n      kind: ChannelMuteUser,\n      tags: [[\"p\", t.pubkey_to_mute], ...t.tags ?? []],\n      content,\n      created_at: t.created_at\n    },\n    privateKey\n  );\n};\n\n// nip30.ts\nvar nip30_exports = {};\n__export(nip30_exports, {\n  EMOJI_SHORTCODE_REGEX: () => EMOJI_SHORTCODE_REGEX,\n  matchAll: () => matchAll2,\n  regex: () => regex2,\n  replaceAll: () => replaceAll2\n});\nvar EMOJI_SHORTCODE_REGEX = /:(\\w+):/;\nvar regex2 = () => new RegExp(`\\\\B${EMOJI_SHORTCODE_REGEX.source}\\\\B`, \"g\");\nfunction* matchAll2(content) {\n  const matches = content.matchAll(regex2());\n  for (const match of matches) {\n    try {\n      const [shortcode, name] = match;\n      yield {\n        shortcode,\n        name,\n        start: match.index,\n        end: match.index + shortcode.length\n      };\n    } catch (_e) {\n    }\n  }\n}\nfunction replaceAll2(content, replacer) {\n  return content.replaceAll(regex2(), (shortcode, name) => {\n    return replacer({\n      shortcode,\n      name\n    });\n  });\n}\n\n// nip39.ts\nvar nip39_exports = {};\n__export(nip39_exports, {\n  useFetchImplementation: () => useFetchImplementation3,\n  validateGithub: () => validateGithub\n});\nvar _fetch3;\ntry {\n  _fetch3 = fetch;\n} catch {\n}\nfunction useFetchImplementation3(fetchImplementation) {\n  _fetch3 = fetchImplementation;\n}\nasync function validateGithub(pubkey, username, proof) {\n  try {\n    let res = await (await _fetch3(`https://gist.github.com/${username}/${proof}/raw`)).text();\n    return res === `Verifying that I control the following Nostr public key: ${pubkey}`;\n  } catch (_) {\n    return false;\n  }\n}\n\n// nip44.ts\nvar nip44_exports = {};\n__export(nip44_exports, {\n  decrypt: () => decrypt2,\n  encrypt: () => encrypt2,\n  getConversationKey: () => getConversationKey,\n  v2: () => v2\n});\nimport { chacha20 } from \"@noble/ciphers/chacha\";\nimport { equalBytes } from \"@noble/ciphers/utils\";\nimport { secp256k1 as secp256k12 } from \"@noble/curves/secp256k1\";\nimport { extract as hkdf_extract, expand as hkdf_expand } from \"@noble/hashes/hkdf\";\nimport { hmac } from \"@noble/hashes/hmac\";\nimport { sha256 as sha2563 } from \"@noble/hashes/sha256\";\nimport { concatBytes as concatBytes2, randomBytes as randomBytes2 } from \"@noble/hashes/utils\";\nimport { base64 as base642 } from \"@scure/base\";\nvar minPlaintextSize = 1;\nvar maxPlaintextSize = 65535;\nfunction getConversationKey(privkeyA, pubkeyB) {\n  const sharedX = secp256k12.getSharedSecret(privkeyA, \"02\" + pubkeyB).subarray(1, 33);\n  return hkdf_extract(sha2563, sharedX, \"nip44-v2\");\n}\nfunction getMessageKeys(conversationKey, nonce) {\n  const keys = hkdf_expand(sha2563, conversationKey, nonce, 76);\n  return {\n    chacha_key: keys.subarray(0, 32),\n    chacha_nonce: keys.subarray(32, 44),\n    hmac_key: keys.subarray(44, 76)\n  };\n}\nfunction calcPaddedLen(len) {\n  if (!Number.isSafeInteger(len) || len < 1)\n    throw new Error(\"expected positive integer\");\n  if (len <= 32)\n    return 32;\n  const nextPower = 1 << Math.floor(Math.log2(len - 1)) + 1;\n  const chunk = nextPower <= 256 ? 32 : nextPower / 8;\n  return chunk * (Math.floor((len - 1) / chunk) + 1);\n}\nfunction writeU16BE(num) {\n  if (!Number.isSafeInteger(num) || num < minPlaintextSize || num > maxPlaintextSize)\n    throw new Error(\"invalid plaintext size: must be between 1 and 65535 bytes\");\n  const arr = new Uint8Array(2);\n  new DataView(arr.buffer).setUint16(0, num, false);\n  return arr;\n}\nfunction pad(plaintext) {\n  const unpadded = utf8Encoder.encode(plaintext);\n  const unpaddedLen = unpadded.length;\n  const prefix = writeU16BE(unpaddedLen);\n  const suffix = new Uint8Array(calcPaddedLen(unpaddedLen) - unpaddedLen);\n  return concatBytes2(prefix, unpadded, suffix);\n}\nfunction unpad(padded) {\n  const unpaddedLen = new DataView(padded.buffer).getUint16(0);\n  const unpadded = padded.subarray(2, 2 + unpaddedLen);\n  if (unpaddedLen < minPlaintextSize || unpaddedLen > maxPlaintextSize || unpadded.length !== unpaddedLen || padded.length !== 2 + calcPaddedLen(unpaddedLen))\n    throw new Error(\"invalid padding\");\n  return utf8Decoder.decode(unpadded);\n}\nfunction hmacAad(key, message, aad) {\n  if (aad.length !== 32)\n    throw new Error(\"AAD associated data must be 32 bytes\");\n  const combined = concatBytes2(aad, message);\n  return hmac(sha2563, key, combined);\n}\nfunction decodePayload(payload) {\n  if (typeof payload !== \"string\")\n    throw new Error(\"payload must be a valid string\");\n  const plen = payload.length;\n  if (plen < 132 || plen > 87472)\n    throw new Error(\"invalid payload length: \" + plen);\n  if (payload[0] === \"#\")\n    throw new Error(\"unknown encryption version\");\n  let data;\n  try {\n    data = base642.decode(payload);\n  } catch (error) {\n    throw new Error(\"invalid base64: \" + error.message);\n  }\n  const dlen = data.length;\n  if (dlen < 99 || dlen > 65603)\n    throw new Error(\"invalid data length: \" + dlen);\n  const vers = data[0];\n  if (vers !== 2)\n    throw new Error(\"unknown encryption version \" + vers);\n  return {\n    nonce: data.subarray(1, 33),\n    ciphertext: data.subarray(33, -32),\n    mac: data.subarray(-32)\n  };\n}\nfunction encrypt2(plaintext, conversationKey, nonce = randomBytes2(32)) {\n  const { chacha_key, chacha_nonce, hmac_key } = getMessageKeys(conversationKey, nonce);\n  const padded = pad(plaintext);\n  const ciphertext = chacha20(chacha_key, chacha_nonce, padded);\n  const mac = hmacAad(hmac_key, ciphertext, nonce);\n  return base642.encode(concatBytes2(new Uint8Array([2]), nonce, ciphertext, mac));\n}\nfunction decrypt2(payload, conversationKey) {\n  const { nonce, ciphertext, mac } = decodePayload(payload);\n  const { chacha_key, chacha_nonce, hmac_key } = getMessageKeys(conversationKey, nonce);\n  const calculatedMac = hmacAad(hmac_key, ciphertext, nonce);\n  if (!equalBytes(calculatedMac, mac))\n    throw new Error(\"invalid MAC\");\n  const padded = chacha20(chacha_key, chacha_nonce, ciphertext);\n  return unpad(padded);\n}\nvar v2 = {\n  utils: {\n    getConversationKey,\n    calcPaddedLen\n  },\n  encrypt: encrypt2,\n  decrypt: decrypt2\n};\n\n// nip47.ts\nvar nip47_exports = {};\n__export(nip47_exports, {\n  makeNwcRequestEvent: () => makeNwcRequestEvent,\n  parseConnectionString: () => parseConnectionString\n});\nfunction parseConnectionString(connectionString) {\n  const { pathname, searchParams } = new URL(connectionString);\n  const pubkey = pathname;\n  const relay = searchParams.get(\"relay\");\n  const secret = searchParams.get(\"secret\");\n  if (!pubkey || !relay || !secret) {\n    throw new Error(\"invalid connection string\");\n  }\n  return { pubkey, relay, secret };\n}\nasync function makeNwcRequestEvent(pubkey, secretKey, invoice) {\n  const content = {\n    method: \"pay_invoice\",\n    params: {\n      invoice\n    }\n  };\n  const encryptedContent = await encrypt(secretKey, pubkey, JSON.stringify(content));\n  const eventTemplate = {\n    kind: NWCWalletRequest,\n    created_at: Math.round(Date.now() / 1e3),\n    content: encryptedContent,\n    tags: [[\"p\", pubkey]]\n  };\n  return finalizeEvent(eventTemplate, secretKey);\n}\n\n// nip57.ts\nvar nip57_exports = {};\n__export(nip57_exports, {\n  getZapEndpoint: () => getZapEndpoint,\n  makeZapReceipt: () => makeZapReceipt,\n  makeZapRequest: () => makeZapRequest,\n  useFetchImplementation: () => useFetchImplementation4,\n  validateZapRequest: () => validateZapRequest\n});\nimport { bech32 as bech322 } from \"@scure/base\";\nvar _fetch4;\ntry {\n  _fetch4 = fetch;\n} catch {\n}\nfunction useFetchImplementation4(fetchImplementation) {\n  _fetch4 = fetchImplementation;\n}\nasync function getZapEndpoint(metadata) {\n  try {\n    let lnurl = \"\";\n    let { lud06, lud16 } = JSON.parse(metadata.content);\n    if (lud06) {\n      let { words } = bech322.decode(lud06, 1e3);\n      let data = bech322.fromWords(words);\n      lnurl = utf8Decoder.decode(data);\n    } else if (lud16) {\n      let [name, domain] = lud16.split(\"@\");\n      lnurl = new URL(`/.well-known/lnurlp/${name}`, `https://${domain}`).toString();\n    } else {\n      return null;\n    }\n    let res = await _fetch4(lnurl);\n    let body = await res.json();\n    if (body.allowsNostr && body.nostrPubkey) {\n      return body.callback;\n    }\n  } catch (err) {\n  }\n  return null;\n}\nfunction makeZapRequest({\n  profile,\n  event,\n  amount,\n  relays,\n  comment = \"\"\n}) {\n  if (!amount)\n    throw new Error(\"amount not given\");\n  if (!profile)\n    throw new Error(\"profile not given\");\n  let zr = {\n    kind: 9734,\n    created_at: Math.round(Date.now() / 1e3),\n    content: comment,\n    tags: [\n      [\"p\", profile],\n      [\"amount\", amount.toString()],\n      [\"relays\", ...relays]\n    ]\n  };\n  if (event) {\n    zr.tags.push([\"e\", event]);\n  }\n  return zr;\n}\nfunction validateZapRequest(zapRequestString) {\n  let zapRequest;\n  try {\n    zapRequest = JSON.parse(zapRequestString);\n  } catch (err) {\n    return \"Invalid zap request JSON.\";\n  }\n  if (!validateEvent(zapRequest))\n    return \"Zap request is not a valid Nostr event.\";\n  if (!verifyEvent(zapRequest))\n    return \"Invalid signature on zap request.\";\n  let p = zapRequest.tags.find(([t, v]) => t === \"p\" && v);\n  if (!p)\n    return \"Zap request doesn't have a 'p' tag.\";\n  if (!p[1].match(/^[a-f0-9]{64}$/))\n    return \"Zap request 'p' tag is not valid hex.\";\n  let e = zapRequest.tags.find(([t, v]) => t === \"e\" && v);\n  if (e && !e[1].match(/^[a-f0-9]{64}$/))\n    return \"Zap request 'e' tag is not valid hex.\";\n  let relays = zapRequest.tags.find(([t, v]) => t === \"relays\" && v);\n  if (!relays)\n    return \"Zap request doesn't have a 'relays' tag.\";\n  return null;\n}\nfunction makeZapReceipt({\n  zapRequest,\n  preimage,\n  bolt11,\n  paidAt\n}) {\n  let zr = JSON.parse(zapRequest);\n  let tagsFromZapRequest = zr.tags.filter(([t]) => t === \"e\" || t === \"p\" || t === \"a\");\n  let zap = {\n    kind: 9735,\n    created_at: Math.round(paidAt.getTime() / 1e3),\n    content: \"\",\n    tags: [...tagsFromZapRequest, [\"P\", zr.pubkey], [\"bolt11\", bolt11], [\"description\", zapRequest]]\n  };\n  if (preimage) {\n    zap.tags.push([\"preimage\", preimage]);\n  }\n  return zap;\n}\n\n// nip59.ts\nvar nip59_exports = {};\n__export(nip59_exports, {\n  createRumor: () => createRumor,\n  createSeal: () => createSeal,\n  createWrap: () => createWrap,\n  unwrapEvent: () => unwrapEvent,\n  unwrapManyEvents: () => unwrapManyEvents,\n  wrapEvent: () => wrapEvent,\n  wrapManyEvents: () => wrapManyEvents\n});\nvar TWO_DAYS = 2 * 24 * 60 * 60;\nvar now = () => Math.round(Date.now() / 1e3);\nvar randomNow = () => Math.round(now() - Math.random() * TWO_DAYS);\nvar nip44ConversationKey = (privateKey, publicKey) => getConversationKey(privateKey, publicKey);\nvar nip44Encrypt = (data, privateKey, publicKey) => encrypt2(JSON.stringify(data), nip44ConversationKey(privateKey, publicKey));\nvar nip44Decrypt = (data, privateKey) => JSON.parse(decrypt2(data.content, nip44ConversationKey(privateKey, data.pubkey)));\nfunction createRumor(event, privateKey) {\n  const rumor = {\n    created_at: now(),\n    content: \"\",\n    tags: [],\n    ...event,\n    pubkey: getPublicKey(privateKey)\n  };\n  rumor.id = getEventHash(rumor);\n  return rumor;\n}\nfunction createSeal(rumor, privateKey, recipientPublicKey) {\n  return finalizeEvent(\n    {\n      kind: Seal,\n      content: nip44Encrypt(rumor, privateKey, recipientPublicKey),\n      created_at: randomNow(),\n      tags: []\n    },\n    privateKey\n  );\n}\nfunction createWrap(seal, recipientPublicKey) {\n  const randomKey = generateSecretKey();\n  return finalizeEvent(\n    {\n      kind: GiftWrap,\n      content: nip44Encrypt(seal, randomKey, recipientPublicKey),\n      created_at: randomNow(),\n      tags: [[\"p\", recipientPublicKey]]\n    },\n    randomKey\n  );\n}\nfunction wrapEvent(event, senderPrivateKey, recipientPublicKey) {\n  const rumor = createRumor(event, senderPrivateKey);\n  const seal = createSeal(rumor, senderPrivateKey, recipientPublicKey);\n  return createWrap(seal, recipientPublicKey);\n}\nfunction wrapManyEvents(event, senderPrivateKey, recipientsPublicKeys) {\n  if (!recipientsPublicKeys || recipientsPublicKeys.length === 0) {\n    throw new Error(\"At least one recipient is required.\");\n  }\n  const senderPublicKey = getPublicKey(senderPrivateKey);\n  const wrappeds = [wrapEvent(event, senderPrivateKey, senderPublicKey)];\n  recipientsPublicKeys.forEach((recipientPublicKey) => {\n    wrappeds.push(wrapEvent(event, senderPrivateKey, recipientPublicKey));\n  });\n  return wrappeds;\n}\nfunction unwrapEvent(wrap, recipientPrivateKey) {\n  const unwrappedSeal = nip44Decrypt(wrap, recipientPrivateKey);\n  return nip44Decrypt(unwrappedSeal, recipientPrivateKey);\n}\nfunction unwrapManyEvents(wrappedEvents, recipientPrivateKey) {\n  let unwrappedEvents = [];\n  wrappedEvents.forEach((e) => {\n    unwrappedEvents.push(unwrapEvent(e, recipientPrivateKey));\n  });\n  unwrappedEvents.sort((a, b) => a.created_at - b.created_at);\n  return unwrappedEvents;\n}\n\n// nip98.ts\nvar nip98_exports = {};\n__export(nip98_exports, {\n  getToken: () => getToken,\n  hashPayload: () => hashPayload,\n  unpackEventFromToken: () => unpackEventFromToken,\n  validateEvent: () => validateEvent2,\n  validateEventKind: () => validateEventKind,\n  validateEventMethodTag: () => validateEventMethodTag,\n  validateEventPayloadTag: () => validateEventPayloadTag,\n  validateEventTimestamp: () => validateEventTimestamp,\n  validateEventUrlTag: () => validateEventUrlTag,\n  validateToken: () => validateToken\n});\nimport { sha256 as sha2564 } from \"@noble/hashes/sha256\";\nimport { bytesToHex as bytesToHex5 } from \"@noble/hashes/utils\";\nimport { base64 as base643 } from \"@scure/base\";\nvar _authorizationScheme = \"Nostr \";\nasync function getToken(loginUrl, httpMethod, sign, includeAuthorizationScheme = false, payload) {\n  const event = {\n    kind: HTTPAuth,\n    tags: [\n      [\"u\", loginUrl],\n      [\"method\", httpMethod]\n    ],\n    created_at: Math.round(new Date().getTime() / 1e3),\n    content: \"\"\n  };\n  if (payload) {\n    event.tags.push([\"payload\", hashPayload(payload)]);\n  }\n  const signedEvent = await sign(event);\n  const authorizationScheme = includeAuthorizationScheme ? _authorizationScheme : \"\";\n  return authorizationScheme + base643.encode(utf8Encoder.encode(JSON.stringify(signedEvent)));\n}\nasync function validateToken(token, url, method) {\n  const event = await unpackEventFromToken(token).catch((error) => {\n    throw error;\n  });\n  const valid = await validateEvent2(event, url, method).catch((error) => {\n    throw error;\n  });\n  return valid;\n}\nasync function unpackEventFromToken(token) {\n  if (!token) {\n    throw new Error(\"Missing token\");\n  }\n  token = token.replace(_authorizationScheme, \"\");\n  const eventB64 = utf8Decoder.decode(base643.decode(token));\n  if (!eventB64 || eventB64.length === 0 || !eventB64.startsWith(\"{\")) {\n    throw new Error(\"Invalid token\");\n  }\n  const event = JSON.parse(eventB64);\n  return event;\n}\nfunction validateEventTimestamp(event) {\n  if (!event.created_at) {\n    return false;\n  }\n  return Math.round(new Date().getTime() / 1e3) - event.created_at < 60;\n}\nfunction validateEventKind(event) {\n  return event.kind === HTTPAuth;\n}\nfunction validateEventUrlTag(event, url) {\n  const urlTag = event.tags.find((t) => t[0] === \"u\");\n  if (!urlTag) {\n    return false;\n  }\n  return urlTag.length > 0 && urlTag[1] === url;\n}\nfunction validateEventMethodTag(event, method) {\n  const methodTag = event.tags.find((t) => t[0] === \"method\");\n  if (!methodTag) {\n    return false;\n  }\n  return methodTag.length > 0 && methodTag[1].toLowerCase() === method.toLowerCase();\n}\nfunction hashPayload(payload) {\n  const hash = sha2564(utf8Encoder.encode(JSON.stringify(payload)));\n  return bytesToHex5(hash);\n}\nfunction validateEventPayloadTag(event, payload) {\n  const payloadTag = event.tags.find((t) => t[0] === \"payload\");\n  if (!payloadTag) {\n    return false;\n  }\n  const payloadHash = hashPayload(payload);\n  return payloadTag.length > 0 && payloadTag[1] === payloadHash;\n}\nasync function validateEvent2(event, url, method, body) {\n  if (!verifyEvent(event)) {\n    throw new Error(\"Invalid nostr event, signature invalid\");\n  }\n  if (!validateEventKind(event)) {\n    throw new Error(\"Invalid nostr event, kind invalid\");\n  }\n  if (!validateEventTimestamp(event)) {\n    throw new Error(\"Invalid nostr event, created_at timestamp invalid\");\n  }\n  if (!validateEventUrlTag(event, url)) {\n    throw new Error(\"Invalid nostr event, url tag invalid\");\n  }\n  if (!validateEventMethodTag(event, method)) {\n    throw new Error(\"Invalid nostr event, method tag invalid\");\n  }\n  if (Boolean(body) && typeof body === \"object\" && Object.keys(body).length > 0) {\n    if (!validateEventPayloadTag(event, body)) {\n      throw new Error(\"Invalid nostr event, payload tag does not match request body hash\");\n    }\n  }\n  return true;\n}\nexport {\n  Relay,\n  SimplePool,\n  finalizeEvent,\n  fakejson_exports as fj,\n  generateSecretKey,\n  getEventHash,\n  getFilterLimit,\n  getPublicKey,\n  kinds_exports as kinds,\n  matchFilter,\n  matchFilters,\n  mergeFilters,\n  nip04_exports as nip04,\n  nip05_exports as nip05,\n  nip10_exports as nip10,\n  nip11_exports as nip11,\n  nip13_exports as nip13,\n  nip18_exports as nip18,\n  nip19_exports as nip19,\n  nip21_exports as nip21,\n  nip25_exports as nip25,\n  nip27_exports as nip27,\n  nip28_exports as nip28,\n  nip30_exports as nip30,\n  nip39_exports as nip39,\n  nip42_exports as nip42,\n  nip44_exports as nip44,\n  nip47_exports as nip47,\n  nip57_exports as nip57,\n  nip59_exports as nip59,\n  nip98_exports as nip98,\n  parseReferences,\n  serializeEvent,\n  sortEvents,\n  utils_exports as utils,\n  validateEvent,\n  verifiedSymbol,\n  verifyEvent\n};\n","/**\n * Assertion helpers\n * @module\n */\nfunction anumber(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error('positive integer expected, got ' + n);\n}\n// copied from utils\nfunction isBytes(a) {\n    return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\nfunction abytes(b, ...lengths) {\n    if (!isBytes(b))\n        throw new Error('Uint8Array expected');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error('Uint8Array expected of length ' + lengths + ', got length=' + b.length);\n}\nfunction ahash(h) {\n    if (typeof h !== 'function' || typeof h.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    anumber(h.outputLen);\n    anumber(h.blockLen);\n}\nfunction aexists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nfunction aoutput(out, instance) {\n    abytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error('digestInto() expects output buffer of length at least ' + min);\n    }\n}\nexport { anumber, abytes, ahash, aexists, aoutput };\n//# sourceMappingURL=_assert.js.map","export const crypto = typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n//# sourceMappingURL=crypto.js.map","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n/**\n * Utilities for hex, bytes, CSPRNG.\n * @module\n */\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\nimport { abytes } from './_assert.js';\n// export { isBytes } from './_assert.js';\n// We can't reuse isBytes from _assert, because somehow this causes huge perf issues\nexport function isBytes(a) {\n    return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n/** The rotate right (circular right shift) operation for uint32 */\nexport const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\n/** The rotate left (circular left shift) operation for uint32 */\nexport const rotl = (word, shift) => (word << shift) | ((word >>> (32 - shift)) >>> 0);\n/** Is current platform little-endian? Most are. Big-Endian platform: IBM */\nexport const isLE = /* @__PURE__ */ (() => new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44)();\n// The byte swap operation for uint32\nexport const byteSwap = (word) => ((word << 24) & 0xff000000) |\n    ((word << 8) & 0xff0000) |\n    ((word >>> 8) & 0xff00) |\n    ((word >>> 24) & 0xff);\n/** Conditionally byte swap if on a big-endian platform */\nexport const byteSwapIfBE = isLE\n    ? (n) => n\n    : (n) => byteSwap(n);\n/** In place byte swap for Uint32Array */\nexport function byteSwap32(arr) {\n    for (let i = 0; i < arr.length; i++) {\n        arr[i] = byteSwap(arr[i]);\n    }\n}\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * Convert byte array to hex string.\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    abytes(bytes);\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 };\nfunction asciiToBase16(ch) {\n    if (ch >= asciis._0 && ch <= asciis._9)\n        return ch - asciis._0; // '2' => 50-48\n    if (ch >= asciis.A && ch <= asciis.F)\n        return ch - (asciis.A - 10); // 'B' => 66-(65-10)\n    if (ch >= asciis.a && ch <= asciis.f)\n        return ch - (asciis.a - 10); // 'b' => 98-(97-10)\n    return;\n}\n/**\n * Convert hex string to byte array.\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2; // multiply first octet, e.g. 'a3' => 10*16+3 => 160 + 3 => 163\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\n/**\n * Convert JS string to byte array.\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error('utf8ToBytes expected string, got ' + typeof str);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    abytes(data);\n    return data;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        abytes(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\n// For runtime check if class implements interface\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && {}.toString.call(opts) !== '[object Object]')\n        throw new Error('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexport function wrapConstructor(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexport function wrapXOFConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto && typeof crypto.getRandomValues === 'function') {\n        return crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    // Legacy Node.js compatibility\n    if (crypto && typeof crypto.randomBytes === 'function') {\n        return crypto.randomBytes(bytesLength);\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n//# sourceMappingURL=utils.js.map","import { aexists, aoutput } from './_assert.js';\nimport { Hash, createView, toBytes } from './utils.js';\n/**\n * Merkle-Damgard hash utils.\n * @module\n */\n/**\n * Polyfill for Safari 14\n */\nexport function setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n/**\n * Choice: a ? b : c\n */\nexport const Chi = (a, b, c) => (a & b) ^ (~a & c);\n/**\n * Majority function, true if any two inputs is true\n */\nexport const Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n/**\n * Merkle-Damgard hash construction base class.\n * Could be used to create MD5, RIPEMD, SHA1, SHA2.\n */\nexport class HashMD extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        aexists(this);\n        const { view, buffer, blockLen } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        aexists(this);\n        aoutput(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in\n        // current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n//# sourceMappingURL=_md.js.map","import { HashMD, Chi, Maj } from './_md.js';\nimport { rotr, wrapConstructor } from './utils.js';\n/**\n * SHA2-256 a.k.a. sha256. In JS, it is the fastest hash, even faster than Blake3.\n *\n * To break sha256 using birthday attack, attackers need to try 2^128 hashes.\n * BTC network is doing 2^70 hashes/sec (2^95 hashes/year) as per 2025.\n *\n * Check out [FIPS 180-4](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf).\n * @module\n */\n/** Round constants: first 32 bits of fractional parts of the cube roots of the first 64 primes 2..311). */\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n/** Initial state: first 32 bits of fractional parts of the square roots of the first 8 primes 2..19. */\n// prettier-ignore\nconst SHA256_IV = /* @__PURE__ */ new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n/**\n * Temporary buffer, not used to store anything between runs.\n * Named this way because it matches specification.\n */\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nexport class SHA256 extends HashMD {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = SHA256_IV[0] | 0;\n        this.B = SHA256_IV[1] | 0;\n        this.C = SHA256_IV[2] | 0;\n        this.D = SHA256_IV[3] | 0;\n        this.E = SHA256_IV[4] | 0;\n        this.F = SHA256_IV[5] | 0;\n        this.G = SHA256_IV[6] | 0;\n        this.H = SHA256_IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n/**\n * Constants taken from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf.\n */\nclass SHA224 extends SHA256 {\n    constructor() {\n        super();\n        this.A = 0xc1059ed8 | 0;\n        this.B = 0x367cd507 | 0;\n        this.C = 0x3070dd17 | 0;\n        this.D = 0xf70e5939 | 0;\n        this.E = 0xffc00b31 | 0;\n        this.F = 0x68581511 | 0;\n        this.G = 0x64f98fa7 | 0;\n        this.H = 0xbefa4fa4 | 0;\n        this.outputLen = 28;\n    }\n}\n/** SHA2-256 hash function */\nexport const sha256 = /* @__PURE__ */ wrapConstructor(() => new SHA256());\n/** SHA2-224 hash function */\nexport const sha224 = /* @__PURE__ */ wrapConstructor(() => new SHA224());\n//# sourceMappingURL=sha256.js.map","import { ahash, abytes, aexists } from './_assert.js';\nimport { Hash, toBytes } from './utils.js';\n/**\n * HMAC: RFC2104 message authentication code.\n * @module\n */\nexport class HMAC extends Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        ahash(hash);\n        const key = toBytes(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new Error('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        aexists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        aexists(this);\n        abytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n * @example\n * import { hmac } from '@noble/hashes/hmac';\n * import { sha256 } from '@noble/hashes/sha2';\n * const mac1 = hmac(sha256, 'key', 'message');\n */\nexport const hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nhmac.create = (hash, key) => new HMAC(hash, key);\n//# sourceMappingURL=hmac.js.map","/**\n * Hex, bytes and number utilities.\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// 100 lines of code in the file are duplicated from noble-hashes (utils).\n// This is OK: `abstract` directory does not use noble-hashes.\n// User may opt-in into using different hashing library. This way, noble-hashes\n// won't be included into their bundle.\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\nexport function isBytes(a) {\n    return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\nexport function abytes(item) {\n    if (!isBytes(item))\n        throw new Error('Uint8Array expected');\n}\nexport function abool(title, value) {\n    if (typeof value !== 'boolean')\n        throw new Error(title + ' boolean expected, got ' + value);\n}\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    abytes(bytes);\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\nexport function numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? '0' + hex : hex;\n}\nexport function hexToNumber(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    return hex === '' ? _0n : BigInt('0x' + hex); // Big Endian\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 };\nfunction asciiToBase16(ch) {\n    if (ch >= asciis._0 && ch <= asciis._9)\n        return ch - asciis._0; // '2' => 50-48\n    if (ch >= asciis.A && ch <= asciis.F)\n        return ch - (asciis.A - 10); // 'B' => 66-(65-10)\n    if (ch >= asciis.a && ch <= asciis.f)\n        return ch - (asciis.a - 10); // 'b' => 98-(97-10)\n    return;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2; // multiply first octet, e.g. 'a3' => 10*16+3 => 160 + 3 => 163\n    }\n    return array;\n}\n// BE: Big Endian, LE: Little Endian\nexport function bytesToNumberBE(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nexport function bytesToNumberLE(bytes) {\n    abytes(bytes);\n    return hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()));\n}\nexport function numberToBytesBE(n, len) {\n    return hexToBytes(n.toString(16).padStart(len * 2, '0'));\n}\nexport function numberToBytesLE(n, len) {\n    return numberToBytesBE(n, len).reverse();\n}\n// Unpadded, rarely used\nexport function numberToVarBytesBE(n) {\n    return hexToBytes(numberToHexUnpadded(n));\n}\n/**\n * Takes hex string or Uint8Array, converts to Uint8Array.\n * Validates output length.\n * Will throw error for other types.\n * @param title descriptive title for an error e.g. 'private key'\n * @param hex hex string or Uint8Array\n * @param expectedLength optional, will compare to result array's length\n * @returns\n */\nexport function ensureBytes(title, hex, expectedLength) {\n    let res;\n    if (typeof hex === 'string') {\n        try {\n            res = hexToBytes(hex);\n        }\n        catch (e) {\n            throw new Error(title + ' must be hex string or Uint8Array, cause: ' + e);\n        }\n    }\n    else if (isBytes(hex)) {\n        // Uint8Array.from() instead of hash.slice() because node.js Buffer\n        // is instance of Uint8Array, and its slice() creates **mutable** copy\n        res = Uint8Array.from(hex);\n    }\n    else {\n        throw new Error(title + ' must be hex string or Uint8Array');\n    }\n    const len = res.length;\n    if (typeof expectedLength === 'number' && len !== expectedLength)\n        throw new Error(title + ' of length ' + expectedLength + ' expected, got ' + len);\n    return res;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        abytes(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\n// Compares 2 u8a-s in kinda constant time\nexport function equalBytes(a, b) {\n    if (a.length !== b.length)\n        return false;\n    let diff = 0;\n    for (let i = 0; i < a.length; i++)\n        diff |= a[i] ^ b[i];\n    return diff === 0;\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error('string expected');\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n// Is positive bigint\nconst isPosBig = (n) => typeof n === 'bigint' && _0n <= n;\nexport function inRange(n, min, max) {\n    return isPosBig(n) && isPosBig(min) && isPosBig(max) && min <= n && n < max;\n}\n/**\n * Asserts min <= n < max. NOTE: It's < max and not <= max.\n * @example\n * aInRange('x', x, 1n, 256n); // would assume x is in (1n..255n)\n */\nexport function aInRange(title, n, min, max) {\n    // Why min <= n < max and not a (min < n < max) OR b (min <= n <= max)?\n    // consider P=256n, min=0n, max=P\n    // - a for min=0 would require -1:          `inRange('x', x, -1n, P)`\n    // - b would commonly require subtraction:  `inRange('x', x, 0n, P - 1n)`\n    // - our way is the cleanest:               `inRange('x', x, 0n, P)\n    if (!inRange(n, min, max))\n        throw new Error('expected valid ' + title + ': ' + min + ' <= n < ' + max + ', got ' + n);\n}\n// Bit operations\n/**\n * Calculates amount of bits in a bigint.\n * Same as `n.toString(2).length`\n */\nexport function bitLen(n) {\n    let len;\n    for (len = 0; n > _0n; n >>= _1n, len += 1)\n        ;\n    return len;\n}\n/**\n * Gets single bit at position.\n * NOTE: first bit position is 0 (same as arrays)\n * Same as `!!+Array.from(n.toString(2)).reverse()[pos]`\n */\nexport function bitGet(n, pos) {\n    return (n >> BigInt(pos)) & _1n;\n}\n/**\n * Sets single bit at position.\n */\nexport function bitSet(n, pos, value) {\n    return n | ((value ? _1n : _0n) << BigInt(pos));\n}\n/**\n * Calculate mask for N bits. Not using ** operator with bigints because of old engines.\n * Same as BigInt(`0b${Array(i).fill('1').join('')}`)\n */\nexport const bitMask = (n) => (_2n << BigInt(n - 1)) - _1n;\n// DRBG\nconst u8n = (data) => new Uint8Array(data); // creates Uint8Array\nconst u8fr = (arr) => Uint8Array.from(arr); // another shortcut\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nexport function createHmacDrbg(hashLen, qByteLen, hmacFn) {\n    if (typeof hashLen !== 'number' || hashLen < 2)\n        throw new Error('hashLen must be a number');\n    if (typeof qByteLen !== 'number' || qByteLen < 2)\n        throw new Error('qByteLen must be a number');\n    if (typeof hmacFn !== 'function')\n        throw new Error('hmacFn must be a function');\n    // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n    let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n    let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n    let i = 0; // Iterations counter, will throw when over 1000\n    const reset = () => {\n        v.fill(1);\n        k.fill(0);\n        i = 0;\n    };\n    const h = (...b) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)\n    const reseed = (seed = u8n()) => {\n        // HMAC-DRBG reseed() function. Steps D-G\n        k = h(u8fr([0x00]), seed); // k = hmac(k || v || 0x00 || seed)\n        v = h(); // v = hmac(k || v)\n        if (seed.length === 0)\n            return;\n        k = h(u8fr([0x01]), seed); // k = hmac(k || v || 0x01 || seed)\n        v = h(); // v = hmac(k || v)\n    };\n    const gen = () => {\n        // HMAC-DRBG generate() function\n        if (i++ >= 1000)\n            throw new Error('drbg: tried 1000 values');\n        let len = 0;\n        const out = [];\n        while (len < qByteLen) {\n            v = h();\n            const sl = v.slice();\n            out.push(sl);\n            len += v.length;\n        }\n        return concatBytes(...out);\n    };\n    const genUntil = (seed, pred) => {\n        reset();\n        reseed(seed); // Steps D-G\n        let res = undefined; // Step H: grind until k is in [1..n-1]\n        while (!(res = pred(gen())))\n            reseed();\n        reset();\n        return res;\n    };\n    return genUntil;\n}\n// Validating curves and fields\nconst validatorFns = {\n    bigint: (val) => typeof val === 'bigint',\n    function: (val) => typeof val === 'function',\n    boolean: (val) => typeof val === 'boolean',\n    string: (val) => typeof val === 'string',\n    stringOrUint8Array: (val) => typeof val === 'string' || isBytes(val),\n    isSafeInteger: (val) => Number.isSafeInteger(val),\n    array: (val) => Array.isArray(val),\n    field: (val, object) => object.Fp.isValid(val),\n    hash: (val) => typeof val === 'function' && Number.isSafeInteger(val.outputLen),\n};\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\nexport function validateObject(object, validators, optValidators = {}) {\n    const checkField = (fieldName, type, isOptional) => {\n        const checkVal = validatorFns[type];\n        if (typeof checkVal !== 'function')\n            throw new Error('invalid validator function');\n        const val = object[fieldName];\n        if (isOptional && val === undefined)\n            return;\n        if (!checkVal(val, object)) {\n            throw new Error('param ' + String(fieldName) + ' is invalid. Expected ' + type + ', got ' + val);\n        }\n    };\n    for (const [fieldName, type] of Object.entries(validators))\n        checkField(fieldName, type, false);\n    for (const [fieldName, type] of Object.entries(optValidators))\n        checkField(fieldName, type, true);\n    return object;\n}\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });\n/**\n * throws not implemented error\n */\nexport const notImplemented = () => {\n    throw new Error('not implemented');\n};\n/**\n * Memoizes (caches) computation result.\n * Uses WeakMap: the value is going auto-cleaned by GC after last reference is removed.\n */\nexport function memoized(fn) {\n    const map = new WeakMap();\n    return (arg, ...args) => {\n        const val = map.get(arg);\n        if (val !== undefined)\n            return val;\n        const computed = fn(arg, ...args);\n        map.set(arg, computed);\n        return computed;\n    };\n}\n//# sourceMappingURL=utils.js.map","/**\n * Utils for modular division and finite fields.\n * A finite field over 11 is integer number operations `mod 11`.\n * There is no division: it is replaced by modular multiplicative inverse.\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { bitMask, bytesToNumberBE, bytesToNumberLE, ensureBytes, numberToBytesBE, numberToBytesLE, validateObject, } from './utils.js';\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = /* @__PURE__ */ BigInt(2), _3n = /* @__PURE__ */ BigInt(3);\n// prettier-ignore\nconst _4n = /* @__PURE__ */ BigInt(4), _5n = /* @__PURE__ */ BigInt(5), _8n = /* @__PURE__ */ BigInt(8);\n// prettier-ignore\nconst _9n = /* @__PURE__ */ BigInt(9), _16n = /* @__PURE__ */ BigInt(16);\n// Calculates a modulo b\nexport function mod(a, b) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\n/**\n * Efficiently raise num to power and do modular division.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n * @todo use field version && remove\n * @example\n * pow(2n, 6n, 11n) // 64n % 11n == 9n\n */\nexport function pow(num, power, modulo) {\n    if (power < _0n)\n        throw new Error('invalid exponent, negatives unsupported');\n    if (modulo <= _0n)\n        throw new Error('invalid modulus');\n    if (modulo === _1n)\n        return _0n;\n    let res = _1n;\n    while (power > _0n) {\n        if (power & _1n)\n            res = (res * num) % modulo;\n        num = (num * num) % modulo;\n        power >>= _1n;\n    }\n    return res;\n}\n/** Does `x^(2^power)` mod p. `pow2(30, 4)` == `30^(2^4)` */\nexport function pow2(x, power, modulo) {\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= modulo;\n    }\n    return res;\n}\n/**\n * Inverses number over modulo.\n * Implemented using [Euclidean GCD](https://brilliant.org/wiki/extended-euclidean-algorithm/).\n */\nexport function invert(number, modulo) {\n    if (number === _0n)\n        throw new Error('invert: expected non-zero number');\n    if (modulo <= _0n)\n        throw new Error('invert: expected positive modulus, got ' + modulo);\n    // Fermat's little theorem \"CT-like\" version inv(n) = n^(m-2) mod m is 30x slower.\n    let a = mod(number, modulo);\n    let b = modulo;\n    // prettier-ignore\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        // JIT applies optimization if those two lines follow each other\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        // prettier-ignore\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\n/**\n * Tonelli-Shanks square root search algorithm.\n * 1. https://eprint.iacr.org/2012/685.pdf (page 12)\n * 2. Square Roots from 1; 24, 51, 10 to Dan Shanks\n * Will start an infinite loop if field order P is not prime.\n * @param P field order\n * @returns function that takes field Fp (created from P) and number n\n */\nexport function tonelliShanks(P) {\n    // Legendre constant: used to calculate Legendre symbol (a | p),\n    // which denotes the value of a^((p-1)/2) (mod p).\n    // (a | p) ≡ 1    if a is a square (mod p)\n    // (a | p) ≡ -1   if a is not a square (mod p)\n    // (a | p) ≡ 0    if a ≡ 0 (mod p)\n    const legendreC = (P - _1n) / _2n;\n    let Q, S, Z;\n    // Step 1: By factoring out powers of 2 from p - 1,\n    // find q and s such that p - 1 = q*(2^s) with q odd\n    for (Q = P - _1n, S = 0; Q % _2n === _0n; Q /= _2n, S++)\n        ;\n    // Step 2: Select a non-square z such that (z | p) ≡ -1 and set c ≡ zq\n    for (Z = _2n; Z < P && pow(Z, legendreC, P) !== P - _1n; Z++) {\n        // Crash instead of infinity loop, we cannot reasonable count until P.\n        if (Z > 1000)\n            throw new Error('Cannot find square root: likely non-prime P');\n    }\n    // Fast-path\n    if (S === 1) {\n        const p1div4 = (P + _1n) / _4n;\n        return function tonelliFast(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Slow-path\n    const Q1div2 = (Q + _1n) / _2n;\n    return function tonelliSlow(Fp, n) {\n        // Step 0: Check that n is indeed a square: (n | p) should not be ≡ -1\n        if (Fp.pow(n, legendreC) === Fp.neg(Fp.ONE))\n            throw new Error('Cannot find square root');\n        let r = S;\n        // TODO: will fail at Fp2/etc\n        let g = Fp.pow(Fp.mul(Fp.ONE, Z), Q); // will update both x and b\n        let x = Fp.pow(n, Q1div2); // first guess at the square root\n        let b = Fp.pow(n, Q); // first guess at the fudge factor\n        while (!Fp.eql(b, Fp.ONE)) {\n            if (Fp.eql(b, Fp.ZERO))\n                return Fp.ZERO; // https://en.wikipedia.org/wiki/Tonelli%E2%80%93Shanks_algorithm (4. If t = 0, return r = 0)\n            // Find m such b^(2^m)==1\n            let m = 1;\n            for (let t2 = Fp.sqr(b); m < r; m++) {\n                if (Fp.eql(t2, Fp.ONE))\n                    break;\n                t2 = Fp.sqr(t2); // t2 *= t2\n            }\n            // NOTE: r-m-1 can be bigger than 32, need to convert to bigint before shift, otherwise there will be overflow\n            const ge = Fp.pow(g, _1n << BigInt(r - m - 1)); // ge = 2^(r-m-1)\n            g = Fp.sqr(ge); // g = ge * ge\n            x = Fp.mul(x, ge); // x *= ge\n            b = Fp.mul(b, g); // b *= g\n            r = m;\n        }\n        return x;\n    };\n}\n/**\n * Square root for a finite field. It will try to check if optimizations are applicable and fall back to 4:\n *\n * 1. P ≡ 3 (mod 4)\n * 2. P ≡ 5 (mod 8)\n * 3. P ≡ 9 (mod 16)\n * 4. Tonelli-Shanks algorithm\n *\n * Different algorithms can give different roots, it is up to user to decide which one they want.\n * For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).\n */\nexport function FpSqrt(P) {\n    // P ≡ 3 (mod 4)\n    // √n = n^((P+1)/4)\n    if (P % _4n === _3n) {\n        // Not all roots possible!\n        // const ORDER =\n        //   0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaabn;\n        // const NUM = 72057594037927816n;\n        const p1div4 = (P + _1n) / _4n;\n        return function sqrt3mod4(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            // Throw if root**2 != n\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Atkin algorithm for q ≡ 5 (mod 8), https://eprint.iacr.org/2012/685.pdf (page 10)\n    if (P % _8n === _5n) {\n        const c1 = (P - _5n) / _8n;\n        return function sqrt5mod8(Fp, n) {\n            const n2 = Fp.mul(n, _2n);\n            const v = Fp.pow(n2, c1);\n            const nv = Fp.mul(n, v);\n            const i = Fp.mul(Fp.mul(nv, _2n), v);\n            const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // P ≡ 9 (mod 16)\n    if (P % _16n === _9n) {\n        // NOTE: tonelli is too slow for bls-Fp2 calculations even on start\n        // Means we cannot use sqrt for constants at all!\n        //\n        // const c1 = Fp.sqrt(Fp.negate(Fp.ONE)); //  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F\n        // const c2 = Fp.sqrt(c1);                //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F\n        // const c3 = Fp.sqrt(Fp.negate(c1));     //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F\n        // const c4 = (P + _7n) / _16n;           //  4. c4 = (q + 7) / 16        # Integer arithmetic\n        // sqrt = (x) => {\n        //   let tv1 = Fp.pow(x, c4);             //  1. tv1 = x^c4\n        //   let tv2 = Fp.mul(c1, tv1);           //  2. tv2 = c1 * tv1\n        //   const tv3 = Fp.mul(c2, tv1);         //  3. tv3 = c2 * tv1\n        //   let tv4 = Fp.mul(c3, tv1);           //  4. tv4 = c3 * tv1\n        //   const e1 = Fp.equals(Fp.square(tv2), x); //  5.  e1 = (tv2^2) == x\n        //   const e2 = Fp.equals(Fp.square(tv3), x); //  6.  e2 = (tv3^2) == x\n        //   tv1 = Fp.cmov(tv1, tv2, e1); //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x\n        //   tv2 = Fp.cmov(tv4, tv3, e2); //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x\n        //   const e3 = Fp.equals(Fp.square(tv2), x); //  9.  e3 = (tv2^2) == x\n        //   return Fp.cmov(tv1, tv2, e3); //  10.  z = CMOV(tv1, tv2, e3)  # Select the sqrt from tv1 and tv2\n        // }\n    }\n    // Other cases: Tonelli-Shanks algorithm\n    return tonelliShanks(P);\n}\n// Little-endian check for first LE bit (last BE bit);\nexport const isNegativeLE = (num, modulo) => (mod(num, modulo) & _1n) === _1n;\n// prettier-ignore\nconst FIELD_FIELDS = [\n    'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',\n    'eql', 'add', 'sub', 'mul', 'pow', 'div',\n    'addN', 'subN', 'mulN', 'sqrN'\n];\nexport function validateField(field) {\n    const initial = {\n        ORDER: 'bigint',\n        MASK: 'bigint',\n        BYTES: 'isSafeInteger',\n        BITS: 'isSafeInteger',\n    };\n    const opts = FIELD_FIELDS.reduce((map, val) => {\n        map[val] = 'function';\n        return map;\n    }, initial);\n    return validateObject(field, opts);\n}\n// Generic field functions\n/**\n * Same as `pow` but for Fp: non-constant-time.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n */\nexport function FpPow(f, num, power) {\n    // Should have same speed as pow for bigints\n    // TODO: benchmark!\n    if (power < _0n)\n        throw new Error('invalid exponent, negatives unsupported');\n    if (power === _0n)\n        return f.ONE;\n    if (power === _1n)\n        return num;\n    let p = f.ONE;\n    let d = num;\n    while (power > _0n) {\n        if (power & _1n)\n            p = f.mul(p, d);\n        d = f.sqr(d);\n        power >>= _1n;\n    }\n    return p;\n}\n/**\n * Efficiently invert an array of Field elements.\n * `inv(0)` will return `undefined` here: make sure to throw an error.\n */\nexport function FpInvertBatch(f, nums) {\n    const tmp = new Array(nums.length);\n    // Walk from first to last, multiply them by each other MOD p\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = acc;\n        return f.mul(acc, num);\n    }, f.ONE);\n    // Invert last element\n    const inverted = f.inv(lastMultiplied);\n    // Walk from last to first, multiply them by inverted each other MOD p\n    nums.reduceRight((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = f.mul(acc, tmp[i]);\n        return f.mul(acc, num);\n    }, inverted);\n    return tmp;\n}\nexport function FpDiv(f, lhs, rhs) {\n    return f.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, f.ORDER) : f.inv(rhs));\n}\n/**\n * Legendre symbol.\n * * (a | p) ≡ 1    if a is a square (mod p), quadratic residue\n * * (a | p) ≡ -1   if a is not a square (mod p), quadratic non residue\n * * (a | p) ≡ 0    if a ≡ 0 (mod p)\n */\nexport function FpLegendre(order) {\n    const legendreConst = (order - _1n) / _2n; // Integer arithmetic\n    return (f, x) => f.pow(x, legendreConst);\n}\n// This function returns True whenever the value x is a square in the field F.\nexport function FpIsSquare(f) {\n    const legendre = FpLegendre(f.ORDER);\n    return (x) => {\n        const p = legendre(f, x);\n        return f.eql(p, f.ZERO) || f.eql(p, f.ONE);\n    };\n}\n// CURVE.n lengths\nexport function nLength(n, nBitLength) {\n    // Bit size, byte size of CURVE.n\n    const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;\n    const nByteLength = Math.ceil(_nBitLength / 8);\n    return { nBitLength: _nBitLength, nByteLength };\n}\n/**\n * Initializes a finite field over prime.\n * Major performance optimizations:\n * * a) denormalized operations like mulN instead of mul\n * * b) same object shape: never add or remove keys\n * * c) Object.freeze\n * Fragile: always run a benchmark on a change.\n * Security note: operations don't check 'isValid' for all elements for performance reasons,\n * it is caller responsibility to check this.\n * This is low-level code, please make sure you know what you're doing.\n * @param ORDER prime positive bigint\n * @param bitLen how many bits the field consumes\n * @param isLE (def: false) if encoding / decoding should be in little-endian\n * @param redef optional faster redefinitions of sqrt and other methods\n */\nexport function Field(ORDER, bitLen, isLE = false, redef = {}) {\n    if (ORDER <= _0n)\n        throw new Error('invalid field: expected ORDER > 0, got ' + ORDER);\n    const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, bitLen);\n    if (BYTES > 2048)\n        throw new Error('invalid field: expected ORDER of <= 2048 bytes');\n    let sqrtP; // cached sqrtP\n    const f = Object.freeze({\n        ORDER,\n        isLE,\n        BITS,\n        BYTES,\n        MASK: bitMask(BITS),\n        ZERO: _0n,\n        ONE: _1n,\n        create: (num) => mod(num, ORDER),\n        isValid: (num) => {\n            if (typeof num !== 'bigint')\n                throw new Error('invalid field element: expected bigint, got ' + typeof num);\n            return _0n <= num && num < ORDER; // 0 is valid element, but it's not invertible\n        },\n        is0: (num) => num === _0n,\n        isOdd: (num) => (num & _1n) === _1n,\n        neg: (num) => mod(-num, ORDER),\n        eql: (lhs, rhs) => lhs === rhs,\n        sqr: (num) => mod(num * num, ORDER),\n        add: (lhs, rhs) => mod(lhs + rhs, ORDER),\n        sub: (lhs, rhs) => mod(lhs - rhs, ORDER),\n        mul: (lhs, rhs) => mod(lhs * rhs, ORDER),\n        pow: (num, power) => FpPow(f, num, power),\n        div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),\n        // Same as above, but doesn't normalize\n        sqrN: (num) => num * num,\n        addN: (lhs, rhs) => lhs + rhs,\n        subN: (lhs, rhs) => lhs - rhs,\n        mulN: (lhs, rhs) => lhs * rhs,\n        inv: (num) => invert(num, ORDER),\n        sqrt: redef.sqrt ||\n            ((n) => {\n                if (!sqrtP)\n                    sqrtP = FpSqrt(ORDER);\n                return sqrtP(f, n);\n            }),\n        invertBatch: (lst) => FpInvertBatch(f, lst),\n        // TODO: do we really need constant cmov?\n        // We don't have const-time bigints anyway, so probably will be not very useful\n        cmov: (a, b, c) => (c ? b : a),\n        toBytes: (num) => (isLE ? numberToBytesLE(num, BYTES) : numberToBytesBE(num, BYTES)),\n        fromBytes: (bytes) => {\n            if (bytes.length !== BYTES)\n                throw new Error('Field.fromBytes: expected ' + BYTES + ' bytes, got ' + bytes.length);\n            return isLE ? bytesToNumberLE(bytes) : bytesToNumberBE(bytes);\n        },\n    });\n    return Object.freeze(f);\n}\nexport function FpSqrtOdd(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(\"Field doesn't have isOdd\");\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? root : Fp.neg(root);\n}\nexport function FpSqrtEven(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(\"Field doesn't have isOdd\");\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? Fp.neg(root) : root;\n}\n/**\n * \"Constant-time\" private key generation utility.\n * Same as mapKeyToField, but accepts less bytes (40 instead of 48 for 32-byte field).\n * Which makes it slightly more biased, less secure.\n * @deprecated use `mapKeyToField` instead\n */\nexport function hashToPrivateScalar(hash, groupOrder, isLE = false) {\n    hash = ensureBytes('privateHash', hash);\n    const hashLen = hash.length;\n    const minLen = nLength(groupOrder).nByteLength + 8;\n    if (minLen < 24 || hashLen < minLen || hashLen > 1024)\n        throw new Error('hashToPrivateScalar: expected ' + minLen + '-1024 bytes of input, got ' + hashLen);\n    const num = isLE ? bytesToNumberLE(hash) : bytesToNumberBE(hash);\n    return mod(num, groupOrder - _1n) + _1n;\n}\n/**\n * Returns total number of bytes consumed by the field element.\n * For example, 32 bytes for usual 256-bit weierstrass curve.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of field\n */\nexport function getFieldBytesLength(fieldOrder) {\n    if (typeof fieldOrder !== 'bigint')\n        throw new Error('field order must be bigint');\n    const bitLength = fieldOrder.toString(2).length;\n    return Math.ceil(bitLength / 8);\n}\n/**\n * Returns minimal amount of bytes that can be safely reduced\n * by field order.\n * Should be 2^-128 for 128-bit curve such as P256.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of target hash\n */\nexport function getMinHashLength(fieldOrder) {\n    const length = getFieldBytesLength(fieldOrder);\n    return length + Math.ceil(length / 2);\n}\n/**\n * \"Constant-time\" private key generation utility.\n * Can take (n + n/2) or more bytes of uniform input e.g. from CSPRNG or KDF\n * and convert them into private scalar, with the modulo bias being negligible.\n * Needs at least 48 bytes of input for 32-byte private key.\n * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/\n * FIPS 186-5, A.2 https://csrc.nist.gov/publications/detail/fips/186/5/final\n * RFC 9380, https://www.rfc-editor.org/rfc/rfc9380#section-5\n * @param hash hash output from SHA3 or a similar function\n * @param groupOrder size of subgroup - (e.g. secp256k1.CURVE.n)\n * @param isLE interpret hash bytes as LE num\n * @returns valid private scalar\n */\nexport function mapHashToField(key, fieldOrder, isLE = false) {\n    const len = key.length;\n    const fieldLen = getFieldBytesLength(fieldOrder);\n    const minLen = getMinHashLength(fieldOrder);\n    // No small numbers: need to understand bias story. No huge numbers: easier to detect JS timings.\n    if (len < 16 || len < minLen || len > 1024)\n        throw new Error('expected ' + minLen + '-1024 bytes of input, got ' + len);\n    const num = isLE ? bytesToNumberLE(key) : bytesToNumberBE(key);\n    // `mod(x, 11)` can sometimes produce 0. `mod(x, 10) + 1` is the same, but no 0\n    const reduced = mod(num, fieldOrder - _1n) + _1n;\n    return isLE ? numberToBytesLE(reduced, fieldLen) : numberToBytesBE(reduced, fieldLen);\n}\n//# sourceMappingURL=modular.js.map","/**\n * Methods for elliptic curve multiplication by scalars.\n * Contains wNAF, pippenger\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { validateField, nLength } from './modular.js';\nimport { validateObject, bitLen } from './utils.js';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nfunction constTimeNegate(condition, item) {\n    const neg = item.negate();\n    return condition ? neg : item;\n}\nfunction validateW(W, bits) {\n    if (!Number.isSafeInteger(W) || W <= 0 || W > bits)\n        throw new Error('invalid window size, expected [1..' + bits + '], got W=' + W);\n}\nfunction calcWOpts(W, bits) {\n    validateW(W, bits);\n    const windows = Math.ceil(bits / W) + 1; // +1, because\n    const windowSize = 2 ** (W - 1); // -1 because we skip zero\n    return { windows, windowSize };\n}\nfunction validateMSMPoints(points, c) {\n    if (!Array.isArray(points))\n        throw new Error('array expected');\n    points.forEach((p, i) => {\n        if (!(p instanceof c))\n            throw new Error('invalid point at index ' + i);\n    });\n}\nfunction validateMSMScalars(scalars, field) {\n    if (!Array.isArray(scalars))\n        throw new Error('array of scalars expected');\n    scalars.forEach((s, i) => {\n        if (!field.isValid(s))\n            throw new Error('invalid scalar at index ' + i);\n    });\n}\n// Since points in different groups cannot be equal (different object constructor),\n// we can have single place to store precomputes\nconst pointPrecomputes = new WeakMap();\nconst pointWindowSizes = new WeakMap(); // This allows use make points immutable (nothing changes inside)\nfunction getW(P) {\n    return pointWindowSizes.get(P) || 1;\n}\n/**\n * Elliptic curve multiplication of Point by scalar. Fragile.\n * Scalars should always be less than curve order: this should be checked inside of a curve itself.\n * Creates precomputation tables for fast multiplication:\n * - private scalar is split by fixed size windows of W bits\n * - every window point is collected from window's table & added to accumulator\n * - since windows are different, same point inside tables won't be accessed more than once per calc\n * - each multiplication is 'Math.ceil(CURVE_ORDER / 𝑊) + 1' point additions (fixed for any scalar)\n * - +1 window is neccessary for wNAF\n * - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication\n *\n * @todo Research returning 2d JS array of windows, instead of a single window.\n * This would allow windows to be in different memory locations\n */\nexport function wNAF(c, bits) {\n    return {\n        constTimeNegate,\n        hasPrecomputes(elm) {\n            return getW(elm) !== 1;\n        },\n        // non-const time multiplication ladder\n        unsafeLadder(elm, n, p = c.ZERO) {\n            let d = elm;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        },\n        /**\n         * Creates a wNAF precomputation window. Used for caching.\n         * Default window size is set by `utils.precompute()` and is equal to 8.\n         * Number of precomputed points depends on the curve size:\n         * 2^(𝑊−1) * (Math.ceil(𝑛 / 𝑊) + 1), where:\n         * - 𝑊 is the window size\n         * - 𝑛 is the bitlength of the curve order.\n         * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n         * @param elm Point instance\n         * @param W window size\n         * @returns precomputed point tables flattened to a single array\n         */\n        precomputeWindow(elm, W) {\n            const { windows, windowSize } = calcWOpts(W, bits);\n            const points = [];\n            let p = elm;\n            let base = p;\n            for (let window = 0; window < windows; window++) {\n                base = p;\n                points.push(base);\n                // =1, because we skip zero\n                for (let i = 1; i < windowSize; i++) {\n                    base = base.add(p);\n                    points.push(base);\n                }\n                p = base.double();\n            }\n            return points;\n        },\n        /**\n         * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n         * @param W window size\n         * @param precomputes precomputed tables\n         * @param n scalar (we don't check here, but should be less than curve order)\n         * @returns real and fake (for const-time) points\n         */\n        wNAF(W, precomputes, n) {\n            // TODO: maybe check that scalar is less than group order? wNAF behavious is undefined otherwise\n            // But need to carefully remove other checks before wNAF. ORDER == bits here\n            const { windows, windowSize } = calcWOpts(W, bits);\n            let p = c.ZERO;\n            let f = c.BASE;\n            const mask = BigInt(2 ** W - 1); // Create mask with W ones: 0b1111 for W=4 etc.\n            const maxNumber = 2 ** W;\n            const shiftBy = BigInt(W);\n            for (let window = 0; window < windows; window++) {\n                const offset = window * windowSize;\n                // Extract W bits.\n                let wbits = Number(n & mask);\n                // Shift number by W bits.\n                n >>= shiftBy;\n                // If the bits are bigger than max size, we'll split those.\n                // +224 => 256 - 32\n                if (wbits > windowSize) {\n                    wbits -= maxNumber;\n                    n += _1n;\n                }\n                // This code was first written with assumption that 'f' and 'p' will never be infinity point:\n                // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,\n                // there is negate now: it is possible that negated element from low value\n                // would be the same as high element, which will create carry into next window.\n                // It's not obvious how this can fail, but still worth investigating later.\n                // Check if we're onto Zero point.\n                // Add random point inside current window to f.\n                const offset1 = offset;\n                const offset2 = offset + Math.abs(wbits) - 1; // -1 because we skip zero\n                const cond1 = window % 2 !== 0;\n                const cond2 = wbits < 0;\n                if (wbits === 0) {\n                    // The most important part for const-time getPublicKey\n                    f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n                }\n                else {\n                    p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n                }\n            }\n            // JIT-compiler should not eliminate f here, since it will later be used in normalizeZ()\n            // Even if the variable is still unused, there are some checks which will\n            // throw an exception, so compiler needs to prove they won't happen, which is hard.\n            // At this point there is a way to F be infinity-point even if p is not,\n            // which makes it less const-time: around 1 bigint multiply.\n            return { p, f };\n        },\n        /**\n         * Implements ec unsafe (non const-time) multiplication using precomputed tables and w-ary non-adjacent form.\n         * @param W window size\n         * @param precomputes precomputed tables\n         * @param n scalar (we don't check here, but should be less than curve order)\n         * @param acc accumulator point to add result of multiplication\n         * @returns point\n         */\n        wNAFUnsafe(W, precomputes, n, acc = c.ZERO) {\n            const { windows, windowSize } = calcWOpts(W, bits);\n            const mask = BigInt(2 ** W - 1); // Create mask with W ones: 0b1111 for W=4 etc.\n            const maxNumber = 2 ** W;\n            const shiftBy = BigInt(W);\n            for (let window = 0; window < windows; window++) {\n                const offset = window * windowSize;\n                if (n === _0n)\n                    break; // No need to go over empty scalar\n                // Extract W bits.\n                let wbits = Number(n & mask);\n                // Shift number by W bits.\n                n >>= shiftBy;\n                // If the bits are bigger than max size, we'll split those.\n                // +224 => 256 - 32\n                if (wbits > windowSize) {\n                    wbits -= maxNumber;\n                    n += _1n;\n                }\n                if (wbits === 0)\n                    continue;\n                let curr = precomputes[offset + Math.abs(wbits) - 1]; // -1 because we skip zero\n                if (wbits < 0)\n                    curr = curr.negate();\n                // NOTE: by re-using acc, we can save a lot of additions in case of MSM\n                acc = acc.add(curr);\n            }\n            return acc;\n        },\n        getPrecomputes(W, P, transform) {\n            // Calculate precomputes on a first run, reuse them after\n            let comp = pointPrecomputes.get(P);\n            if (!comp) {\n                comp = this.precomputeWindow(P, W);\n                if (W !== 1)\n                    pointPrecomputes.set(P, transform(comp));\n            }\n            return comp;\n        },\n        wNAFCached(P, n, transform) {\n            const W = getW(P);\n            return this.wNAF(W, this.getPrecomputes(W, P, transform), n);\n        },\n        wNAFCachedUnsafe(P, n, transform, prev) {\n            const W = getW(P);\n            if (W === 1)\n                return this.unsafeLadder(P, n, prev); // For W=1 ladder is ~x2 faster\n            return this.wNAFUnsafe(W, this.getPrecomputes(W, P, transform), n, prev);\n        },\n        // We calculate precomputes for elliptic curve point multiplication\n        // using windowed method. This specifies window size and\n        // stores precomputed values. Usually only base point would be precomputed.\n        setWindowSize(P, W) {\n            validateW(W, bits);\n            pointWindowSizes.set(P, W);\n            pointPrecomputes.delete(P);\n        },\n    };\n}\n/**\n * Pippenger algorithm for multi-scalar multiplication (MSM, Pa + Qb + Rc + ...).\n * 30x faster vs naive addition on L=4096, 10x faster with precomputes.\n * For N=254bit, L=1, it does: 1024 ADD + 254 DBL. For L=5: 1536 ADD + 254 DBL.\n * Algorithmically constant-time (for same L), even when 1 point + scalar, or when scalar = 0.\n * @param c Curve Point constructor\n * @param fieldN field over CURVE.N - important that it's not over CURVE.P\n * @param points array of L curve points\n * @param scalars array of L scalars (aka private keys / bigints)\n */\nexport function pippenger(c, fieldN, points, scalars) {\n    // If we split scalars by some window (let's say 8 bits), every chunk will only\n    // take 256 buckets even if there are 4096 scalars, also re-uses double.\n    // TODO:\n    // - https://eprint.iacr.org/2024/750.pdf\n    // - https://tches.iacr.org/index.php/TCHES/article/view/10287\n    // 0 is accepted in scalars\n    validateMSMPoints(points, c);\n    validateMSMScalars(scalars, fieldN);\n    if (points.length !== scalars.length)\n        throw new Error('arrays of points and scalars must have equal length');\n    const zero = c.ZERO;\n    const wbits = bitLen(BigInt(points.length));\n    const windowSize = wbits > 12 ? wbits - 3 : wbits > 4 ? wbits - 2 : wbits ? 2 : 1; // in bits\n    const MASK = (1 << windowSize) - 1;\n    const buckets = new Array(MASK + 1).fill(zero); // +1 for zero array\n    const lastBits = Math.floor((fieldN.BITS - 1) / windowSize) * windowSize;\n    let sum = zero;\n    for (let i = lastBits; i >= 0; i -= windowSize) {\n        buckets.fill(zero);\n        for (let j = 0; j < scalars.length; j++) {\n            const scalar = scalars[j];\n            const wbits = Number((scalar >> BigInt(i)) & BigInt(MASK));\n            buckets[wbits] = buckets[wbits].add(points[j]);\n        }\n        let resI = zero; // not using this will do small speed-up, but will lose ct\n        // Skip first bucket, because it is zero\n        for (let j = buckets.length - 1, sumI = zero; j > 0; j--) {\n            sumI = sumI.add(buckets[j]);\n            resI = resI.add(sumI);\n        }\n        sum = sum.add(resI);\n        if (i !== 0)\n            for (let j = 0; j < windowSize; j++)\n                sum = sum.double();\n    }\n    return sum;\n}\n/**\n * Precomputed multi-scalar multiplication (MSM, Pa + Qb + Rc + ...).\n * @param c Curve Point constructor\n * @param fieldN field over CURVE.N - important that it's not over CURVE.P\n * @param points array of L curve points\n * @returns function which multiplies points with scaars\n */\nexport function precomputeMSMUnsafe(c, fieldN, points, windowSize) {\n    /**\n     * Performance Analysis of Window-based Precomputation\n     *\n     * Base Case (256-bit scalar, 8-bit window):\n     * - Standard precomputation requires:\n     *   - 31 additions per scalar × 256 scalars = 7,936 ops\n     *   - Plus 255 summary additions = 8,191 total ops\n     *   Note: Summary additions can be optimized via accumulator\n     *\n     * Chunked Precomputation Analysis:\n     * - Using 32 chunks requires:\n     *   - 255 additions per chunk\n     *   - 256 doublings\n     *   - Total: (255 × 32) + 256 = 8,416 ops\n     *\n     * Memory Usage Comparison:\n     * Window Size | Standard Points | Chunked Points\n     * ------------|-----------------|---------------\n     *     4-bit   |     520         |      15\n     *     8-bit   |    4,224        |     255\n     *    10-bit   |   13,824        |   1,023\n     *    16-bit   |  557,056        |  65,535\n     *\n     * Key Advantages:\n     * 1. Enables larger window sizes due to reduced memory overhead\n     * 2. More efficient for smaller scalar counts:\n     *    - 16 chunks: (16 × 255) + 256 = 4,336 ops\n     *    - ~2x faster than standard 8,191 ops\n     *\n     * Limitations:\n     * - Not suitable for plain precomputes (requires 256 constant doublings)\n     * - Performance degrades with larger scalar counts:\n     *   - Optimal for ~256 scalars\n     *   - Less efficient for 4096+ scalars (Pippenger preferred)\n     */\n    validateW(windowSize, fieldN.BITS);\n    validateMSMPoints(points, c);\n    const zero = c.ZERO;\n    const tableSize = 2 ** windowSize - 1; // table size (without zero)\n    const chunks = Math.ceil(fieldN.BITS / windowSize); // chunks of item\n    const MASK = BigInt((1 << windowSize) - 1);\n    const tables = points.map((p) => {\n        const res = [];\n        for (let i = 0, acc = p; i < tableSize; i++) {\n            res.push(acc);\n            acc = acc.add(p);\n        }\n        return res;\n    });\n    return (scalars) => {\n        validateMSMScalars(scalars, fieldN);\n        if (scalars.length > points.length)\n            throw new Error('array of scalars must be smaller than array of points');\n        let res = zero;\n        for (let i = 0; i < chunks; i++) {\n            // No need to double if accumulator is still zero.\n            if (res !== zero)\n                for (let j = 0; j < windowSize; j++)\n                    res = res.double();\n            const shiftBy = BigInt(chunks * windowSize - (i + 1) * windowSize);\n            for (let j = 0; j < scalars.length; j++) {\n                const n = scalars[j];\n                const curr = Number((n >> shiftBy) & MASK);\n                if (!curr)\n                    continue; // skip zero scalars chunks\n                res = res.add(tables[j][curr - 1]);\n            }\n        }\n        return res;\n    };\n}\nexport function validateBasic(curve) {\n    validateField(curve.Fp);\n    validateObject(curve, {\n        n: 'bigint',\n        h: 'bigint',\n        Gx: 'field',\n        Gy: 'field',\n    }, {\n        nBitLength: 'isSafeInteger',\n        nByteLength: 'isSafeInteger',\n    });\n    // Set defaults\n    return Object.freeze({\n        ...nLength(curve.n, curve.nBitLength),\n        ...curve,\n        ...{ p: curve.Fp.ORDER },\n    });\n}\n//# sourceMappingURL=curve.js.map","/**\n * Short Weierstrass curve methods. The formula is: y² = x³ + ax + b.\n *\n * ### Design rationale for types\n *\n * * Interaction between classes from different curves should fail:\n *   `k256.Point.BASE.add(p256.Point.BASE)`\n * * For this purpose we want to use `instanceof` operator, which is fast and works during runtime\n * * Different calls of `curve()` would return different classes -\n *   `curve(params) !== curve(params)`: if somebody decided to monkey-patch their curve,\n *   it won't affect others\n *\n * TypeScript can't infer types for classes created inside a function. Classes is one instance\n * of nominative types in TypeScript and interfaces only check for shape, so it's hard to create\n * unique type for every function call.\n *\n * We can use generic types via some param, like curve opts, but that would:\n *     1. Enable interaction between `curve(params)` and `curve(params)` (curves of same params)\n *     which is hard to debug.\n *     2. Params can be generic and we can't enforce them to be constant value:\n *     if somebody creates curve from non-constant params,\n *     it would be allowed to interact with other curves with non-constant params\n *\n * @todo https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-7.html#unique-symbol\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { validateBasic, wNAF, pippenger, } from './curve.js';\nimport * as mod from './modular.js';\nimport * as ut from './utils.js';\nimport { ensureBytes, memoized, abool } from './utils.js';\nfunction validateSigVerOpts(opts) {\n    if (opts.lowS !== undefined)\n        abool('lowS', opts.lowS);\n    if (opts.prehash !== undefined)\n        abool('prehash', opts.prehash);\n}\nfunction validatePointOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(opts, {\n        a: 'field',\n        b: 'field',\n    }, {\n        allowedPrivateKeyLengths: 'array',\n        wrapPrivateKey: 'boolean',\n        isTorsionFree: 'function',\n        clearCofactor: 'function',\n        allowInfinityPoint: 'boolean',\n        fromBytes: 'function',\n        toBytes: 'function',\n    });\n    const { endo, Fp, a } = opts;\n    if (endo) {\n        if (!Fp.eql(a, Fp.ZERO)) {\n            throw new Error('invalid endomorphism, can only be defined for Koblitz curves that have a=0');\n        }\n        if (typeof endo !== 'object' ||\n            typeof endo.beta !== 'bigint' ||\n            typeof endo.splitScalar !== 'function') {\n            throw new Error('invalid endomorphism, expected beta: bigint and splitScalar: function');\n        }\n    }\n    return Object.freeze({ ...opts });\n}\nconst { bytesToNumberBE: b2n, hexToBytes: h2b } = ut;\nexport class DERErr extends Error {\n    constructor(m = '') {\n        super(m);\n    }\n}\n/**\n * ASN.1 DER encoding utilities. ASN is very complex & fragile. Format:\n *\n *     [0x30 (SEQUENCE), bytelength, 0x02 (INTEGER), intLength, R, 0x02 (INTEGER), intLength, S]\n *\n * Docs: https://letsencrypt.org/docs/a-warm-welcome-to-asn1-and-der/, https://luca.ntop.org/Teaching/Appunti/asn1.html\n */\nexport const DER = {\n    // asn.1 DER encoding utils\n    Err: DERErr,\n    // Basic building block is TLV (Tag-Length-Value)\n    _tlv: {\n        encode: (tag, data) => {\n            const { Err: E } = DER;\n            if (tag < 0 || tag > 256)\n                throw new E('tlv.encode: wrong tag');\n            if (data.length & 1)\n                throw new E('tlv.encode: unpadded data');\n            const dataLen = data.length / 2;\n            const len = ut.numberToHexUnpadded(dataLen);\n            if ((len.length / 2) & 128)\n                throw new E('tlv.encode: long form length too big');\n            // length of length with long form flag\n            const lenLen = dataLen > 127 ? ut.numberToHexUnpadded((len.length / 2) | 128) : '';\n            const t = ut.numberToHexUnpadded(tag);\n            return t + lenLen + len + data;\n        },\n        // v - value, l - left bytes (unparsed)\n        decode(tag, data) {\n            const { Err: E } = DER;\n            let pos = 0;\n            if (tag < 0 || tag > 256)\n                throw new E('tlv.encode: wrong tag');\n            if (data.length < 2 || data[pos++] !== tag)\n                throw new E('tlv.decode: wrong tlv');\n            const first = data[pos++];\n            const isLong = !!(first & 128); // First bit of first length byte is flag for short/long form\n            let length = 0;\n            if (!isLong)\n                length = first;\n            else {\n                // Long form: [longFlag(1bit), lengthLength(7bit), length (BE)]\n                const lenLen = first & 127;\n                if (!lenLen)\n                    throw new E('tlv.decode(long): indefinite length not supported');\n                if (lenLen > 4)\n                    throw new E('tlv.decode(long): byte length is too big'); // this will overflow u32 in js\n                const lengthBytes = data.subarray(pos, pos + lenLen);\n                if (lengthBytes.length !== lenLen)\n                    throw new E('tlv.decode: length bytes not complete');\n                if (lengthBytes[0] === 0)\n                    throw new E('tlv.decode(long): zero leftmost byte');\n                for (const b of lengthBytes)\n                    length = (length << 8) | b;\n                pos += lenLen;\n                if (length < 128)\n                    throw new E('tlv.decode(long): not minimal encoding');\n            }\n            const v = data.subarray(pos, pos + length);\n            if (v.length !== length)\n                throw new E('tlv.decode: wrong value length');\n            return { v, l: data.subarray(pos + length) };\n        },\n    },\n    // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,\n    // since we always use positive integers here. It must always be empty:\n    // - add zero byte if exists\n    // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)\n    _int: {\n        encode(num) {\n            const { Err: E } = DER;\n            if (num < _0n)\n                throw new E('integer: negative integers are not allowed');\n            let hex = ut.numberToHexUnpadded(num);\n            // Pad with zero byte if negative flag is present\n            if (Number.parseInt(hex[0], 16) & 0b1000)\n                hex = '00' + hex;\n            if (hex.length & 1)\n                throw new E('unexpected DER parsing assertion: unpadded hex');\n            return hex;\n        },\n        decode(data) {\n            const { Err: E } = DER;\n            if (data[0] & 128)\n                throw new E('invalid signature integer: negative');\n            if (data[0] === 0x00 && !(data[1] & 128))\n                throw new E('invalid signature integer: unnecessary leading zero');\n            return b2n(data);\n        },\n    },\n    toSig(hex) {\n        // parse DER signature\n        const { Err: E, _int: int, _tlv: tlv } = DER;\n        const data = typeof hex === 'string' ? h2b(hex) : hex;\n        ut.abytes(data);\n        const { v: seqBytes, l: seqLeftBytes } = tlv.decode(0x30, data);\n        if (seqLeftBytes.length)\n            throw new E('invalid signature: left bytes after parsing');\n        const { v: rBytes, l: rLeftBytes } = tlv.decode(0x02, seqBytes);\n        const { v: sBytes, l: sLeftBytes } = tlv.decode(0x02, rLeftBytes);\n        if (sLeftBytes.length)\n            throw new E('invalid signature: left bytes after parsing');\n        return { r: int.decode(rBytes), s: int.decode(sBytes) };\n    },\n    hexFromSig(sig) {\n        const { _tlv: tlv, _int: int } = DER;\n        const rs = tlv.encode(0x02, int.encode(sig.r));\n        const ss = tlv.encode(0x02, int.encode(sig.s));\n        const seq = rs + ss;\n        return tlv.encode(0x30, seq);\n    },\n};\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3), _4n = BigInt(4);\nexport function weierstrassPoints(opts) {\n    const CURVE = validatePointOpts(opts);\n    const { Fp } = CURVE; // All curves has same field / group length as for now, but they can differ\n    const Fn = mod.Field(CURVE.n, CURVE.nBitLength);\n    const toBytes = CURVE.toBytes ||\n        ((_c, point, _isCompressed) => {\n            const a = point.toAffine();\n            return ut.concatBytes(Uint8Array.from([0x04]), Fp.toBytes(a.x), Fp.toBytes(a.y));\n        });\n    const fromBytes = CURVE.fromBytes ||\n        ((bytes) => {\n            // const head = bytes[0];\n            const tail = bytes.subarray(1);\n            // if (head !== 0x04) throw new Error('Only non-compressed encoding is supported');\n            const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n            const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n            return { x, y };\n        });\n    /**\n     * y² = x³ + ax + b: Short weierstrass curve formula\n     * @returns y²\n     */\n    function weierstrassEquation(x) {\n        const { a, b } = CURVE;\n        const x2 = Fp.sqr(x); // x * x\n        const x3 = Fp.mul(x2, x); // x2 * x\n        return Fp.add(Fp.add(x3, Fp.mul(x, a)), b); // x3 + a * x + b\n    }\n    // Validate whether the passed curve params are valid.\n    // We check if curve equation works for generator point.\n    // `assertValidity()` won't work: `isTorsionFree()` is not available at this point in bls12-381.\n    // ProjectivePoint class has not been initialized yet.\n    if (!Fp.eql(Fp.sqr(CURVE.Gy), weierstrassEquation(CURVE.Gx)))\n        throw new Error('bad generator point: equation left != right');\n    // Valid group elements reside in range 1..n-1\n    function isWithinCurveOrder(num) {\n        return ut.inRange(num, _1n, CURVE.n);\n    }\n    // Validates if priv key is valid and converts it to bigint.\n    // Supports options allowedPrivateKeyLengths and wrapPrivateKey.\n    function normPrivateKeyToScalar(key) {\n        const { allowedPrivateKeyLengths: lengths, nByteLength, wrapPrivateKey, n: N } = CURVE;\n        if (lengths && typeof key !== 'bigint') {\n            if (ut.isBytes(key))\n                key = ut.bytesToHex(key);\n            // Normalize to hex string, pad. E.g. P521 would norm 130-132 char hex to 132-char bytes\n            if (typeof key !== 'string' || !lengths.includes(key.length))\n                throw new Error('invalid private key');\n            key = key.padStart(nByteLength * 2, '0');\n        }\n        let num;\n        try {\n            num =\n                typeof key === 'bigint'\n                    ? key\n                    : ut.bytesToNumberBE(ensureBytes('private key', key, nByteLength));\n        }\n        catch (error) {\n            throw new Error('invalid private key, expected hex or ' + nByteLength + ' bytes, got ' + typeof key);\n        }\n        if (wrapPrivateKey)\n            num = mod.mod(num, N); // disabled by default, enabled for BLS\n        ut.aInRange('private key', num, _1n, N); // num in range [1..N-1]\n        return num;\n    }\n    function assertPrjPoint(other) {\n        if (!(other instanceof Point))\n            throw new Error('ProjectivePoint expected');\n    }\n    // Memoized toAffine / validity check. They are heavy. Points are immutable.\n    // Converts Projective point to affine (x, y) coordinates.\n    // Can accept precomputed Z^-1 - for example, from invertBatch.\n    // (x, y, z) ∋ (x=x/z, y=y/z)\n    const toAffineMemo = memoized((p, iz) => {\n        const { px: x, py: y, pz: z } = p;\n        // Fast-path for normalized points\n        if (Fp.eql(z, Fp.ONE))\n            return { x, y };\n        const is0 = p.is0();\n        // If invZ was 0, we return zero point. However we still want to execute\n        // all operations, so we replace invZ with a random number, 1.\n        if (iz == null)\n            iz = is0 ? Fp.ONE : Fp.inv(z);\n        const ax = Fp.mul(x, iz);\n        const ay = Fp.mul(y, iz);\n        const zz = Fp.mul(z, iz);\n        if (is0)\n            return { x: Fp.ZERO, y: Fp.ZERO };\n        if (!Fp.eql(zz, Fp.ONE))\n            throw new Error('invZ was invalid');\n        return { x: ax, y: ay };\n    });\n    // NOTE: on exception this will crash 'cached' and no value will be set.\n    // Otherwise true will be return\n    const assertValidMemo = memoized((p) => {\n        if (p.is0()) {\n            // (0, 1, 0) aka ZERO is invalid in most contexts.\n            // In BLS, ZERO can be serialized, so we allow it.\n            // (0, 0, 0) is invalid representation of ZERO.\n            if (CURVE.allowInfinityPoint && !Fp.is0(p.py))\n                return;\n            throw new Error('bad point: ZERO');\n        }\n        // Some 3rd-party test vectors require different wording between here & `fromCompressedHex`\n        const { x, y } = p.toAffine();\n        // Check if x, y are valid field elements\n        if (!Fp.isValid(x) || !Fp.isValid(y))\n            throw new Error('bad point: x or y not FE');\n        const left = Fp.sqr(y); // y²\n        const right = weierstrassEquation(x); // x³ + ax + b\n        if (!Fp.eql(left, right))\n            throw new Error('bad point: equation left != right');\n        if (!p.isTorsionFree())\n            throw new Error('bad point: not in prime-order subgroup');\n        return true;\n    });\n    /**\n     * Projective Point works in 3d / projective (homogeneous) coordinates: (x, y, z) ∋ (x=x/z, y=y/z)\n     * Default Point works in 2d / affine coordinates: (x, y)\n     * We're doing calculations in projective, because its operations don't require costly inversion.\n     */\n    class Point {\n        constructor(px, py, pz) {\n            this.px = px;\n            this.py = py;\n            this.pz = pz;\n            if (px == null || !Fp.isValid(px))\n                throw new Error('x required');\n            if (py == null || !Fp.isValid(py))\n                throw new Error('y required');\n            if (pz == null || !Fp.isValid(pz))\n                throw new Error('z required');\n            Object.freeze(this);\n        }\n        // Does not validate if the point is on-curve.\n        // Use fromHex instead, or call assertValidity() later.\n        static fromAffine(p) {\n            const { x, y } = p || {};\n            if (!p || !Fp.isValid(x) || !Fp.isValid(y))\n                throw new Error('invalid affine point');\n            if (p instanceof Point)\n                throw new Error('projective point not allowed');\n            const is0 = (i) => Fp.eql(i, Fp.ZERO);\n            // fromAffine(x:0, y:0) would produce (x:0, y:0, z:1), but we need (x:0, y:1, z:0)\n            if (is0(x) && is0(y))\n                return Point.ZERO;\n            return new Point(x, y, Fp.ONE);\n        }\n        get x() {\n            return this.toAffine().x;\n        }\n        get y() {\n            return this.toAffine().y;\n        }\n        /**\n         * Takes a bunch of Projective Points but executes only one\n         * inversion on all of them. Inversion is very slow operation,\n         * so this improves performance massively.\n         * Optimization: converts a list of projective points to a list of identical points with Z=1.\n         */\n        static normalizeZ(points) {\n            const toInv = Fp.invertBatch(points.map((p) => p.pz));\n            return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n        }\n        /**\n         * Converts hash string or Uint8Array to Point.\n         * @param hex short/long ECDSA hex\n         */\n        static fromHex(hex) {\n            const P = Point.fromAffine(fromBytes(ensureBytes('pointHex', hex)));\n            P.assertValidity();\n            return P;\n        }\n        // Multiplies generator point by privateKey.\n        static fromPrivateKey(privateKey) {\n            return Point.BASE.multiply(normPrivateKeyToScalar(privateKey));\n        }\n        // Multiscalar Multiplication\n        static msm(points, scalars) {\n            return pippenger(Point, Fn, points, scalars);\n        }\n        // \"Private method\", don't use it directly\n        _setWindowSize(windowSize) {\n            wnaf.setWindowSize(this, windowSize);\n        }\n        // A point on curve is valid if it conforms to equation.\n        assertValidity() {\n            assertValidMemo(this);\n        }\n        hasEvenY() {\n            const { y } = this.toAffine();\n            if (Fp.isOdd)\n                return !Fp.isOdd(y);\n            throw new Error(\"Field doesn't support isOdd\");\n        }\n        /**\n         * Compare one point to another.\n         */\n        equals(other) {\n            assertPrjPoint(other);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            const { px: X2, py: Y2, pz: Z2 } = other;\n            const U1 = Fp.eql(Fp.mul(X1, Z2), Fp.mul(X2, Z1));\n            const U2 = Fp.eql(Fp.mul(Y1, Z2), Fp.mul(Y2, Z1));\n            return U1 && U2;\n        }\n        /**\n         * Flips point to one corresponding to (x, -y) in Affine coordinates.\n         */\n        negate() {\n            return new Point(this.px, Fp.neg(this.py), this.pz);\n        }\n        // Renes-Costello-Batina exception-free doubling formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 3\n        // Cost: 8M + 3S + 3*a + 2*b3 + 15add.\n        double() {\n            const { a, b } = CURVE;\n            const b3 = Fp.mul(b, _3n);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            let t0 = Fp.mul(X1, X1); // step 1\n            let t1 = Fp.mul(Y1, Y1);\n            let t2 = Fp.mul(Z1, Z1);\n            let t3 = Fp.mul(X1, Y1);\n            t3 = Fp.add(t3, t3); // step 5\n            Z3 = Fp.mul(X1, Z1);\n            Z3 = Fp.add(Z3, Z3);\n            X3 = Fp.mul(a, Z3);\n            Y3 = Fp.mul(b3, t2);\n            Y3 = Fp.add(X3, Y3); // step 10\n            X3 = Fp.sub(t1, Y3);\n            Y3 = Fp.add(t1, Y3);\n            Y3 = Fp.mul(X3, Y3);\n            X3 = Fp.mul(t3, X3);\n            Z3 = Fp.mul(b3, Z3); // step 15\n            t2 = Fp.mul(a, t2);\n            t3 = Fp.sub(t0, t2);\n            t3 = Fp.mul(a, t3);\n            t3 = Fp.add(t3, Z3);\n            Z3 = Fp.add(t0, t0); // step 20\n            t0 = Fp.add(Z3, t0);\n            t0 = Fp.add(t0, t2);\n            t0 = Fp.mul(t0, t3);\n            Y3 = Fp.add(Y3, t0);\n            t2 = Fp.mul(Y1, Z1); // step 25\n            t2 = Fp.add(t2, t2);\n            t0 = Fp.mul(t2, t3);\n            X3 = Fp.sub(X3, t0);\n            Z3 = Fp.mul(t2, t1);\n            Z3 = Fp.add(Z3, Z3); // step 30\n            Z3 = Fp.add(Z3, Z3);\n            return new Point(X3, Y3, Z3);\n        }\n        // Renes-Costello-Batina exception-free addition formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 1\n        // Cost: 12M + 0S + 3*a + 3*b3 + 23add.\n        add(other) {\n            assertPrjPoint(other);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            const { px: X2, py: Y2, pz: Z2 } = other;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            const a = CURVE.a;\n            const b3 = Fp.mul(CURVE.b, _3n);\n            let t0 = Fp.mul(X1, X2); // step 1\n            let t1 = Fp.mul(Y1, Y2);\n            let t2 = Fp.mul(Z1, Z2);\n            let t3 = Fp.add(X1, Y1);\n            let t4 = Fp.add(X2, Y2); // step 5\n            t3 = Fp.mul(t3, t4);\n            t4 = Fp.add(t0, t1);\n            t3 = Fp.sub(t3, t4);\n            t4 = Fp.add(X1, Z1);\n            let t5 = Fp.add(X2, Z2); // step 10\n            t4 = Fp.mul(t4, t5);\n            t5 = Fp.add(t0, t2);\n            t4 = Fp.sub(t4, t5);\n            t5 = Fp.add(Y1, Z1);\n            X3 = Fp.add(Y2, Z2); // step 15\n            t5 = Fp.mul(t5, X3);\n            X3 = Fp.add(t1, t2);\n            t5 = Fp.sub(t5, X3);\n            Z3 = Fp.mul(a, t4);\n            X3 = Fp.mul(b3, t2); // step 20\n            Z3 = Fp.add(X3, Z3);\n            X3 = Fp.sub(t1, Z3);\n            Z3 = Fp.add(t1, Z3);\n            Y3 = Fp.mul(X3, Z3);\n            t1 = Fp.add(t0, t0); // step 25\n            t1 = Fp.add(t1, t0);\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.mul(b3, t4);\n            t1 = Fp.add(t1, t2);\n            t2 = Fp.sub(t0, t2); // step 30\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.add(t4, t2);\n            t0 = Fp.mul(t1, t4);\n            Y3 = Fp.add(Y3, t0);\n            t0 = Fp.mul(t5, t4); // step 35\n            X3 = Fp.mul(t3, X3);\n            X3 = Fp.sub(X3, t0);\n            t0 = Fp.mul(t3, t1);\n            Z3 = Fp.mul(t5, Z3);\n            Z3 = Fp.add(Z3, t0); // step 40\n            return new Point(X3, Y3, Z3);\n        }\n        subtract(other) {\n            return this.add(other.negate());\n        }\n        is0() {\n            return this.equals(Point.ZERO);\n        }\n        wNAF(n) {\n            return wnaf.wNAFCached(this, n, Point.normalizeZ);\n        }\n        /**\n         * Non-constant-time multiplication. Uses double-and-add algorithm.\n         * It's faster, but should only be used when you don't care about\n         * an exposed private key e.g. sig verification, which works over *public* keys.\n         */\n        multiplyUnsafe(sc) {\n            const { endo, n: N } = CURVE;\n            ut.aInRange('scalar', sc, _0n, N);\n            const I = Point.ZERO;\n            if (sc === _0n)\n                return I;\n            if (this.is0() || sc === _1n)\n                return this;\n            // Case a: no endomorphism. Case b: has precomputes.\n            if (!endo || wnaf.hasPrecomputes(this))\n                return wnaf.wNAFCachedUnsafe(this, sc, Point.normalizeZ);\n            // Case c: endomorphism\n            let { k1neg, k1, k2neg, k2 } = endo.splitScalar(sc);\n            let k1p = I;\n            let k2p = I;\n            let d = this;\n            while (k1 > _0n || k2 > _0n) {\n                if (k1 & _1n)\n                    k1p = k1p.add(d);\n                if (k2 & _1n)\n                    k2p = k2p.add(d);\n                d = d.double();\n                k1 >>= _1n;\n                k2 >>= _1n;\n            }\n            if (k1neg)\n                k1p = k1p.negate();\n            if (k2neg)\n                k2p = k2p.negate();\n            k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n            return k1p.add(k2p);\n        }\n        /**\n         * Constant time multiplication.\n         * Uses wNAF method. Windowed method may be 10% faster,\n         * but takes 2x longer to generate and consumes 2x memory.\n         * Uses precomputes when available.\n         * Uses endomorphism for Koblitz curves.\n         * @param scalar by which the point would be multiplied\n         * @returns New point\n         */\n        multiply(scalar) {\n            const { endo, n: N } = CURVE;\n            ut.aInRange('scalar', scalar, _1n, N);\n            let point, fake; // Fake point is used to const-time mult\n            if (endo) {\n                const { k1neg, k1, k2neg, k2 } = endo.splitScalar(scalar);\n                let { p: k1p, f: f1p } = this.wNAF(k1);\n                let { p: k2p, f: f2p } = this.wNAF(k2);\n                k1p = wnaf.constTimeNegate(k1neg, k1p);\n                k2p = wnaf.constTimeNegate(k2neg, k2p);\n                k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n                point = k1p.add(k2p);\n                fake = f1p.add(f2p);\n            }\n            else {\n                const { p, f } = this.wNAF(scalar);\n                point = p;\n                fake = f;\n            }\n            // Normalize `z` for both points, but return only real one\n            return Point.normalizeZ([point, fake])[0];\n        }\n        /**\n         * Efficiently calculate `aP + bQ`. Unsafe, can expose private key, if used incorrectly.\n         * Not using Strauss-Shamir trick: precomputation tables are faster.\n         * The trick could be useful if both P and Q are not G (not in our case).\n         * @returns non-zero affine point\n         */\n        multiplyAndAddUnsafe(Q, a, b) {\n            const G = Point.BASE; // No Strauss-Shamir trick: we have 10% faster G precomputes\n            const mul = (P, a // Select faster multiply() method\n            ) => (a === _0n || a === _1n || !P.equals(G) ? P.multiplyUnsafe(a) : P.multiply(a));\n            const sum = mul(this, a).add(mul(Q, b));\n            return sum.is0() ? undefined : sum;\n        }\n        // Converts Projective point to affine (x, y) coordinates.\n        // Can accept precomputed Z^-1 - for example, from invertBatch.\n        // (x, y, z) ∋ (x=x/z, y=y/z)\n        toAffine(iz) {\n            return toAffineMemo(this, iz);\n        }\n        isTorsionFree() {\n            const { h: cofactor, isTorsionFree } = CURVE;\n            if (cofactor === _1n)\n                return true; // No subgroups, always torsion-free\n            if (isTorsionFree)\n                return isTorsionFree(Point, this);\n            throw new Error('isTorsionFree() has not been declared for the elliptic curve');\n        }\n        clearCofactor() {\n            const { h: cofactor, clearCofactor } = CURVE;\n            if (cofactor === _1n)\n                return this; // Fast-path\n            if (clearCofactor)\n                return clearCofactor(Point, this);\n            return this.multiplyUnsafe(CURVE.h);\n        }\n        toRawBytes(isCompressed = true) {\n            abool('isCompressed', isCompressed);\n            this.assertValidity();\n            return toBytes(Point, this, isCompressed);\n        }\n        toHex(isCompressed = true) {\n            abool('isCompressed', isCompressed);\n            return ut.bytesToHex(this.toRawBytes(isCompressed));\n        }\n    }\n    Point.BASE = new Point(CURVE.Gx, CURVE.Gy, Fp.ONE);\n    Point.ZERO = new Point(Fp.ZERO, Fp.ONE, Fp.ZERO);\n    const _bits = CURVE.nBitLength;\n    const wnaf = wNAF(Point, CURVE.endo ? Math.ceil(_bits / 2) : _bits);\n    // Validate if generator point is on curve\n    return {\n        CURVE,\n        ProjectivePoint: Point,\n        normPrivateKeyToScalar,\n        weierstrassEquation,\n        isWithinCurveOrder,\n    };\n}\nfunction validateOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(opts, {\n        hash: 'hash',\n        hmac: 'function',\n        randomBytes: 'function',\n    }, {\n        bits2int: 'function',\n        bits2int_modN: 'function',\n        lowS: 'boolean',\n    });\n    return Object.freeze({ lowS: true, ...opts });\n}\n/**\n * Creates short weierstrass curve and ECDSA signature methods for it.\n * @example\n * import { Field } from '@noble/curves/abstract/modular';\n * // Before that, define BigInt-s: a, b, p, n, Gx, Gy\n * const curve = weierstrass({ a, b, Fp: Field(p), n, Gx, Gy, h: 1n })\n */\nexport function weierstrass(curveDef) {\n    const CURVE = validateOpts(curveDef);\n    const { Fp, n: CURVE_ORDER } = CURVE;\n    const compressedLen = Fp.BYTES + 1; // e.g. 33 for 32\n    const uncompressedLen = 2 * Fp.BYTES + 1; // e.g. 65 for 32\n    function modN(a) {\n        return mod.mod(a, CURVE_ORDER);\n    }\n    function invN(a) {\n        return mod.invert(a, CURVE_ORDER);\n    }\n    const { ProjectivePoint: Point, normPrivateKeyToScalar, weierstrassEquation, isWithinCurveOrder, } = weierstrassPoints({\n        ...CURVE,\n        toBytes(_c, point, isCompressed) {\n            const a = point.toAffine();\n            const x = Fp.toBytes(a.x);\n            const cat = ut.concatBytes;\n            abool('isCompressed', isCompressed);\n            if (isCompressed) {\n                return cat(Uint8Array.from([point.hasEvenY() ? 0x02 : 0x03]), x);\n            }\n            else {\n                return cat(Uint8Array.from([0x04]), x, Fp.toBytes(a.y));\n            }\n        },\n        fromBytes(bytes) {\n            const len = bytes.length;\n            const head = bytes[0];\n            const tail = bytes.subarray(1);\n            // this.assertValidity() is done inside of fromHex\n            if (len === compressedLen && (head === 0x02 || head === 0x03)) {\n                const x = ut.bytesToNumberBE(tail);\n                if (!ut.inRange(x, _1n, Fp.ORDER))\n                    throw new Error('Point is not on curve');\n                const y2 = weierstrassEquation(x); // y² = x³ + ax + b\n                let y;\n                try {\n                    y = Fp.sqrt(y2); // y = y² ^ (p+1)/4\n                }\n                catch (sqrtError) {\n                    const suffix = sqrtError instanceof Error ? ': ' + sqrtError.message : '';\n                    throw new Error('Point is not on curve' + suffix);\n                }\n                const isYOdd = (y & _1n) === _1n;\n                // ECDSA\n                const isHeadOdd = (head & 1) === 1;\n                if (isHeadOdd !== isYOdd)\n                    y = Fp.neg(y);\n                return { x, y };\n            }\n            else if (len === uncompressedLen && head === 0x04) {\n                const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n                const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n                return { x, y };\n            }\n            else {\n                const cl = compressedLen;\n                const ul = uncompressedLen;\n                throw new Error('invalid Point, expected length of ' + cl + ', or uncompressed ' + ul + ', got ' + len);\n            }\n        },\n    });\n    const numToNByteStr = (num) => ut.bytesToHex(ut.numberToBytesBE(num, CURVE.nByteLength));\n    function isBiggerThanHalfOrder(number) {\n        const HALF = CURVE_ORDER >> _1n;\n        return number > HALF;\n    }\n    function normalizeS(s) {\n        return isBiggerThanHalfOrder(s) ? modN(-s) : s;\n    }\n    // slice bytes num\n    const slcNum = (b, from, to) => ut.bytesToNumberBE(b.slice(from, to));\n    /**\n     * ECDSA signature with its (r, s) properties. Supports DER & compact representations.\n     */\n    class Signature {\n        constructor(r, s, recovery) {\n            this.r = r;\n            this.s = s;\n            this.recovery = recovery;\n            this.assertValidity();\n        }\n        // pair (bytes of r, bytes of s)\n        static fromCompact(hex) {\n            const l = CURVE.nByteLength;\n            hex = ensureBytes('compactSignature', hex, l * 2);\n            return new Signature(slcNum(hex, 0, l), slcNum(hex, l, 2 * l));\n        }\n        // DER encoded ECDSA signature\n        // https://bitcoin.stackexchange.com/questions/57644/what-are-the-parts-of-a-bitcoin-transaction-input-script\n        static fromDER(hex) {\n            const { r, s } = DER.toSig(ensureBytes('DER', hex));\n            return new Signature(r, s);\n        }\n        assertValidity() {\n            ut.aInRange('r', this.r, _1n, CURVE_ORDER); // r in [1..N]\n            ut.aInRange('s', this.s, _1n, CURVE_ORDER); // s in [1..N]\n        }\n        addRecoveryBit(recovery) {\n            return new Signature(this.r, this.s, recovery);\n        }\n        recoverPublicKey(msgHash) {\n            const { r, s, recovery: rec } = this;\n            const h = bits2int_modN(ensureBytes('msgHash', msgHash)); // Truncate hash\n            if (rec == null || ![0, 1, 2, 3].includes(rec))\n                throw new Error('recovery id invalid');\n            const radj = rec === 2 || rec === 3 ? r + CURVE.n : r;\n            if (radj >= Fp.ORDER)\n                throw new Error('recovery id 2 or 3 invalid');\n            const prefix = (rec & 1) === 0 ? '02' : '03';\n            const R = Point.fromHex(prefix + numToNByteStr(radj));\n            const ir = invN(radj); // r^-1\n            const u1 = modN(-h * ir); // -hr^-1\n            const u2 = modN(s * ir); // sr^-1\n            const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2); // (sr^-1)R-(hr^-1)G = -(hr^-1)G + (sr^-1)\n            if (!Q)\n                throw new Error('point at infinify'); // unsafe is fine: no priv data leaked\n            Q.assertValidity();\n            return Q;\n        }\n        // Signatures should be low-s, to prevent malleability.\n        hasHighS() {\n            return isBiggerThanHalfOrder(this.s);\n        }\n        normalizeS() {\n            return this.hasHighS() ? new Signature(this.r, modN(-this.s), this.recovery) : this;\n        }\n        // DER-encoded\n        toDERRawBytes() {\n            return ut.hexToBytes(this.toDERHex());\n        }\n        toDERHex() {\n            return DER.hexFromSig({ r: this.r, s: this.s });\n        }\n        // padded bytes of r, then padded bytes of s\n        toCompactRawBytes() {\n            return ut.hexToBytes(this.toCompactHex());\n        }\n        toCompactHex() {\n            return numToNByteStr(this.r) + numToNByteStr(this.s);\n        }\n    }\n    const utils = {\n        isValidPrivateKey(privateKey) {\n            try {\n                normPrivateKeyToScalar(privateKey);\n                return true;\n            }\n            catch (error) {\n                return false;\n            }\n        },\n        normPrivateKeyToScalar: normPrivateKeyToScalar,\n        /**\n         * Produces cryptographically secure private key from random of size\n         * (groupLen + ceil(groupLen / 2)) with modulo bias being negligible.\n         */\n        randomPrivateKey: () => {\n            const length = mod.getMinHashLength(CURVE.n);\n            return mod.mapHashToField(CURVE.randomBytes(length), CURVE.n);\n        },\n        /**\n         * Creates precompute table for an arbitrary EC point. Makes point \"cached\".\n         * Allows to massively speed-up `point.multiply(scalar)`.\n         * @returns cached point\n         * @example\n         * const fast = utils.precompute(8, ProjectivePoint.fromHex(someonesPubKey));\n         * fast.multiply(privKey); // much faster ECDH now\n         */\n        precompute(windowSize = 8, point = Point.BASE) {\n            point._setWindowSize(windowSize);\n            point.multiply(BigInt(3)); // 3 is arbitrary, just need any number here\n            return point;\n        },\n    };\n    /**\n     * Computes public key for a private key. Checks for validity of the private key.\n     * @param privateKey private key\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns Public key, full when isCompressed=false; short when isCompressed=true\n     */\n    function getPublicKey(privateKey, isCompressed = true) {\n        return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n    }\n    /**\n     * Quick and dirty check for item being public key. Does not validate hex, or being on-curve.\n     */\n    function isProbPub(item) {\n        const arr = ut.isBytes(item);\n        const str = typeof item === 'string';\n        const len = (arr || str) && item.length;\n        if (arr)\n            return len === compressedLen || len === uncompressedLen;\n        if (str)\n            return len === 2 * compressedLen || len === 2 * uncompressedLen;\n        if (item instanceof Point)\n            return true;\n        return false;\n    }\n    /**\n     * ECDH (Elliptic Curve Diffie Hellman).\n     * Computes shared public key from private key and public key.\n     * Checks: 1) private key validity 2) shared key is on-curve.\n     * Does NOT hash the result.\n     * @param privateA private key\n     * @param publicB different public key\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns shared public key\n     */\n    function getSharedSecret(privateA, publicB, isCompressed = true) {\n        if (isProbPub(privateA))\n            throw new Error('first arg must be private key');\n        if (!isProbPub(publicB))\n            throw new Error('second arg must be public key');\n        const b = Point.fromHex(publicB); // check for being on-curve\n        return b.multiply(normPrivateKeyToScalar(privateA)).toRawBytes(isCompressed);\n    }\n    // RFC6979: ensure ECDSA msg is X bytes and < N. RFC suggests optional truncating via bits2octets.\n    // FIPS 186-4 4.6 suggests the leftmost min(nBitLen, outLen) bits, which matches bits2int.\n    // bits2int can produce res>N, we can do mod(res, N) since the bitLen is the same.\n    // int2octets can't be used; pads small msgs with 0: unacceptatble for trunc as per RFC vectors\n    const bits2int = CURVE.bits2int ||\n        function (bytes) {\n            // Our custom check \"just in case\"\n            if (bytes.length > 8192)\n                throw new Error('input is too large');\n            // For curves with nBitLength % 8 !== 0: bits2octets(bits2octets(m)) !== bits2octets(m)\n            // for some cases, since bytes.length * 8 is not actual bitLength.\n            const num = ut.bytesToNumberBE(bytes); // check for == u8 done here\n            const delta = bytes.length * 8 - CURVE.nBitLength; // truncate to nBitLength leftmost bits\n            return delta > 0 ? num >> BigInt(delta) : num;\n        };\n    const bits2int_modN = CURVE.bits2int_modN ||\n        function (bytes) {\n            return modN(bits2int(bytes)); // can't use bytesToNumberBE here\n        };\n    // NOTE: pads output with zero as per spec\n    const ORDER_MASK = ut.bitMask(CURVE.nBitLength);\n    /**\n     * Converts to bytes. Checks if num in `[0..ORDER_MASK-1]` e.g.: `[0..2^256-1]`.\n     */\n    function int2octets(num) {\n        ut.aInRange('num < 2^' + CURVE.nBitLength, num, _0n, ORDER_MASK);\n        // works with order, can have different size than numToField!\n        return ut.numberToBytesBE(num, CURVE.nByteLength);\n    }\n    // Steps A, D of RFC6979 3.2\n    // Creates RFC6979 seed; converts msg/privKey to numbers.\n    // Used only in sign, not in verify.\n    // NOTE: we cannot assume here that msgHash has same amount of bytes as curve order,\n    // this will be invalid at least for P521. Also it can be bigger for P224 + SHA256\n    function prepSig(msgHash, privateKey, opts = defaultSigOpts) {\n        if (['recovered', 'canonical'].some((k) => k in opts))\n            throw new Error('sign() legacy options not supported');\n        const { hash, randomBytes } = CURVE;\n        let { lowS, prehash, extraEntropy: ent } = opts; // generates low-s sigs by default\n        if (lowS == null)\n            lowS = true; // RFC6979 3.2: we skip step A, because we already provide hash\n        msgHash = ensureBytes('msgHash', msgHash);\n        validateSigVerOpts(opts);\n        if (prehash)\n            msgHash = ensureBytes('prehashed msgHash', hash(msgHash));\n        // We can't later call bits2octets, since nested bits2int is broken for curves\n        // with nBitLength % 8 !== 0. Because of that, we unwrap it here as int2octets call.\n        // const bits2octets = (bits) => int2octets(bits2int_modN(bits))\n        const h1int = bits2int_modN(msgHash);\n        const d = normPrivateKeyToScalar(privateKey); // validate private key, convert to bigint\n        const seedArgs = [int2octets(d), int2octets(h1int)];\n        // extraEntropy. RFC6979 3.6: additional k' (optional).\n        if (ent != null && ent !== false) {\n            // K = HMAC_K(V || 0x00 || int2octets(x) || bits2octets(h1) || k')\n            const e = ent === true ? randomBytes(Fp.BYTES) : ent; // generate random bytes OR pass as-is\n            seedArgs.push(ensureBytes('extraEntropy', e)); // check for being bytes\n        }\n        const seed = ut.concatBytes(...seedArgs); // Step D of RFC6979 3.2\n        const m = h1int; // NOTE: no need to call bits2int second time here, it is inside truncateHash!\n        // Converts signature params into point w r/s, checks result for validity.\n        function k2sig(kBytes) {\n            // RFC 6979 Section 3.2, step 3: k = bits2int(T)\n            const k = bits2int(kBytes); // Cannot use fields methods, since it is group element\n            if (!isWithinCurveOrder(k))\n                return; // Important: all mod() calls here must be done over N\n            const ik = invN(k); // k^-1 mod n\n            const q = Point.BASE.multiply(k).toAffine(); // q = Gk\n            const r = modN(q.x); // r = q.x mod n\n            if (r === _0n)\n                return;\n            // Can use scalar blinding b^-1(bm + bdr) where b ∈ [1,q−1] according to\n            // https://tches.iacr.org/index.php/TCHES/article/view/7337/6509. We've decided against it:\n            // a) dependency on CSPRNG b) 15% slowdown c) doesn't really help since bigints are not CT\n            const s = modN(ik * modN(m + r * d)); // Not using blinding here\n            if (s === _0n)\n                return;\n            let recovery = (q.x === r ? 0 : 2) | Number(q.y & _1n); // recovery bit (2 or 3, when q.x > n)\n            let normS = s;\n            if (lowS && isBiggerThanHalfOrder(s)) {\n                normS = normalizeS(s); // if lowS was passed, ensure s is always\n                recovery ^= 1; // // in the bottom half of N\n            }\n            return new Signature(r, normS, recovery); // use normS, not s\n        }\n        return { seed, k2sig };\n    }\n    const defaultSigOpts = { lowS: CURVE.lowS, prehash: false };\n    const defaultVerOpts = { lowS: CURVE.lowS, prehash: false };\n    /**\n     * Signs message hash with a private key.\n     * ```\n     * sign(m, d, k) where\n     *   (x, y) = G × k\n     *   r = x mod n\n     *   s = (m + dr)/k mod n\n     * ```\n     * @param msgHash NOT message. msg needs to be hashed to `msgHash`, or use `prehash`.\n     * @param privKey private key\n     * @param opts lowS for non-malleable sigs. extraEntropy for mixing randomness into k. prehash will hash first arg.\n     * @returns signature with recovery param\n     */\n    function sign(msgHash, privKey, opts = defaultSigOpts) {\n        const { seed, k2sig } = prepSig(msgHash, privKey, opts); // Steps A, D of RFC6979 3.2.\n        const C = CURVE;\n        const drbg = ut.createHmacDrbg(C.hash.outputLen, C.nByteLength, C.hmac);\n        return drbg(seed, k2sig); // Steps B, C, D, E, F, G\n    }\n    // Enable precomputes. Slows down first publicKey computation by 20ms.\n    Point.BASE._setWindowSize(8);\n    // utils.precompute(8, ProjectivePoint.BASE)\n    /**\n     * Verifies a signature against message hash and public key.\n     * Rejects lowS signatures by default: to override,\n     * specify option `{lowS: false}`. Implements section 4.1.4 from https://www.secg.org/sec1-v2.pdf:\n     *\n     * ```\n     * verify(r, s, h, P) where\n     *   U1 = hs^-1 mod n\n     *   U2 = rs^-1 mod n\n     *   R = U1⋅G - U2⋅P\n     *   mod(R.x, n) == r\n     * ```\n     */\n    function verify(signature, msgHash, publicKey, opts = defaultVerOpts) {\n        const sg = signature;\n        msgHash = ensureBytes('msgHash', msgHash);\n        publicKey = ensureBytes('publicKey', publicKey);\n        const { lowS, prehash, format } = opts;\n        // Verify opts, deduce signature format\n        validateSigVerOpts(opts);\n        if ('strict' in opts)\n            throw new Error('options.strict was renamed to lowS');\n        if (format !== undefined && format !== 'compact' && format !== 'der')\n            throw new Error('format must be compact or der');\n        const isHex = typeof sg === 'string' || ut.isBytes(sg);\n        const isObj = !isHex &&\n            !format &&\n            typeof sg === 'object' &&\n            sg !== null &&\n            typeof sg.r === 'bigint' &&\n            typeof sg.s === 'bigint';\n        if (!isHex && !isObj)\n            throw new Error('invalid signature, expected Uint8Array, hex string or Signature instance');\n        let _sig = undefined;\n        let P;\n        try {\n            if (isObj)\n                _sig = new Signature(sg.r, sg.s);\n            if (isHex) {\n                // Signature can be represented in 2 ways: compact (2*nByteLength) & DER (variable-length).\n                // Since DER can also be 2*nByteLength bytes, we check for it first.\n                try {\n                    if (format !== 'compact')\n                        _sig = Signature.fromDER(sg);\n                }\n                catch (derError) {\n                    if (!(derError instanceof DER.Err))\n                        throw derError;\n                }\n                if (!_sig && format !== 'der')\n                    _sig = Signature.fromCompact(sg);\n            }\n            P = Point.fromHex(publicKey);\n        }\n        catch (error) {\n            return false;\n        }\n        if (!_sig)\n            return false;\n        if (lowS && _sig.hasHighS())\n            return false;\n        if (prehash)\n            msgHash = CURVE.hash(msgHash);\n        const { r, s } = _sig;\n        const h = bits2int_modN(msgHash); // Cannot use fields methods, since it is group element\n        const is = invN(s); // s^-1\n        const u1 = modN(h * is); // u1 = hs^-1 mod n\n        const u2 = modN(r * is); // u2 = rs^-1 mod n\n        const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2)?.toAffine(); // R = u1⋅G + u2⋅P\n        if (!R)\n            return false;\n        const v = modN(R.x);\n        return v === r;\n    }\n    return {\n        CURVE,\n        getPublicKey,\n        getSharedSecret,\n        sign,\n        verify,\n        ProjectivePoint: Point,\n        Signature,\n        utils,\n    };\n}\n/**\n * Implementation of the Shallue and van de Woestijne method for any weierstrass curve.\n * TODO: check if there is a way to merge this with uvRatio in Edwards; move to modular.\n * b = True and y = sqrt(u / v) if (u / v) is square in F, and\n * b = False and y = sqrt(Z * (u / v)) otherwise.\n * @param Fp\n * @param Z\n * @returns\n */\nexport function SWUFpSqrtRatio(Fp, Z) {\n    // Generic implementation\n    const q = Fp.ORDER;\n    let l = _0n;\n    for (let o = q - _1n; o % _2n === _0n; o /= _2n)\n        l += _1n;\n    const c1 = l; // 1. c1, the largest integer such that 2^c1 divides q - 1.\n    // We need 2n ** c1 and 2n ** (c1-1). We can't use **; but we can use <<.\n    // 2n ** c1 == 2n << (c1-1)\n    const _2n_pow_c1_1 = _2n << (c1 - _1n - _1n);\n    const _2n_pow_c1 = _2n_pow_c1_1 * _2n;\n    const c2 = (q - _1n) / _2n_pow_c1; // 2. c2 = (q - 1) / (2^c1)  # Integer arithmetic\n    const c3 = (c2 - _1n) / _2n; // 3. c3 = (c2 - 1) / 2            # Integer arithmetic\n    const c4 = _2n_pow_c1 - _1n; // 4. c4 = 2^c1 - 1                # Integer arithmetic\n    const c5 = _2n_pow_c1_1; // 5. c5 = 2^(c1 - 1)                  # Integer arithmetic\n    const c6 = Fp.pow(Z, c2); // 6. c6 = Z^c2\n    const c7 = Fp.pow(Z, (c2 + _1n) / _2n); // 7. c7 = Z^((c2 + 1) / 2)\n    let sqrtRatio = (u, v) => {\n        let tv1 = c6; // 1. tv1 = c6\n        let tv2 = Fp.pow(v, c4); // 2. tv2 = v^c4\n        let tv3 = Fp.sqr(tv2); // 3. tv3 = tv2^2\n        tv3 = Fp.mul(tv3, v); // 4. tv3 = tv3 * v\n        let tv5 = Fp.mul(u, tv3); // 5. tv5 = u * tv3\n        tv5 = Fp.pow(tv5, c3); // 6. tv5 = tv5^c3\n        tv5 = Fp.mul(tv5, tv2); // 7. tv5 = tv5 * tv2\n        tv2 = Fp.mul(tv5, v); // 8. tv2 = tv5 * v\n        tv3 = Fp.mul(tv5, u); // 9. tv3 = tv5 * u\n        let tv4 = Fp.mul(tv3, tv2); // 10. tv4 = tv3 * tv2\n        tv5 = Fp.pow(tv4, c5); // 11. tv5 = tv4^c5\n        let isQR = Fp.eql(tv5, Fp.ONE); // 12. isQR = tv5 == 1\n        tv2 = Fp.mul(tv3, c7); // 13. tv2 = tv3 * c7\n        tv5 = Fp.mul(tv4, tv1); // 14. tv5 = tv4 * tv1\n        tv3 = Fp.cmov(tv2, tv3, isQR); // 15. tv3 = CMOV(tv2, tv3, isQR)\n        tv4 = Fp.cmov(tv5, tv4, isQR); // 16. tv4 = CMOV(tv5, tv4, isQR)\n        // 17. for i in (c1, c1 - 1, ..., 2):\n        for (let i = c1; i > _1n; i--) {\n            let tv5 = i - _2n; // 18.    tv5 = i - 2\n            tv5 = _2n << (tv5 - _1n); // 19.    tv5 = 2^tv5\n            let tvv5 = Fp.pow(tv4, tv5); // 20.    tv5 = tv4^tv5\n            const e1 = Fp.eql(tvv5, Fp.ONE); // 21.    e1 = tv5 == 1\n            tv2 = Fp.mul(tv3, tv1); // 22.    tv2 = tv3 * tv1\n            tv1 = Fp.mul(tv1, tv1); // 23.    tv1 = tv1 * tv1\n            tvv5 = Fp.mul(tv4, tv1); // 24.    tv5 = tv4 * tv1\n            tv3 = Fp.cmov(tv2, tv3, e1); // 25.    tv3 = CMOV(tv2, tv3, e1)\n            tv4 = Fp.cmov(tvv5, tv4, e1); // 26.    tv4 = CMOV(tv5, tv4, e1)\n        }\n        return { isValid: isQR, value: tv3 };\n    };\n    if (Fp.ORDER % _4n === _3n) {\n        // sqrt_ratio_3mod4(u, v)\n        const c1 = (Fp.ORDER - _3n) / _4n; // 1. c1 = (q - 3) / 4     # Integer arithmetic\n        const c2 = Fp.sqrt(Fp.neg(Z)); // 2. c2 = sqrt(-Z)\n        sqrtRatio = (u, v) => {\n            let tv1 = Fp.sqr(v); // 1. tv1 = v^2\n            const tv2 = Fp.mul(u, v); // 2. tv2 = u * v\n            tv1 = Fp.mul(tv1, tv2); // 3. tv1 = tv1 * tv2\n            let y1 = Fp.pow(tv1, c1); // 4. y1 = tv1^c1\n            y1 = Fp.mul(y1, tv2); // 5. y1 = y1 * tv2\n            const y2 = Fp.mul(y1, c2); // 6. y2 = y1 * c2\n            const tv3 = Fp.mul(Fp.sqr(y1), v); // 7. tv3 = y1^2; 8. tv3 = tv3 * v\n            const isQR = Fp.eql(tv3, u); // 9. isQR = tv3 == u\n            let y = Fp.cmov(y2, y1, isQR); // 10. y = CMOV(y2, y1, isQR)\n            return { isValid: isQR, value: y }; // 11. return (isQR, y) isQR ? y : y*c2\n        };\n    }\n    // No curves uses that\n    // if (Fp.ORDER % _8n === _5n) // sqrt_ratio_5mod8\n    return sqrtRatio;\n}\n/**\n * Simplified Shallue-van de Woestijne-Ulas Method\n * https://www.rfc-editor.org/rfc/rfc9380#section-6.6.2\n */\nexport function mapToCurveSimpleSWU(Fp, opts) {\n    mod.validateField(Fp);\n    if (!Fp.isValid(opts.A) || !Fp.isValid(opts.B) || !Fp.isValid(opts.Z))\n        throw new Error('mapToCurveSimpleSWU: invalid opts');\n    const sqrtRatio = SWUFpSqrtRatio(Fp, opts.Z);\n    if (!Fp.isOdd)\n        throw new Error('Fp.isOdd is not implemented!');\n    // Input: u, an element of F.\n    // Output: (x, y), a point on E.\n    return (u) => {\n        // prettier-ignore\n        let tv1, tv2, tv3, tv4, tv5, tv6, x, y;\n        tv1 = Fp.sqr(u); // 1.  tv1 = u^2\n        tv1 = Fp.mul(tv1, opts.Z); // 2.  tv1 = Z * tv1\n        tv2 = Fp.sqr(tv1); // 3.  tv2 = tv1^2\n        tv2 = Fp.add(tv2, tv1); // 4.  tv2 = tv2 + tv1\n        tv3 = Fp.add(tv2, Fp.ONE); // 5.  tv3 = tv2 + 1\n        tv3 = Fp.mul(tv3, opts.B); // 6.  tv3 = B * tv3\n        tv4 = Fp.cmov(opts.Z, Fp.neg(tv2), !Fp.eql(tv2, Fp.ZERO)); // 7.  tv4 = CMOV(Z, -tv2, tv2 != 0)\n        tv4 = Fp.mul(tv4, opts.A); // 8.  tv4 = A * tv4\n        tv2 = Fp.sqr(tv3); // 9.  tv2 = tv3^2\n        tv6 = Fp.sqr(tv4); // 10. tv6 = tv4^2\n        tv5 = Fp.mul(tv6, opts.A); // 11. tv5 = A * tv6\n        tv2 = Fp.add(tv2, tv5); // 12. tv2 = tv2 + tv5\n        tv2 = Fp.mul(tv2, tv3); // 13. tv2 = tv2 * tv3\n        tv6 = Fp.mul(tv6, tv4); // 14. tv6 = tv6 * tv4\n        tv5 = Fp.mul(tv6, opts.B); // 15. tv5 = B * tv6\n        tv2 = Fp.add(tv2, tv5); // 16. tv2 = tv2 + tv5\n        x = Fp.mul(tv1, tv3); // 17.   x = tv1 * tv3\n        const { isValid, value } = sqrtRatio(tv2, tv6); // 18. (is_gx1_square, y1) = sqrt_ratio(tv2, tv6)\n        y = Fp.mul(tv1, u); // 19.   y = tv1 * u  -> Z * u^3 * y1\n        y = Fp.mul(y, value); // 20.   y = y * y1\n        x = Fp.cmov(x, tv3, isValid); // 21.   x = CMOV(x, tv3, is_gx1_square)\n        y = Fp.cmov(y, value, isValid); // 22.   y = CMOV(y, y1, is_gx1_square)\n        const e1 = Fp.isOdd(u) === Fp.isOdd(y); // 23.  e1 = sgn0(u) == sgn0(y)\n        y = Fp.cmov(Fp.neg(y), y, e1); // 24.   y = CMOV(-y, y, e1)\n        x = Fp.div(x, tv4); // 25.   x = x / tv4\n        return { x, y };\n    };\n}\n//# sourceMappingURL=weierstrass.js.map","/**\n * Utilities for short weierstrass curves, combined with noble-hashes.\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { hmac } from '@noble/hashes/hmac';\nimport { concatBytes, randomBytes } from '@noble/hashes/utils';\nimport { weierstrass } from './abstract/weierstrass.js';\n/** connects noble-curves to noble-hashes */\nexport function getHash(hash) {\n    return {\n        hash,\n        hmac: (key, ...msgs) => hmac(hash, key, concatBytes(...msgs)),\n        randomBytes,\n    };\n}\nexport function createCurve(curveDef, defHash) {\n    const create = (hash) => weierstrass({ ...curveDef, ...getHash(hash) });\n    return { ...create(defHash), create };\n}\n//# sourceMappingURL=_shortw_utils.js.map","/**\n * NIST secp256k1. See [pdf](https://www.secg.org/sec2-v2.pdf).\n *\n * Seems to be rigid (not backdoored)\n * [as per discussion](https://bitcointalk.org/index.php?topic=289795.msg3183975#msg3183975).\n *\n * secp256k1 belongs to Koblitz curves: it has efficiently computable endomorphism.\n * Endomorphism uses 2x less RAM, speeds up precomputation by 2x and ECDH / key recovery by 20%.\n * For precomputed wNAF it trades off 1/2 init time & 1/3 ram for 20% perf hit.\n * [See explanation](https://gist.github.com/paulmillr/eb670806793e84df628a7c434a873066).\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha256 } from '@noble/hashes/sha256';\nimport { randomBytes } from '@noble/hashes/utils';\nimport { createCurve } from './_shortw_utils.js';\nimport { createHasher, isogenyMap } from './abstract/hash-to-curve.js';\nimport { Field, mod, pow2 } from './abstract/modular.js';\nimport { inRange, aInRange, bytesToNumberBE, concatBytes, ensureBytes, numberToBytesBE, } from './abstract/utils.js';\nimport { mapToCurveSimpleSWU } from './abstract/weierstrass.js';\nconst secp256k1P = BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f');\nconst secp256k1N = BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141');\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst divNearest = (a, b) => (a + b / _2n) / b;\n/**\n * √n = n^((p+1)/4) for fields p = 3 mod 4. We unwrap the loop and multiply bit-by-bit.\n * (P+1n/4n).toString(2) would produce bits [223x 1, 0, 22x 1, 4x 0, 11, 00]\n */\nfunction sqrtMod(y) {\n    const P = secp256k1P;\n    // prettier-ignore\n    const _3n = BigInt(3), _6n = BigInt(6), _11n = BigInt(11), _22n = BigInt(22);\n    // prettier-ignore\n    const _23n = BigInt(23), _44n = BigInt(44), _88n = BigInt(88);\n    const b2 = (y * y * y) % P; // x^3, 11\n    const b3 = (b2 * b2 * y) % P; // x^7\n    const b6 = (pow2(b3, _3n, P) * b3) % P;\n    const b9 = (pow2(b6, _3n, P) * b3) % P;\n    const b11 = (pow2(b9, _2n, P) * b2) % P;\n    const b22 = (pow2(b11, _11n, P) * b11) % P;\n    const b44 = (pow2(b22, _22n, P) * b22) % P;\n    const b88 = (pow2(b44, _44n, P) * b44) % P;\n    const b176 = (pow2(b88, _88n, P) * b88) % P;\n    const b220 = (pow2(b176, _44n, P) * b44) % P;\n    const b223 = (pow2(b220, _3n, P) * b3) % P;\n    const t1 = (pow2(b223, _23n, P) * b22) % P;\n    const t2 = (pow2(t1, _6n, P) * b2) % P;\n    const root = pow2(t2, _2n, P);\n    if (!Fpk1.eql(Fpk1.sqr(root), y))\n        throw new Error('Cannot find square root');\n    return root;\n}\nconst Fpk1 = Field(secp256k1P, undefined, undefined, { sqrt: sqrtMod });\n/**\n * secp256k1 short weierstrass curve and ECDSA signatures over it.\n *\n * @example\n * import { secp256k1 } from '@noble/curves/secp256k1';\n *\n * const priv = secp256k1.utils.randomPrivateKey();\n * const pub = secp256k1.getPublicKey(priv);\n * const msg = new Uint8Array(32).fill(1); // message hash (not message) in ecdsa\n * const sig = secp256k1.sign(msg, priv); // `{prehash: true}` option is available\n * const isValid = secp256k1.verify(sig, msg, pub) === true;\n */\nexport const secp256k1 = createCurve({\n    a: BigInt(0), // equation params: a, b\n    b: BigInt(7),\n    Fp: Fpk1, // Field's prime: 2n**256n - 2n**32n - 2n**9n - 2n**8n - 2n**7n - 2n**6n - 2n**4n - 1n\n    n: secp256k1N, // Curve order, total count of valid points in the field\n    // Base point (x, y) aka generator point\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    h: BigInt(1), // Cofactor\n    lowS: true, // Allow only low-S signatures by default in sign() and verify()\n    endo: {\n        // Endomorphism, see above\n        beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n        splitScalar: (k) => {\n            const n = secp256k1N;\n            const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n            const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n            const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n            const b2 = a1;\n            const POW_2_128 = BigInt('0x100000000000000000000000000000000'); // (2n**128n).toString(16)\n            const c1 = divNearest(b2 * k, n);\n            const c2 = divNearest(-b1 * k, n);\n            let k1 = mod(k - c1 * a1 - c2 * a2, n);\n            let k2 = mod(-c1 * b1 - c2 * b2, n);\n            const k1neg = k1 > POW_2_128;\n            const k2neg = k2 > POW_2_128;\n            if (k1neg)\n                k1 = n - k1;\n            if (k2neg)\n                k2 = n - k2;\n            if (k1 > POW_2_128 || k2 > POW_2_128) {\n                throw new Error('splitScalar: Endomorphism failed, k=' + k);\n            }\n            return { k1neg, k1, k2neg, k2 };\n        },\n    },\n}, sha256);\n// Schnorr signatures are superior to ECDSA from above. Below is Schnorr-specific BIP0340 code.\n// https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\nconst _0n = BigInt(0);\n/** An object mapping tags to their tagged hash prefix of [SHA256(tag) | SHA256(tag)] */\nconst TAGGED_HASH_PREFIXES = {};\nfunction taggedHash(tag, ...messages) {\n    let tagP = TAGGED_HASH_PREFIXES[tag];\n    if (tagP === undefined) {\n        const tagH = sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n        tagP = concatBytes(tagH, tagH);\n        TAGGED_HASH_PREFIXES[tag] = tagP;\n    }\n    return sha256(concatBytes(tagP, ...messages));\n}\n// ECDSA compact points are 33-byte. Schnorr is 32: we strip first byte 0x02 or 0x03\nconst pointToBytes = (point) => point.toRawBytes(true).slice(1);\nconst numTo32b = (n) => numberToBytesBE(n, 32);\nconst modP = (x) => mod(x, secp256k1P);\nconst modN = (x) => mod(x, secp256k1N);\nconst Point = secp256k1.ProjectivePoint;\nconst GmulAdd = (Q, a, b) => Point.BASE.multiplyAndAddUnsafe(Q, a, b);\n// Calculate point, scalar and bytes\nfunction schnorrGetExtPubKey(priv) {\n    let d_ = secp256k1.utils.normPrivateKeyToScalar(priv); // same method executed in fromPrivateKey\n    let p = Point.fromPrivateKey(d_); // P = d'⋅G; 0 < d' < n check is done inside\n    const scalar = p.hasEvenY() ? d_ : modN(-d_);\n    return { scalar: scalar, bytes: pointToBytes(p) };\n}\n/**\n * lift_x from BIP340. Convert 32-byte x coordinate to elliptic curve point.\n * @returns valid point checked for being on-curve\n */\nfunction lift_x(x) {\n    aInRange('x', x, _1n, secp256k1P); // Fail if x ≥ p.\n    const xx = modP(x * x);\n    const c = modP(xx * x + BigInt(7)); // Let c = x³ + 7 mod p.\n    let y = sqrtMod(c); // Let y = c^(p+1)/4 mod p.\n    if (y % _2n !== _0n)\n        y = modP(-y); // Return the unique point P such that x(P) = x and\n    const p = new Point(x, y, _1n); // y(P) = y if y mod 2 = 0 or y(P) = p-y otherwise.\n    p.assertValidity();\n    return p;\n}\nconst num = bytesToNumberBE;\n/**\n * Create tagged hash, convert it to bigint, reduce modulo-n.\n */\nfunction challenge(...args) {\n    return modN(num(taggedHash('BIP0340/challenge', ...args)));\n}\n/**\n * Schnorr public key is just `x` coordinate of Point as per BIP340.\n */\nfunction schnorrGetPublicKey(privateKey) {\n    return schnorrGetExtPubKey(privateKey).bytes; // d'=int(sk). Fail if d'=0 or d'≥n. Ret bytes(d'⋅G)\n}\n/**\n * Creates Schnorr signature as per BIP340. Verifies itself before returning anything.\n * auxRand is optional and is not the sole source of k generation: bad CSPRNG won't be dangerous.\n */\nfunction schnorrSign(message, privateKey, auxRand = randomBytes(32)) {\n    const m = ensureBytes('message', message);\n    const { bytes: px, scalar: d } = schnorrGetExtPubKey(privateKey); // checks for isWithinCurveOrder\n    const a = ensureBytes('auxRand', auxRand, 32); // Auxiliary random data a: a 32-byte array\n    const t = numTo32b(d ^ num(taggedHash('BIP0340/aux', a))); // Let t be the byte-wise xor of bytes(d) and hash/aux(a)\n    const rand = taggedHash('BIP0340/nonce', t, px, m); // Let rand = hash/nonce(t || bytes(P) || m)\n    const k_ = modN(num(rand)); // Let k' = int(rand) mod n\n    if (k_ === _0n)\n        throw new Error('sign failed: k is zero'); // Fail if k' = 0.\n    const { bytes: rx, scalar: k } = schnorrGetExtPubKey(k_); // Let R = k'⋅G.\n    const e = challenge(rx, px, m); // Let e = int(hash/challenge(bytes(R) || bytes(P) || m)) mod n.\n    const sig = new Uint8Array(64); // Let sig = bytes(R) || bytes((k + ed) mod n).\n    sig.set(rx, 0);\n    sig.set(numTo32b(modN(k + e * d)), 32);\n    // If Verify(bytes(P), m, sig) (see below) returns failure, abort\n    if (!schnorrVerify(sig, m, px))\n        throw new Error('sign: Invalid signature produced');\n    return sig;\n}\n/**\n * Verifies Schnorr signature.\n * Will swallow errors & return false except for initial type validation of arguments.\n */\nfunction schnorrVerify(signature, message, publicKey) {\n    const sig = ensureBytes('signature', signature, 64);\n    const m = ensureBytes('message', message);\n    const pub = ensureBytes('publicKey', publicKey, 32);\n    try {\n        const P = lift_x(num(pub)); // P = lift_x(int(pk)); fail if that fails\n        const r = num(sig.subarray(0, 32)); // Let r = int(sig[0:32]); fail if r ≥ p.\n        if (!inRange(r, _1n, secp256k1P))\n            return false;\n        const s = num(sig.subarray(32, 64)); // Let s = int(sig[32:64]); fail if s ≥ n.\n        if (!inRange(s, _1n, secp256k1N))\n            return false;\n        const e = challenge(numTo32b(r), pointToBytes(P), m); // int(challenge(bytes(r)||bytes(P)||m))%n\n        const R = GmulAdd(P, s, modN(-e)); // R = s⋅G - e⋅P\n        if (!R || !R.hasEvenY() || R.toAffine().x !== r)\n            return false; // -eP == (n-e)P\n        return true; // Fail if is_infinite(R) / not has_even_y(R) / x(R) ≠ r.\n    }\n    catch (error) {\n        return false;\n    }\n}\n/**\n * Schnorr signatures over secp256k1.\n * https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\n * @example\n * import { schnorr } from '@noble/curves/secp256k1';\n * const priv = schnorr.utils.randomPrivateKey();\n * const pub = schnorr.getPublicKey(priv);\n * const msg = new TextEncoder().encode('hello');\n * const sig = schnorr.sign(msg, priv);\n * const isValid = schnorr.verify(sig, msg, pub);\n */\nexport const schnorr = /* @__PURE__ */ (() => ({\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    utils: {\n        randomPrivateKey: secp256k1.utils.randomPrivateKey,\n        lift_x,\n        pointToBytes,\n        numberToBytesBE,\n        bytesToNumberBE,\n        taggedHash,\n        mod,\n    },\n}))();\nconst isoMap = /* @__PURE__ */ (() => isogenyMap(Fpk1, [\n    // xNum\n    [\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7',\n        '0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581',\n        '0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262',\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c',\n    ],\n    // xDen\n    [\n        '0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b',\n        '0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n    // yNum\n    [\n        '0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c',\n        '0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3',\n        '0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931',\n        '0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84',\n    ],\n    // yDen\n    [\n        '0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b',\n        '0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573',\n        '0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n].map((i) => i.map((j) => BigInt(j)))))();\nconst mapSWU = /* @__PURE__ */ (() => mapToCurveSimpleSWU(Fpk1, {\n    A: BigInt('0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533'),\n    B: BigInt('1771'),\n    Z: Fpk1.create(BigInt('-11')),\n}))();\nconst htf = /* @__PURE__ */ (() => createHasher(secp256k1.ProjectivePoint, (scalars) => {\n    const { x, y } = mapSWU(Fpk1.create(scalars[0]));\n    return isoMap(x, y);\n}, {\n    DST: 'secp256k1_XMD:SHA-256_SSWU_RO_',\n    encodeDST: 'secp256k1_XMD:SHA-256_SSWU_NU_',\n    p: Fpk1.ORDER,\n    m: 1,\n    k: 128,\n    expand: 'xmd',\n    hash: sha256,\n}))();\n/** secp256k1 hash-to-curve from [RFC 9380](https://www.rfc-editor.org/rfc/rfc9380). */\nexport const hashToCurve = /* @__PURE__ */ (() => htf.hashToCurve)();\n/** secp256k1 encode-to-curve from [RFC 9380](https://www.rfc-editor.org/rfc/rfc9380). */\nexport const encodeToCurve = /* @__PURE__ */ (() => htf.encodeToCurve)();\n//# sourceMappingURL=secp256k1.js.map","/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nfunction isBytes(a) {\n    return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\nfunction isArrayOf(isString, arr) {\n    if (!Array.isArray(arr))\n        return false;\n    if (arr.length === 0)\n        return true;\n    if (isString) {\n        return arr.every((item) => typeof item === 'string');\n    }\n    else {\n        return arr.every((item) => Number.isSafeInteger(item));\n    }\n}\n// no abytes: seems to have 10% slowdown. Why?!\nfunction afn(input) {\n    if (typeof input !== 'function')\n        throw new Error('function expected');\n    return true;\n}\nfunction astr(label, input) {\n    if (typeof input !== 'string')\n        throw new Error(`${label}: string expected`);\n    return true;\n}\nfunction anumber(n) {\n    if (!Number.isSafeInteger(n))\n        throw new Error(`invalid integer: ${n}`);\n}\nexport const assertNumber = anumber;\nfunction aArr(input) {\n    if (!Array.isArray(input))\n        throw new Error('array expected');\n}\nfunction astrArr(label, input) {\n    if (!isArrayOf(true, input))\n        throw new Error(`${label}: array of strings expected`);\n}\nfunction anumArr(label, input) {\n    if (!isArrayOf(false, input))\n        throw new Error(`${label}: array of numbers expected`);\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction chain(...args) {\n    const id = (a) => a;\n    // Wrap call in closure so JIT can inline calls\n    const wrap = (a, b) => (c) => a(b(c));\n    // Construct chain of args[-1].encode(args[-2].encode([...]))\n    const encode = args.map((x) => x.encode).reduceRight(wrap, id);\n    // Construct chain of args[0].decode(args[1].decode(...))\n    const decode = args.map((x) => x.decode).reduce(wrap, id);\n    return { encode, decode };\n}\n/**\n * Encodes integer radix representation to array of strings using alphabet and back.\n * Could also be array of strings.\n * @__NO_SIDE_EFFECTS__\n */\nfunction alphabet(letters) {\n    // mapping 1 to \"b\"\n    const lettersA = typeof letters === 'string' ? letters.split('') : letters;\n    const len = lettersA.length;\n    astrArr('alphabet', lettersA);\n    // mapping \"b\" to 1\n    const indexes = new Map(lettersA.map((l, i) => [l, i]));\n    return {\n        encode: (digits) => {\n            aArr(digits);\n            return digits.map((i) => {\n                if (!Number.isSafeInteger(i) || i < 0 || i >= len)\n                    throw new Error(`alphabet.encode: digit index outside alphabet \"${i}\". Allowed: ${letters}`);\n                return lettersA[i];\n            });\n        },\n        decode: (input) => {\n            aArr(input);\n            return input.map((letter) => {\n                astr('alphabet.decode', letter);\n                const i = indexes.get(letter);\n                if (i === undefined)\n                    throw new Error(`Unknown letter: \"${letter}\". Allowed: ${letters}`);\n                return i;\n            });\n        },\n    };\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction join(separator = '') {\n    astr('join', separator);\n    return {\n        encode: (from) => {\n            astrArr('join.decode', from);\n            return from.join(separator);\n        },\n        decode: (to) => {\n            astr('join.decode', to);\n            return to.split(separator);\n        },\n    };\n}\n/**\n * Pad strings array so it has integer number of bits\n * @__NO_SIDE_EFFECTS__\n */\nfunction padding(bits, chr = '=') {\n    anumber(bits);\n    astr('padding', chr);\n    return {\n        encode(data) {\n            astrArr('padding.encode', data);\n            while ((data.length * bits) % 8)\n                data.push(chr);\n            return data;\n        },\n        decode(input) {\n            astrArr('padding.decode', input);\n            let end = input.length;\n            if ((end * bits) % 8)\n                throw new Error('padding: invalid, string should have whole number of bytes');\n            for (; end > 0 && input[end - 1] === chr; end--) {\n                const last = end - 1;\n                const byte = last * bits;\n                if (byte % 8 === 0)\n                    throw new Error('padding: invalid, string has too much padding');\n            }\n            return input.slice(0, end);\n        },\n    };\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction normalize(fn) {\n    afn(fn);\n    return { encode: (from) => from, decode: (to) => fn(to) };\n}\n/**\n * Slow: O(n^2) time complexity\n */\nfunction convertRadix(data, from, to) {\n    // base 1 is impossible\n    if (from < 2)\n        throw new Error(`convertRadix: invalid from=${from}, base cannot be less than 2`);\n    if (to < 2)\n        throw new Error(`convertRadix: invalid to=${to}, base cannot be less than 2`);\n    aArr(data);\n    if (!data.length)\n        return [];\n    let pos = 0;\n    const res = [];\n    const digits = Array.from(data, (d) => {\n        anumber(d);\n        if (d < 0 || d >= from)\n            throw new Error(`invalid integer: ${d}`);\n        return d;\n    });\n    const dlen = digits.length;\n    while (true) {\n        let carry = 0;\n        let done = true;\n        for (let i = pos; i < dlen; i++) {\n            const digit = digits[i];\n            const fromCarry = from * carry;\n            const digitBase = fromCarry + digit;\n            if (!Number.isSafeInteger(digitBase) ||\n                fromCarry / from !== carry ||\n                digitBase - digit !== fromCarry) {\n                throw new Error('convertRadix: carry overflow');\n            }\n            const div = digitBase / to;\n            carry = digitBase % to;\n            const rounded = Math.floor(div);\n            digits[i] = rounded;\n            if (!Number.isSafeInteger(rounded) || rounded * to + carry !== digitBase)\n                throw new Error('convertRadix: carry overflow');\n            if (!done)\n                continue;\n            else if (!rounded)\n                pos = i;\n            else\n                done = false;\n        }\n        res.push(carry);\n        if (done)\n            break;\n    }\n    for (let i = 0; i < data.length - 1 && data[i] === 0; i++)\n        res.push(0);\n    return res.reverse();\n}\nconst gcd = (a, b) => (b === 0 ? a : gcd(b, a % b));\nconst radix2carry = /* @__NO_SIDE_EFFECTS__ */ (from, to) => from + (to - gcd(from, to));\nconst powers = /* @__PURE__ */ (() => {\n    let res = [];\n    for (let i = 0; i < 40; i++)\n        res.push(2 ** i);\n    return res;\n})();\n/**\n * Implemented with numbers, because BigInt is 5x slower\n */\nfunction convertRadix2(data, from, to, padding) {\n    aArr(data);\n    if (from <= 0 || from > 32)\n        throw new Error(`convertRadix2: wrong from=${from}`);\n    if (to <= 0 || to > 32)\n        throw new Error(`convertRadix2: wrong to=${to}`);\n    if (radix2carry(from, to) > 32) {\n        throw new Error(`convertRadix2: carry overflow from=${from} to=${to} carryBits=${radix2carry(from, to)}`);\n    }\n    let carry = 0;\n    let pos = 0; // bitwise position in current element\n    const max = powers[from];\n    const mask = powers[to] - 1;\n    const res = [];\n    for (const n of data) {\n        anumber(n);\n        if (n >= max)\n            throw new Error(`convertRadix2: invalid data word=${n} from=${from}`);\n        carry = (carry << from) | n;\n        if (pos + from > 32)\n            throw new Error(`convertRadix2: carry overflow pos=${pos} from=${from}`);\n        pos += from;\n        for (; pos >= to; pos -= to)\n            res.push(((carry >> (pos - to)) & mask) >>> 0);\n        const pow = powers[pos];\n        if (pow === undefined)\n            throw new Error('invalid carry');\n        carry &= pow - 1; // clean carry, otherwise it will cause overflow\n    }\n    carry = (carry << (to - pos)) & mask;\n    if (!padding && pos >= from)\n        throw new Error('Excess padding');\n    if (!padding && carry > 0)\n        throw new Error(`Non-zero padding: ${carry}`);\n    if (padding && pos > 0)\n        res.push(carry >>> 0);\n    return res;\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction radix(num) {\n    anumber(num);\n    const _256 = 2 ** 8;\n    return {\n        encode: (bytes) => {\n            if (!isBytes(bytes))\n                throw new Error('radix.encode input should be Uint8Array');\n            return convertRadix(Array.from(bytes), _256, num);\n        },\n        decode: (digits) => {\n            anumArr('radix.decode', digits);\n            return Uint8Array.from(convertRadix(digits, num, _256));\n        },\n    };\n}\n/**\n * If both bases are power of same number (like `2**8 <-> 2**64`),\n * there is a linear algorithm. For now we have implementation for power-of-two bases only.\n * @__NO_SIDE_EFFECTS__\n */\nfunction radix2(bits, revPadding = false) {\n    anumber(bits);\n    if (bits <= 0 || bits > 32)\n        throw new Error('radix2: bits should be in (0..32]');\n    if (radix2carry(8, bits) > 32 || radix2carry(bits, 8) > 32)\n        throw new Error('radix2: carry overflow');\n    return {\n        encode: (bytes) => {\n            if (!isBytes(bytes))\n                throw new Error('radix2.encode input should be Uint8Array');\n            return convertRadix2(Array.from(bytes), 8, bits, !revPadding);\n        },\n        decode: (digits) => {\n            anumArr('radix2.decode', digits);\n            return Uint8Array.from(convertRadix2(digits, bits, 8, revPadding));\n        },\n    };\n}\nfunction unsafeWrapper(fn) {\n    afn(fn);\n    return function (...args) {\n        try {\n            return fn.apply(null, args);\n        }\n        catch (e) { }\n    };\n}\nfunction checksum(len, fn) {\n    anumber(len);\n    afn(fn);\n    return {\n        encode(data) {\n            if (!isBytes(data))\n                throw new Error('checksum.encode: input should be Uint8Array');\n            const sum = fn(data).slice(0, len);\n            const res = new Uint8Array(data.length + len);\n            res.set(data);\n            res.set(sum, data.length);\n            return res;\n        },\n        decode(data) {\n            if (!isBytes(data))\n                throw new Error('checksum.decode: input should be Uint8Array');\n            const payload = data.slice(0, -len);\n            const oldChecksum = data.slice(-len);\n            const newChecksum = fn(payload).slice(0, len);\n            for (let i = 0; i < len; i++)\n                if (newChecksum[i] !== oldChecksum[i])\n                    throw new Error('Invalid checksum');\n            return payload;\n        },\n    };\n}\n// prettier-ignore\nexport const utils = {\n    alphabet, chain, checksum, convertRadix, convertRadix2, radix, radix2, join, padding,\n};\n// RFC 4648 aka RFC 3548\n// ---------------------\n/**\n * base16 encoding.\n */\nexport const base16 = chain(radix2(4), alphabet('0123456789ABCDEF'), join(''));\nexport const base32 = chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), padding(5), join(''));\nexport const base32nopad = chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), join(''));\nexport const base32hex = chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), padding(5), join(''));\nexport const base32hexnopad = chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), join(''));\nexport const base32crockford = chain(radix2(5), alphabet('0123456789ABCDEFGHJKMNPQRSTVWXYZ'), join(''), normalize((s) => s.toUpperCase().replace(/O/g, '0').replace(/[IL]/g, '1')));\n/**\n * base64 with padding. For no padding, use `base64nopad`.\n * @example\n * const b = base64.decode('A951'); // Uint8Array.from([ 3, 222, 117 ])\n * base64.encode(b); // 'A951'\n */\nexport const base64 = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), padding(6), join(''));\n/**\n * base64 without padding.\n */\nexport const base64nopad = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), join(''));\nexport const base64url = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), padding(6), join(''));\nexport const base64urlnopad = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), join(''));\n// base58 code\n// -----------\nconst genBase58 = /* @__NO_SIDE_EFFECTS__ */ (abc) => chain(radix(58), alphabet(abc), join(''));\n/**\n * Base58: base64 without characters +, /, 0, O, I, l.\n * Quadratic (O(n^2)) - so, can't be used on large inputs.\n */\nexport const base58 = genBase58('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz');\nexport const base58flickr = genBase58('123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ');\nexport const base58xrp = genBase58('rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz');\n// Data len (index) -> encoded block len\nconst XMR_BLOCK_LEN = [0, 2, 3, 5, 6, 7, 9, 10, 11];\n/**\n * XMR version of base58.\n * Done in 8-byte blocks (which equals 11 chars in decoding). Last (non-full) block padded with '1' to size in XMR_BLOCK_LEN.\n * Block encoding significantly reduces quadratic complexity of base58.\n */\nexport const base58xmr = {\n    encode(data) {\n        let res = '';\n        for (let i = 0; i < data.length; i += 8) {\n            const block = data.subarray(i, i + 8);\n            res += base58.encode(block).padStart(XMR_BLOCK_LEN[block.length], '1');\n        }\n        return res;\n    },\n    decode(str) {\n        let res = [];\n        for (let i = 0; i < str.length; i += 11) {\n            const slice = str.slice(i, i + 11);\n            const blockLen = XMR_BLOCK_LEN.indexOf(slice.length);\n            const block = base58.decode(slice);\n            for (let j = 0; j < block.length - blockLen; j++) {\n                if (block[j] !== 0)\n                    throw new Error('base58xmr: wrong padding');\n            }\n            res = res.concat(Array.from(block.slice(block.length - blockLen)));\n        }\n        return Uint8Array.from(res);\n    },\n};\nexport const createBase58check = (sha256) => chain(checksum(4, (data) => sha256(sha256(data))), base58);\n/**\n * Use `createBase58check` instead.\n * @deprecated\n */\nexport const base58check = createBase58check;\nconst BECH_ALPHABET = chain(alphabet('qpzry9x8gf2tvdw0s3jn54khce6mua7l'), join(''));\nconst POLYMOD_GENERATORS = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];\nfunction bech32Polymod(pre) {\n    const b = pre >> 25;\n    let chk = (pre & 0x1ffffff) << 5;\n    for (let i = 0; i < POLYMOD_GENERATORS.length; i++) {\n        if (((b >> i) & 1) === 1)\n            chk ^= POLYMOD_GENERATORS[i];\n    }\n    return chk;\n}\nfunction bechChecksum(prefix, words, encodingConst = 1) {\n    const len = prefix.length;\n    let chk = 1;\n    for (let i = 0; i < len; i++) {\n        const c = prefix.charCodeAt(i);\n        if (c < 33 || c > 126)\n            throw new Error(`Invalid prefix (${prefix})`);\n        chk = bech32Polymod(chk) ^ (c >> 5);\n    }\n    chk = bech32Polymod(chk);\n    for (let i = 0; i < len; i++)\n        chk = bech32Polymod(chk) ^ (prefix.charCodeAt(i) & 0x1f);\n    for (let v of words)\n        chk = bech32Polymod(chk) ^ v;\n    for (let i = 0; i < 6; i++)\n        chk = bech32Polymod(chk);\n    chk ^= encodingConst;\n    return BECH_ALPHABET.encode(convertRadix2([chk % powers[30]], 30, 5, false));\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction genBech32(encoding) {\n    const ENCODING_CONST = encoding === 'bech32' ? 1 : 0x2bc830a3;\n    const _words = radix2(5);\n    const fromWords = _words.decode;\n    const toWords = _words.encode;\n    const fromWordsUnsafe = unsafeWrapper(fromWords);\n    function encode(prefix, words, limit = 90) {\n        astr('bech32.encode prefix', prefix);\n        if (isBytes(words))\n            words = Array.from(words);\n        anumArr('bech32.encode', words);\n        const plen = prefix.length;\n        if (plen === 0)\n            throw new TypeError(`Invalid prefix length ${plen}`);\n        const actualLength = plen + 7 + words.length;\n        if (limit !== false && actualLength > limit)\n            throw new TypeError(`Length ${actualLength} exceeds limit ${limit}`);\n        const lowered = prefix.toLowerCase();\n        const sum = bechChecksum(lowered, words, ENCODING_CONST);\n        return `${lowered}1${BECH_ALPHABET.encode(words)}${sum}`;\n    }\n    function decode(str, limit = 90) {\n        astr('bech32.decode input', str);\n        const slen = str.length;\n        if (slen < 8 || (limit !== false && slen > limit))\n            throw new TypeError(`invalid string length: ${slen} (${str}). Expected (8..${limit})`);\n        // don't allow mixed case\n        const lowered = str.toLowerCase();\n        if (str !== lowered && str !== str.toUpperCase())\n            throw new Error(`String must be lowercase or uppercase`);\n        const sepIndex = lowered.lastIndexOf('1');\n        if (sepIndex === 0 || sepIndex === -1)\n            throw new Error(`Letter \"1\" must be present between prefix and data only`);\n        const prefix = lowered.slice(0, sepIndex);\n        const data = lowered.slice(sepIndex + 1);\n        if (data.length < 6)\n            throw new Error('Data must be at least 6 characters long');\n        const words = BECH_ALPHABET.decode(data).slice(0, -6);\n        const sum = bechChecksum(prefix, words, ENCODING_CONST);\n        if (!data.endsWith(sum))\n            throw new Error(`Invalid checksum in ${str}: expected \"${sum}\"`);\n        return { prefix, words };\n    }\n    const decodeUnsafe = unsafeWrapper(decode);\n    function decodeToBytes(str) {\n        const { prefix, words } = decode(str, false);\n        return { prefix, words, bytes: fromWords(words) };\n    }\n    function encodeFromBytes(prefix, bytes) {\n        return encode(prefix, toWords(bytes));\n    }\n    return {\n        encode,\n        decode,\n        encodeFromBytes,\n        decodeToBytes,\n        decodeUnsafe,\n        fromWords,\n        fromWordsUnsafe,\n        toWords,\n    };\n}\n/**\n * Low-level bech32 operations. Operates on words.\n */\nexport const bech32 = genBech32('bech32');\nexport const bech32m = genBech32('bech32m');\n/**\n * UTF-8-to-byte decoder. Uses built-in TextDecoder / TextEncoder.\n * @example\n * const b = utf8.decode(\"hey\"); // => new Uint8Array([ 104, 101, 121 ])\n * const str = utf8.encode(b); // \"hey\"\n */\nexport const utf8 = {\n    encode: (data) => new TextDecoder().decode(data),\n    decode: (str) => new TextEncoder().encode(str),\n};\n/**\n * hex string decoder.\n * @example\n * const b = hex.decode(\"0102ff\"); // => new Uint8Array([ 1, 2, 255 ])\n * const str = hex.encode(b); // \"0102ff\"\n */\nexport const hex = chain(radix2(4), alphabet('0123456789abcdef'), join(''), normalize((s) => {\n    if (typeof s !== 'string' || s.length % 2 !== 0)\n        throw new TypeError(`hex.decode: expected string, got ${typeof s} with length ${s.length}`);\n    return s.toLowerCase();\n}));\n// prettier-ignore\nconst CODERS = {\n    utf8, hex, base16, base32, base64, base64url, base58, base58xmr\n};\nconst coderTypeError = 'Invalid encoding type. Available types: utf8, hex, base16, base32, base64, base64url, base58, base58xmr';\nexport const bytesToString = (type, bytes) => {\n    if (typeof type !== 'string' || !CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (!isBytes(bytes))\n        throw new TypeError('bytesToString() expects Uint8Array');\n    return CODERS[type].encode(bytes);\n};\nexport const str = bytesToString; // as in python, but for bytes only\nexport const stringToBytes = (type, str) => {\n    if (!CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (typeof str !== 'string')\n        throw new TypeError('stringToBytes() expects string');\n    return CODERS[type].decode(str);\n};\nexport const bytes = stringToBytes;\n//# sourceMappingURL=index.js.map","// src/relay/pool/index.ts\nimport { EventEmitter as EventEmitter3 } from \"tseep\";\n\n// src/relay/index.ts\nimport debug from \"debug\";\nimport { EventEmitter as EventEmitter2 } from \"tseep\";\n\n// src/events/index.ts\nimport { EventEmitter } from \"tseep\";\n\n// src/outbox/write.ts\nfunction getRelaysForSync(ndk, author, type = \"write\") {\n  if (!ndk.outboxTracker) return void 0;\n  const item = ndk.outboxTracker.data.get(author);\n  if (!item) return void 0;\n  if (type === \"write\") {\n    return item.writeRelays;\n  } else {\n    return item.readRelays;\n  }\n}\nasync function getWriteRelaysFor(ndk, author, type = \"write\") {\n  if (!ndk.outboxTracker) return void 0;\n  if (!ndk.outboxTracker.data.has(author)) {\n    await ndk.outboxTracker.trackUsers([author]);\n  }\n  return getRelaysForSync(ndk, author, type);\n}\n\n// src/outbox/relay-ranking.ts\nfunction getTopRelaysForAuthors(ndk, authors) {\n  const relaysWithCount = /* @__PURE__ */ new Map();\n  authors.forEach((author) => {\n    const writeRelays = getRelaysForSync(ndk, author);\n    if (writeRelays) {\n      writeRelays.forEach((relay) => {\n        const count = relaysWithCount.get(relay) || 0;\n        relaysWithCount.set(relay, count + 1);\n      });\n    }\n  });\n  const sortedRelays = Array.from(relaysWithCount.entries()).sort((a, b) => b[1] - a[1]);\n  return sortedRelays.map((entry) => entry[0]);\n}\n\n// src/outbox/index.ts\nfunction getAllRelaysForAllPubkeys(ndk, pubkeys, type = \"read\") {\n  const pubkeysToRelays = /* @__PURE__ */ new Map();\n  const authorsMissingRelays = /* @__PURE__ */ new Set();\n  pubkeys.forEach((pubkey) => {\n    const relays = getRelaysForSync(ndk, pubkey, type);\n    if (relays && relays.size > 0) {\n      relays.forEach((relay) => {\n        const pubkeysInRelay = pubkeysToRelays.get(relay) || /* @__PURE__ */ new Set();\n        pubkeysInRelay.add(pubkey);\n      });\n      pubkeysToRelays.set(pubkey, relays);\n    } else {\n      authorsMissingRelays.add(pubkey);\n    }\n  });\n  return { pubkeysToRelays, authorsMissingRelays };\n}\nfunction chooseRelayCombinationForPubkeys(ndk, pubkeys, type, { count, preferredRelays } = {}) {\n  count ??= 2;\n  preferredRelays ??= /* @__PURE__ */ new Set();\n  const pool = ndk.pool;\n  const connectedRelays = pool.connectedRelays();\n  connectedRelays.forEach((relay) => {\n    preferredRelays.add(relay.url);\n  });\n  const relayToAuthorsMap = /* @__PURE__ */ new Map();\n  const { pubkeysToRelays, authorsMissingRelays } = getAllRelaysForAllPubkeys(ndk, pubkeys, type);\n  const sortedRelays = getTopRelaysForAuthors(ndk, pubkeys);\n  const addAuthorToRelay = (author, relay) => {\n    const authorsInRelay = relayToAuthorsMap.get(relay) || [];\n    authorsInRelay.push(author);\n    relayToAuthorsMap.set(relay, authorsInRelay);\n  };\n  for (const [author, authorRelays] of pubkeysToRelays.entries()) {\n    let missingRelayCount = count;\n    for (const relay of connectedRelays) {\n      if (authorRelays.has(relay.url)) {\n        addAuthorToRelay(author, relay.url);\n        missingRelayCount--;\n      }\n    }\n    for (const authorRelay of authorRelays) {\n      if (relayToAuthorsMap.has(authorRelay)) {\n        addAuthorToRelay(author, authorRelay);\n        missingRelayCount--;\n      }\n    }\n    if (missingRelayCount <= 0) continue;\n    for (const relay of sortedRelays) {\n      if (missingRelayCount <= 0) break;\n      if (authorRelays.has(relay)) {\n        addAuthorToRelay(author, relay);\n        missingRelayCount--;\n      }\n    }\n  }\n  for (const author of authorsMissingRelays) {\n    pool.permanentAndConnectedRelays().forEach((relay) => {\n      const authorsInRelay = relayToAuthorsMap.get(relay.url) || [];\n      authorsInRelay.push(author);\n      relayToAuthorsMap.set(relay.url, authorsInRelay);\n    });\n  }\n  return relayToAuthorsMap;\n}\n\n// src/outbox/read/with-authors.ts\nfunction getRelaysForFilterWithAuthors(ndk, authors, relayGoalPerAuthor = 2) {\n  return chooseRelayCombinationForPubkeys(ndk, authors, \"write\", { count: relayGoalPerAuthor });\n}\n\n// src/utils/normalize-url.ts\nfunction tryNormalizeRelayUrl(url) {\n  try {\n    return normalizeRelayUrl(url);\n  } catch {\n    return void 0;\n  }\n}\nfunction normalizeRelayUrl(url) {\n  let r = normalizeUrl(url.toLowerCase(), {\n    stripAuthentication: false,\n    stripWWW: false,\n    stripHash: true\n  });\n  if (!r.endsWith(\"/\")) {\n    r += \"/\";\n  }\n  return r;\n}\nfunction normalize(urls) {\n  const normalized = /* @__PURE__ */ new Set();\n  for (const url of urls) {\n    try {\n      normalized.add(normalizeRelayUrl(url));\n    } catch {\n    }\n  }\n  return Array.from(normalized);\n}\nvar DATA_URL_DEFAULT_MIME_TYPE = \"text/plain\";\nvar DATA_URL_DEFAULT_CHARSET = \"us-ascii\";\nvar testParameter = (name, filters) => filters.some((filter) => filter instanceof RegExp ? filter.test(name) : filter === name);\nvar supportedProtocols = /* @__PURE__ */ new Set([\"https:\", \"http:\", \"file:\"]);\nvar hasCustomProtocol = (urlString) => {\n  try {\n    const { protocol } = new URL(urlString);\n    return protocol.endsWith(\":\") && !protocol.includes(\".\") && !supportedProtocols.has(protocol);\n  } catch {\n    return false;\n  }\n};\nvar normalizeDataURL = (urlString, { stripHash }) => {\n  const match = /^data:(?<type>[^,]*?),(?<data>[^#]*?)(?:#(?<hash>.*))?$/.exec(urlString);\n  if (!match) {\n    throw new Error(`Invalid URL: ${urlString}`);\n  }\n  let type = match.groups?.type ?? \"\";\n  let data = match.groups?.data ?? \"\";\n  let hash = match.groups?.hash ?? \"\";\n  const mediaType = type.split(\";\");\n  hash = stripHash ? \"\" : hash;\n  let isBase64 = false;\n  if (mediaType[mediaType.length - 1] === \"base64\") {\n    mediaType.pop();\n    isBase64 = true;\n  }\n  const mimeType = mediaType.shift()?.toLowerCase() ?? \"\";\n  const attributes = mediaType.map((attribute) => {\n    let [key, value = \"\"] = attribute.split(\"=\").map((string) => string.trim());\n    if (key === \"charset\") {\n      value = value.toLowerCase();\n      if (value === DATA_URL_DEFAULT_CHARSET) {\n        return \"\";\n      }\n    }\n    return `${key}${value ? `=${value}` : \"\"}`;\n  }).filter(Boolean);\n  const normalizedMediaType = [...attributes];\n  if (isBase64) {\n    normalizedMediaType.push(\"base64\");\n  }\n  if (normalizedMediaType.length > 0 || mimeType && mimeType !== DATA_URL_DEFAULT_MIME_TYPE) {\n    normalizedMediaType.unshift(mimeType);\n  }\n  return `data:${normalizedMediaType.join(\";\")},${isBase64 ? data.trim() : data}${hash ? `#${hash}` : \"\"}`;\n};\nfunction normalizeUrl(urlString, options = {}) {\n  options = {\n    defaultProtocol: \"http\",\n    normalizeProtocol: true,\n    forceHttp: false,\n    forceHttps: false,\n    stripAuthentication: true,\n    stripHash: false,\n    stripTextFragment: true,\n    stripWWW: true,\n    removeQueryParameters: [/^utm_\\w+/i],\n    removeTrailingSlash: true,\n    removeSingleSlash: true,\n    removeDirectoryIndex: false,\n    removeExplicitPort: false,\n    sortQueryParameters: true,\n    ...options\n  };\n  if (typeof options.defaultProtocol === \"string\" && !options.defaultProtocol.endsWith(\":\")) {\n    options.defaultProtocol = `${options.defaultProtocol}:`;\n  }\n  urlString = urlString.trim();\n  if (/^data:/i.test(urlString)) {\n    return normalizeDataURL(urlString, options);\n  }\n  if (hasCustomProtocol(urlString)) {\n    return urlString;\n  }\n  const hasRelativeProtocol = urlString.startsWith(\"//\");\n  const isRelativeUrl = !hasRelativeProtocol && /^\\.*\\//.test(urlString);\n  if (!isRelativeUrl) {\n    urlString = urlString.replace(/^(?!(?:\\w+:)?\\/\\/)|^\\/\\//, options.defaultProtocol);\n  }\n  const urlObject = new URL(urlString);\n  if (options.forceHttp && options.forceHttps) {\n    throw new Error(\"The `forceHttp` and `forceHttps` options cannot be used together\");\n  }\n  if (options.forceHttp && urlObject.protocol === \"https:\") {\n    urlObject.protocol = \"http:\";\n  }\n  if (options.forceHttps && urlObject.protocol === \"http:\") {\n    urlObject.protocol = \"https:\";\n  }\n  if (options.stripAuthentication) {\n    urlObject.username = \"\";\n    urlObject.password = \"\";\n  }\n  if (options.stripHash) {\n    urlObject.hash = \"\";\n  } else if (options.stripTextFragment) {\n    urlObject.hash = urlObject.hash.replace(/#?:~:text.*?$/i, \"\");\n  }\n  if (urlObject.pathname) {\n    const protocolRegex = /\\b[a-z][a-z\\d+\\-.]{1,50}:\\/\\//g;\n    let lastIndex = 0;\n    let result = \"\";\n    for (; ; ) {\n      const match = protocolRegex.exec(urlObject.pathname);\n      if (!match) {\n        break;\n      }\n      const protocol = match[0];\n      const protocolAtIndex = match.index;\n      const intermediate = urlObject.pathname.slice(lastIndex, protocolAtIndex);\n      result += intermediate.replace(/\\/{2,}/g, \"/\");\n      result += protocol;\n      lastIndex = protocolAtIndex + protocol.length;\n    }\n    const remnant = urlObject.pathname.slice(lastIndex, urlObject.pathname.length);\n    result += remnant.replace(/\\/{2,}/g, \"/\");\n    urlObject.pathname = result;\n  }\n  if (urlObject.pathname) {\n    try {\n      urlObject.pathname = decodeURI(urlObject.pathname);\n    } catch {\n    }\n  }\n  if (options.removeDirectoryIndex === true) {\n    options.removeDirectoryIndex = [/^index\\.[a-z]+$/];\n  }\n  if (Array.isArray(options.removeDirectoryIndex) && options.removeDirectoryIndex.length > 0) {\n    let pathComponents = urlObject.pathname.split(\"/\");\n    const lastComponent = pathComponents[pathComponents.length - 1];\n    if (testParameter(lastComponent, options.removeDirectoryIndex)) {\n      pathComponents = pathComponents.slice(0, -1);\n      urlObject.pathname = pathComponents.slice(1).join(\"/\") + \"/\";\n    }\n  }\n  if (urlObject.hostname) {\n    urlObject.hostname = urlObject.hostname.replace(/\\.$/, \"\");\n    if (options.stripWWW && /^www\\.(?!www\\.)[a-z\\-\\d]{1,63}\\.[a-z.\\-\\d]{2,63}$/.test(urlObject.hostname)) {\n      urlObject.hostname = urlObject.hostname.replace(/^www\\./, \"\");\n    }\n  }\n  if (Array.isArray(options.removeQueryParameters)) {\n    for (const key of [...urlObject.searchParams.keys()]) {\n      if (testParameter(key, options.removeQueryParameters)) {\n        urlObject.searchParams.delete(key);\n      }\n    }\n  }\n  if (!Array.isArray(options.keepQueryParameters) && options.removeQueryParameters === true) {\n    urlObject.search = \"\";\n  }\n  if (Array.isArray(options.keepQueryParameters) && options.keepQueryParameters.length > 0) {\n    for (const key of [...urlObject.searchParams.keys()]) {\n      if (!testParameter(key, options.keepQueryParameters)) {\n        urlObject.searchParams.delete(key);\n      }\n    }\n  }\n  if (options.sortQueryParameters) {\n    urlObject.searchParams.sort();\n    try {\n      urlObject.search = decodeURIComponent(urlObject.search);\n    } catch {\n    }\n  }\n  if (options.removeTrailingSlash) {\n    urlObject.pathname = urlObject.pathname.replace(/\\/$/, \"\");\n  }\n  if (options.removeExplicitPort && urlObject.port) {\n    urlObject.port = \"\";\n  }\n  const oldUrlString = urlString;\n  urlString = urlObject.toString();\n  if (!options.removeSingleSlash && urlObject.pathname === \"/\" && !oldUrlString.endsWith(\"/\") && urlObject.hash === \"\") {\n    urlString = urlString.replace(/\\/$/, \"\");\n  }\n  if ((options.removeTrailingSlash || urlObject.pathname === \"/\") && urlObject.hash === \"\" && options.removeSingleSlash) {\n    urlString = urlString.replace(/\\/$/, \"\");\n  }\n  if (hasRelativeProtocol && !options.normalizeProtocol) {\n    urlString = urlString.replace(/^http:\\/\\//, \"//\");\n  }\n  if (options.stripProtocol) {\n    urlString = urlString.replace(/^(?:https?:)?\\/\\//, \"\");\n  }\n  return urlString;\n}\n\n// src/relay/sets/index.ts\nvar NDKPublishError = class extends Error {\n  errors;\n  publishedToRelays;\n  /**\n   * Intended relay set where the publishing was intended to happen.\n   */\n  intendedRelaySet;\n  constructor(message, errors, publishedToRelays, intendedRelaySet) {\n    super(message);\n    this.errors = errors;\n    this.publishedToRelays = publishedToRelays;\n    this.intendedRelaySet = intendedRelaySet;\n  }\n  get relayErrors() {\n    const errors = [];\n    for (const [relay, err] of this.errors) {\n      errors.push(`${relay.url}: ${err}`);\n    }\n    return errors.join(\"\\n\");\n  }\n};\nvar NDKRelaySet = class _NDKRelaySet {\n  relays;\n  debug;\n  ndk;\n  pool;\n  constructor(relays, ndk, pool) {\n    this.relays = relays;\n    this.ndk = ndk;\n    this.pool = pool ?? ndk.pool;\n    this.debug = ndk.debug.extend(\"relayset\");\n  }\n  /**\n   * Adds a relay to this set.\n   */\n  addRelay(relay) {\n    this.relays.add(relay);\n  }\n  get relayUrls() {\n    return Array.from(this.relays).map((r) => r.url);\n  }\n  /**\n   * Creates a relay set from a list of relay URLs.\n   *\n   * If no connection to the relay is found in the pool it will temporarily\n   * connect to it.\n   *\n   * @param relayUrls - list of relay URLs to include in this set\n   * @param ndk\n   * @param connect - whether to connect to the relay immediately if it was already in the pool but not connected\n   * @returns NDKRelaySet\n   */\n  static fromRelayUrls(relayUrls, ndk, connect = true, pool) {\n    pool = pool ?? ndk.pool;\n    if (!pool) throw new Error(\"No pool provided\");\n    const relays = /* @__PURE__ */ new Set();\n    for (const url of relayUrls) {\n      const relay = pool.relays.get(normalizeRelayUrl(url));\n      if (relay) {\n        if (relay.status < 5 /* CONNECTED */ && connect) {\n          relay.connect();\n        }\n        relays.add(relay);\n      } else {\n        const temporaryRelay = new NDKRelay(\n          normalizeRelayUrl(url),\n          ndk?.relayAuthDefaultPolicy,\n          ndk\n        );\n        pool.useTemporaryRelay(\n          temporaryRelay,\n          void 0,\n          \"requested from fromRelayUrls \" + relayUrls\n        );\n        relays.add(temporaryRelay);\n      }\n    }\n    return new _NDKRelaySet(new Set(relays), ndk, pool);\n  }\n  /**\n   * Publish an event to all relays in this set. Returns the number of relays that have received the event.\n   * @param event\n   * @param timeoutMs - timeout in milliseconds for each publish operation and connection operation\n   * @returns A set where the event was successfully published to\n   * @throws NDKPublishError if no relay was able to receive the event\n   * @example\n   * ```typescript\n   * const event = new NDKEvent(ndk, {kinds: [NDKKind.Message], \"#d\": [\"123\"]});\n   * try {\n   *    const publishedToRelays = await relaySet.publish(event);\n   *    console.log(`published to ${publishedToRelays.size} relays`)\n   * } catch (error) {\n   *   console.error(\"error publishing to relays\", error);\n   *\n   *   if (error instanceof NDKPublishError) {\n   *      for (const [relay, err] of error.errors) {\n   *         console.error(`error publishing to relay ${relay.url}`, err);\n   *       }\n   *   }\n   * }\n   * ```\n   */\n  async publish(event, timeoutMs, requiredRelayCount = 1) {\n    const publishedToRelays = /* @__PURE__ */ new Set();\n    const errors = /* @__PURE__ */ new Map();\n    const isEphemeral2 = event.isEphemeral();\n    event.publishStatus = \"pending\";\n    const promises = Array.from(this.relays).map((relay) => {\n      return new Promise((resolve) => {\n        relay.publish(event, timeoutMs).then((e) => {\n          publishedToRelays.add(relay);\n          resolve();\n        }).catch((err) => {\n          if (!isEphemeral2) {\n            errors.set(relay, err);\n          }\n          resolve();\n        });\n      });\n    });\n    await Promise.all(promises);\n    if (publishedToRelays.size < requiredRelayCount) {\n      if (!isEphemeral2) {\n        const error = new NDKPublishError(\n          \"Not enough relays received the event\",\n          errors,\n          publishedToRelays,\n          this\n        );\n        event.publishStatus = \"error\";\n        event.publishError = error;\n        this.ndk.emit(\"event:publish-failed\", event, error, this.relayUrls);\n        throw error;\n      }\n    } else {\n      event.emit(\"published\", { relaySet: this, publishedToRelays });\n    }\n    return publishedToRelays;\n  }\n  get size() {\n    return this.relays.size;\n  }\n};\n\n// src/relay/sets/calculate.ts\nimport createDebug from \"debug\";\nvar d = createDebug(\"ndk:outbox:calculate\");\nasync function calculateRelaySetFromEvent(ndk, event) {\n  const relays = /* @__PURE__ */ new Set();\n  const authorWriteRelays = await getWriteRelaysFor(ndk, event.pubkey);\n  if (authorWriteRelays) {\n    authorWriteRelays.forEach((relayUrl) => {\n      const relay = ndk.pool?.getRelay(relayUrl);\n      if (relay) relays.add(relay);\n    });\n  }\n  let relayHints = event.tags.filter((tag) => [\"a\", \"e\"].includes(tag[0])).map((tag) => tag[2]).filter((url) => url && url.startsWith(\"wss://\")).filter((url) => {\n    try {\n      new URL(url);\n      return true;\n    } catch {\n      return false;\n    }\n  }).map((url) => normalizeRelayUrl(url));\n  relayHints = Array.from(new Set(relayHints)).slice(0, 5);\n  relayHints.forEach((relayUrl) => {\n    const relay = ndk.pool?.getRelay(relayUrl, true, true);\n    if (relay) {\n      d(\"Adding relay hint %s\", relayUrl);\n      relays.add(relay);\n    }\n  });\n  const pTags = event.getMatchingTags(\"p\").map((tag) => tag[1]);\n  if (pTags.length < 5) {\n    const pTaggedRelays = Array.from(\n      chooseRelayCombinationForPubkeys(ndk, pTags, \"read\", {\n        preferredRelays: new Set(authorWriteRelays)\n      }).keys()\n    );\n    pTaggedRelays.forEach((relayUrl) => {\n      const relay = ndk.pool?.getRelay(relayUrl, false, true);\n      if (relay) {\n        d(\"Adding p-tagged relay %s\", relayUrl);\n        relays.add(relay);\n      }\n    });\n  } else {\n    d(\"Too many p-tags to consider %d\", pTags.length);\n  }\n  ndk.pool?.permanentAndConnectedRelays().forEach((relay) => relays.add(relay));\n  return new NDKRelaySet(relays, ndk);\n}\nfunction calculateRelaySetsFromFilter(ndk, filters, pool) {\n  const result = /* @__PURE__ */ new Map();\n  const authors = /* @__PURE__ */ new Set();\n  filters.forEach((filter) => {\n    if (filter.authors) {\n      filter.authors.forEach((author) => authors.add(author));\n    }\n  });\n  if (authors.size > 0) {\n    const authorToRelaysMap = getRelaysForFilterWithAuthors(ndk, Array.from(authors));\n    for (const relayUrl of authorToRelaysMap.keys()) {\n      result.set(relayUrl, []);\n    }\n    for (const filter of filters) {\n      if (filter.authors) {\n        for (const [relayUrl, authors2] of authorToRelaysMap.entries()) {\n          const authorFilterAndRelayPubkeyIntersection = filter.authors.filter(\n            (author) => authors2.includes(author)\n          );\n          result.set(relayUrl, [\n            ...result.get(relayUrl),\n            {\n              ...filter,\n              // Overwrite authors sent to this relay with the authors that were\n              // present in the filter and are also present in the relay\n              authors: authorFilterAndRelayPubkeyIntersection\n            }\n          ]);\n        }\n      } else {\n        for (const relayUrl of authorToRelaysMap.keys()) {\n          result.set(relayUrl, [...result.get(relayUrl), filter]);\n        }\n      }\n    }\n  } else {\n    if (ndk.explicitRelayUrls) {\n      ndk.explicitRelayUrls.forEach((relayUrl) => {\n        result.set(relayUrl, filters);\n      });\n    }\n  }\n  if (result.size === 0) {\n    pool.permanentAndConnectedRelays().slice(0, 5).forEach((relay) => {\n      result.set(relay.url, filters);\n    });\n  }\n  return result;\n}\nfunction calculateRelaySetsFromFilters(ndk, filters, pool) {\n  const a = calculateRelaySetsFromFilter(ndk, filters, pool);\n  return a;\n}\n\n// src/events/content-tagger.ts\nimport { nip19 } from \"nostr-tools\";\nfunction mergeTags(tags1, tags2) {\n  const tagMap = /* @__PURE__ */ new Map();\n  const generateKey = (tag) => tag.join(\",\");\n  const isContained = (smaller, larger) => {\n    return smaller.every((value, index) => value === larger[index]);\n  };\n  const processTag = (tag) => {\n    for (const [key, existingTag] of tagMap) {\n      if (isContained(existingTag, tag) || isContained(tag, existingTag)) {\n        if (tag.length >= existingTag.length) {\n          tagMap.set(key, tag);\n        }\n        return;\n      }\n    }\n    tagMap.set(generateKey(tag), tag);\n  };\n  tags1.concat(tags2).forEach(processTag);\n  return Array.from(tagMap.values());\n}\nasync function generateContentTags(content, tags = []) {\n  const tagRegex = /(@|nostr:)(npub|nprofile|note|nevent|naddr)[a-zA-Z0-9]+/g;\n  const hashtagRegex = /(?<=\\s|^)(#[^\\s!@#$%^&*()=+./,[{\\]};:'\"?><]+)/g;\n  const promises = [];\n  const addTagIfNew = (t) => {\n    if (!tags.find((t2) => [\"q\", t[0]].includes(t2[0]) && t2[1] === t[1])) {\n      tags.push(t);\n    }\n  };\n  content = content.replace(tagRegex, (tag) => {\n    try {\n      const entity = tag.split(/(@|nostr:)/)[2];\n      const { type, data } = nip19.decode(entity);\n      let t;\n      switch (type) {\n        case \"npub\":\n          t = [\"p\", data];\n          break;\n        case \"nprofile\":\n          t = [\"p\", data.pubkey];\n          break;\n        case \"note\":\n          promises.push(\n            new Promise(async (resolve) => {\n              addTagIfNew([\n                \"e\",\n                data,\n                await maybeGetEventRelayUrl(entity),\n                \"mention\"\n              ]);\n              resolve();\n            })\n          );\n          break;\n        case \"nevent\":\n          promises.push(\n            new Promise(async (resolve) => {\n              const { id, author } = data;\n              let { relays } = data;\n              if (!relays || relays.length === 0) {\n                relays = [await maybeGetEventRelayUrl(entity)];\n              }\n              addTagIfNew([\"e\", id, relays[0], \"mention\"]);\n              if (author) addTagIfNew([\"p\", author]);\n              resolve();\n            })\n          );\n          break;\n        case \"naddr\":\n          promises.push(\n            new Promise(async (resolve) => {\n              const id = [data.kind, data.pubkey, data.identifier].join(\":\");\n              let relays = data.relays ?? [];\n              if (relays.length === 0) {\n                relays = [await maybeGetEventRelayUrl(entity)];\n              }\n              addTagIfNew([\"a\", id, relays[0], \"mention\"]);\n              addTagIfNew([\"p\", data.pubkey]);\n              resolve();\n            })\n          );\n          break;\n        default:\n          return tag;\n      }\n      if (t) addTagIfNew(t);\n      return `nostr:${entity}`;\n    } catch (error) {\n      return tag;\n    }\n  });\n  await Promise.all(promises);\n  content = content.replace(hashtagRegex, (tag, word) => {\n    const t = [\"t\", word.slice(1)];\n    if (!tags.find((t2) => t2[0] === t[0] && t2[1] === t[1])) {\n      tags.push(t);\n    }\n    return tag;\n  });\n  return { content, tags };\n}\nasync function maybeGetEventRelayUrl(nip19Id) {\n  return \"\";\n}\n\n// src/events/kind.ts\nfunction isReplaceable() {\n  if (this.kind === void 0) throw new Error(\"Kind not set\");\n  return [0, 3].includes(this.kind) || this.kind >= 1e4 && this.kind < 2e4 || this.kind >= 3e4 && this.kind < 4e4;\n}\nfunction isEphemeral() {\n  if (this.kind === void 0) throw new Error(\"Kind not set\");\n  return this.kind >= 2e4 && this.kind < 3e4;\n}\nfunction isParamReplaceable() {\n  if (this.kind === void 0) throw new Error(\"Kind not set\");\n  return this.kind >= 3e4 && this.kind < 4e4;\n}\n\n// src/events/kinds/index.ts\nvar NDKKind = /* @__PURE__ */ ((NDKKind2) => {\n  NDKKind2[NDKKind2[\"Metadata\"] = 0] = \"Metadata\";\n  NDKKind2[NDKKind2[\"Text\"] = 1] = \"Text\";\n  NDKKind2[NDKKind2[\"RecommendRelay\"] = 2] = \"RecommendRelay\";\n  NDKKind2[NDKKind2[\"Contacts\"] = 3] = \"Contacts\";\n  NDKKind2[NDKKind2[\"EncryptedDirectMessage\"] = 4] = \"EncryptedDirectMessage\";\n  NDKKind2[NDKKind2[\"EventDeletion\"] = 5] = \"EventDeletion\";\n  NDKKind2[NDKKind2[\"Repost\"] = 6] = \"Repost\";\n  NDKKind2[NDKKind2[\"Reaction\"] = 7] = \"Reaction\";\n  NDKKind2[NDKKind2[\"BadgeAward\"] = 8] = \"BadgeAward\";\n  NDKKind2[NDKKind2[\"GroupChat\"] = 9] = \"GroupChat\";\n  NDKKind2[NDKKind2[\"GroupNote\"] = 11] = \"GroupNote\";\n  NDKKind2[NDKKind2[\"GroupReply\"] = 12] = \"GroupReply\";\n  NDKKind2[NDKKind2[\"Image\"] = 20] = \"Image\";\n  NDKKind2[NDKKind2[\"GenericRespose\"] = 22] = \"GenericRespose\";\n  NDKKind2[NDKKind2[\"GenericRepost\"] = 16] = \"GenericRepost\";\n  NDKKind2[NDKKind2[\"ChannelCreation\"] = 40] = \"ChannelCreation\";\n  NDKKind2[NDKKind2[\"ChannelMetadata\"] = 41] = \"ChannelMetadata\";\n  NDKKind2[NDKKind2[\"ChannelMessage\"] = 42] = \"ChannelMessage\";\n  NDKKind2[NDKKind2[\"ChannelHideMessage\"] = 43] = \"ChannelHideMessage\";\n  NDKKind2[NDKKind2[\"ChannelMuteUser\"] = 44] = \"ChannelMuteUser\";\n  NDKKind2[NDKKind2[\"GenericReply\"] = 1111] = \"GenericReply\";\n  NDKKind2[NDKKind2[\"Media\"] = 1063] = \"Media\";\n  NDKKind2[NDKKind2[\"Report\"] = 1984] = \"Report\";\n  NDKKind2[NDKKind2[\"Label\"] = 1985] = \"Label\";\n  NDKKind2[NDKKind2[\"DVMReqTextExtraction\"] = 5e3] = \"DVMReqTextExtraction\";\n  NDKKind2[NDKKind2[\"DVMReqTextSummarization\"] = 5001] = \"DVMReqTextSummarization\";\n  NDKKind2[NDKKind2[\"DVMReqTextTranslation\"] = 5002] = \"DVMReqTextTranslation\";\n  NDKKind2[NDKKind2[\"DVMReqTextGeneration\"] = 5050] = \"DVMReqTextGeneration\";\n  NDKKind2[NDKKind2[\"DVMReqImageGeneration\"] = 5100] = \"DVMReqImageGeneration\";\n  NDKKind2[NDKKind2[\"DVMReqTextToSpeech\"] = 5250] = \"DVMReqTextToSpeech\";\n  NDKKind2[NDKKind2[\"DVMReqDiscoveryNostrContent\"] = 5300] = \"DVMReqDiscoveryNostrContent\";\n  NDKKind2[NDKKind2[\"DVMReqDiscoveryNostrPeople\"] = 5301] = \"DVMReqDiscoveryNostrPeople\";\n  NDKKind2[NDKKind2[\"DVMReqTimestamping\"] = 5900] = \"DVMReqTimestamping\";\n  NDKKind2[NDKKind2[\"DVMEventSchedule\"] = 5905] = \"DVMEventSchedule\";\n  NDKKind2[NDKKind2[\"DVMJobFeedback\"] = 7e3] = \"DVMJobFeedback\";\n  NDKKind2[NDKKind2[\"Subscribe\"] = 7001] = \"Subscribe\";\n  NDKKind2[NDKKind2[\"Unsubscribe\"] = 7002] = \"Unsubscribe\";\n  NDKKind2[NDKKind2[\"SubscriptionReceipt\"] = 7003] = \"SubscriptionReceipt\";\n  NDKKind2[NDKKind2[\"CashuReserve\"] = 7373] = \"CashuReserve\";\n  NDKKind2[NDKKind2[\"CashuQuote\"] = 7374] = \"CashuQuote\";\n  NDKKind2[NDKKind2[\"CashuToken\"] = 7375] = \"CashuToken\";\n  NDKKind2[NDKKind2[\"WalletChange\"] = 7376] = \"WalletChange\";\n  NDKKind2[NDKKind2[\"GroupAdminAddUser\"] = 9e3] = \"GroupAdminAddUser\";\n  NDKKind2[NDKKind2[\"GroupAdminRemoveUser\"] = 9001] = \"GroupAdminRemoveUser\";\n  NDKKind2[NDKKind2[\"GroupAdminEditMetadata\"] = 9002] = \"GroupAdminEditMetadata\";\n  NDKKind2[NDKKind2[\"GroupAdminEditStatus\"] = 9006] = \"GroupAdminEditStatus\";\n  NDKKind2[NDKKind2[\"GroupAdminCreateGroup\"] = 9007] = \"GroupAdminCreateGroup\";\n  NDKKind2[NDKKind2[\"GroupAdminRequestJoin\"] = 9021] = \"GroupAdminRequestJoin\";\n  NDKKind2[NDKKind2[\"MuteList\"] = 1e4] = \"MuteList\";\n  NDKKind2[NDKKind2[\"PinList\"] = 10001] = \"PinList\";\n  NDKKind2[NDKKind2[\"RelayList\"] = 10002] = \"RelayList\";\n  NDKKind2[NDKKind2[\"BookmarkList\"] = 10003] = \"BookmarkList\";\n  NDKKind2[NDKKind2[\"CommunityList\"] = 10004] = \"CommunityList\";\n  NDKKind2[NDKKind2[\"PublicChatList\"] = 10005] = \"PublicChatList\";\n  NDKKind2[NDKKind2[\"BlockRelayList\"] = 10006] = \"BlockRelayList\";\n  NDKKind2[NDKKind2[\"SearchRelayList\"] = 10007] = \"SearchRelayList\";\n  NDKKind2[NDKKind2[\"SimpleGroupList\"] = 10009] = \"SimpleGroupList\";\n  NDKKind2[NDKKind2[\"InterestList\"] = 10015] = \"InterestList\";\n  NDKKind2[NDKKind2[\"CashuMintList\"] = 10019] = \"CashuMintList\";\n  NDKKind2[NDKKind2[\"EmojiList\"] = 10030] = \"EmojiList\";\n  NDKKind2[NDKKind2[\"DirectMessageReceiveRelayList\"] = 10050] = \"DirectMessageReceiveRelayList\";\n  NDKKind2[NDKKind2[\"BlossomList\"] = 10063] = \"BlossomList\";\n  NDKKind2[NDKKind2[\"NostrWaletConnectInfo\"] = 13194] = \"NostrWaletConnectInfo\";\n  NDKKind2[NDKKind2[\"TierList\"] = 17e3] = \"TierList\";\n  NDKKind2[NDKKind2[\"FollowSet\"] = 3e4] = \"FollowSet\";\n  NDKKind2[NDKKind2[\"CategorizedPeopleList\"] = 3e4 /* FollowSet */] = \"CategorizedPeopleList\";\n  NDKKind2[NDKKind2[\"CategorizedBookmarkList\"] = 30001] = \"CategorizedBookmarkList\";\n  NDKKind2[NDKKind2[\"RelaySet\"] = 30002] = \"RelaySet\";\n  NDKKind2[NDKKind2[\"CategorizedRelayList\"] = 30002 /* RelaySet */] = \"CategorizedRelayList\";\n  NDKKind2[NDKKind2[\"BookmarkSet\"] = 30003] = \"BookmarkSet\";\n  NDKKind2[NDKKind2[\"CurationSet\"] = 30004] = \"CurationSet\";\n  NDKKind2[NDKKind2[\"ArticleCurationSet\"] = 30004] = \"ArticleCurationSet\";\n  NDKKind2[NDKKind2[\"VideoCurationSet\"] = 30005] = \"VideoCurationSet\";\n  NDKKind2[NDKKind2[\"ImageCurationSet\"] = 30006] = \"ImageCurationSet\";\n  NDKKind2[NDKKind2[\"InterestSet\"] = 30015] = \"InterestSet\";\n  NDKKind2[NDKKind2[\"InterestsList\"] = 30015 /* InterestSet */] = \"InterestsList\";\n  NDKKind2[NDKKind2[\"EmojiSet\"] = 30030] = \"EmojiSet\";\n  NDKKind2[NDKKind2[\"ModularArticle\"] = 30040] = \"ModularArticle\";\n  NDKKind2[NDKKind2[\"ModularArticleItem\"] = 30041] = \"ModularArticleItem\";\n  NDKKind2[NDKKind2[\"Wiki\"] = 30818] = \"Wiki\";\n  NDKKind2[NDKKind2[\"Draft\"] = 31234] = \"Draft\";\n  NDKKind2[NDKKind2[\"SubscriptionTier\"] = 37001] = \"SubscriptionTier\";\n  NDKKind2[NDKKind2[\"EcashMintRecommendation\"] = 38e3] = \"EcashMintRecommendation\";\n  NDKKind2[NDKKind2[\"HighlightSet\"] = 39802] = \"HighlightSet\";\n  NDKKind2[NDKKind2[\"CategorizedHighlightList\"] = 39802 /* HighlightSet */] = \"CategorizedHighlightList\";\n  NDKKind2[NDKKind2[\"Nutzap\"] = 9321] = \"Nutzap\";\n  NDKKind2[NDKKind2[\"ZapRequest\"] = 9734] = \"ZapRequest\";\n  NDKKind2[NDKKind2[\"Zap\"] = 9735] = \"Zap\";\n  NDKKind2[NDKKind2[\"Highlight\"] = 9802] = \"Highlight\";\n  NDKKind2[NDKKind2[\"ClientAuth\"] = 22242] = \"ClientAuth\";\n  NDKKind2[NDKKind2[\"NostrWalletConnectReq\"] = 23194] = \"NostrWalletConnectReq\";\n  NDKKind2[NDKKind2[\"NostrWalletConnectRes\"] = 23195] = \"NostrWalletConnectRes\";\n  NDKKind2[NDKKind2[\"NostrConnect\"] = 24133] = \"NostrConnect\";\n  NDKKind2[NDKKind2[\"BlossomUpload\"] = 24242] = \"BlossomUpload\";\n  NDKKind2[NDKKind2[\"HttpAuth\"] = 27235] = \"HttpAuth\";\n  NDKKind2[NDKKind2[\"ProfileBadge\"] = 30008] = \"ProfileBadge\";\n  NDKKind2[NDKKind2[\"BadgeDefinition\"] = 30009] = \"BadgeDefinition\";\n  NDKKind2[NDKKind2[\"MarketStall\"] = 30017] = \"MarketStall\";\n  NDKKind2[NDKKind2[\"MarketProduct\"] = 30018] = \"MarketProduct\";\n  NDKKind2[NDKKind2[\"Article\"] = 30023] = \"Article\";\n  NDKKind2[NDKKind2[\"AppSpecificData\"] = 30078] = \"AppSpecificData\";\n  NDKKind2[NDKKind2[\"Classified\"] = 30402] = \"Classified\";\n  NDKKind2[NDKKind2[\"HorizontalVideo\"] = 34235] = \"HorizontalVideo\";\n  NDKKind2[NDKKind2[\"VerticalVideo\"] = 34236] = \"VerticalVideo\";\n  NDKKind2[NDKKind2[\"CashuWallet\"] = 37375] = \"CashuWallet\";\n  NDKKind2[NDKKind2[\"GroupMetadata\"] = 39e3] = \"GroupMetadata\";\n  NDKKind2[NDKKind2[\"GroupAdmins\"] = 39001] = \"GroupAdmins\";\n  NDKKind2[NDKKind2[\"GroupMembers\"] = 39002] = \"GroupMembers\";\n  NDKKind2[NDKKind2[\"AppRecommendation\"] = 31989] = \"AppRecommendation\";\n  NDKKind2[NDKKind2[\"AppHandler\"] = 31990] = \"AppHandler\";\n  return NDKKind2;\n})(NDKKind || {});\nvar NDKListKinds = [\n  1e4 /* MuteList */,\n  10001 /* PinList */,\n  10002 /* RelayList */,\n  10003 /* BookmarkList */,\n  10004 /* CommunityList */,\n  10005 /* PublicChatList */,\n  10006 /* BlockRelayList */,\n  10007 /* SearchRelayList */,\n  10015 /* InterestList */,\n  10030 /* EmojiList */,\n  10050 /* DirectMessageReceiveRelayList */,\n  3e4 /* FollowSet */,\n  30003 /* BookmarkSet */,\n  30001 /* CategorizedBookmarkList */,\n  // Backwards compatibility\n  30002 /* RelaySet */,\n  30004 /* ArticleCurationSet */,\n  30005 /* VideoCurationSet */,\n  30015 /* InterestSet */,\n  30030 /* EmojiSet */,\n  39802 /* HighlightSet */\n];\n\n// src/signers/index.ts\nvar DEFAULT_ENCRYPTION_SCHEME = \"nip44\";\n\n// src/events/nip04.ts\nasync function encrypt(recipient, signer, type = DEFAULT_ENCRYPTION_SCHEME) {\n  if (!this.ndk) throw new Error(\"No NDK instance found!\");\n  if (!signer) {\n    await this.ndk.assertSigner();\n    signer = this.ndk.signer;\n  }\n  if (!recipient) {\n    const pTags = this.getMatchingTags(\"p\");\n    if (pTags.length !== 1) {\n      throw new Error(\n        \"No recipient could be determined and no explicit recipient was provided\"\n      );\n    }\n    recipient = this.ndk.getUser({ pubkey: pTags[0][1] });\n  }\n  this.content = await signer?.encrypt(recipient, this.content, type);\n}\nasync function decrypt(sender, signer, type) {\n  if (!this.ndk) throw new Error(\"No NDK instance found!\");\n  if (!signer) {\n    await this.ndk.assertSigner();\n    signer = this.ndk.signer;\n  }\n  if (!sender) {\n    sender = this.author;\n  }\n  if (!type) {\n    type = this.content.match(/\\?iv=/) ? \"nip04\" : \"nip44\";\n  }\n  this.content = await signer?.decrypt(sender, this.content, type);\n}\n\n// src/events/nip19.ts\nimport { nip19 as nip192 } from \"nostr-tools\";\nvar DEFAULT_RELAY_COUNT = 2;\nfunction encode(maxRelayCount = DEFAULT_RELAY_COUNT) {\n  let relays = [];\n  if (this.onRelays.length > 0) {\n    relays = this.onRelays.map((relay) => relay.url);\n  } else if (this.relay) {\n    relays = [this.relay.url];\n  }\n  if (relays.length > maxRelayCount) {\n    relays = relays.slice(0, maxRelayCount);\n  }\n  if (this.isParamReplaceable()) {\n    return nip192.naddrEncode({\n      kind: this.kind,\n      pubkey: this.pubkey,\n      identifier: this.replaceableDTag(),\n      relays\n    });\n  } else if (relays.length > 0) {\n    return nip192.neventEncode({\n      id: this.tagId(),\n      relays,\n      author: this.pubkey\n    });\n  } else {\n    return nip192.noteEncode(this.tagId());\n  }\n}\n\n// src/events/repost.ts\nasync function repost(publish = true, signer) {\n  if (!signer && publish) {\n    if (!this.ndk) throw new Error(\"No NDK instance found\");\n    this.ndk.assertSigner();\n    signer = this.ndk.signer;\n  }\n  const e = new NDKEvent(this.ndk, {\n    kind: getKind(this)\n  });\n  e.content = JSON.stringify(this.rawEvent());\n  e.tag(this);\n  if (this.kind !== 1 /* Text */) {\n    e.tags.push([\"k\", `${this.kind}`]);\n  }\n  if (signer) await e.sign(signer);\n  if (publish) await e.publish();\n  return e;\n}\nfunction getKind(event) {\n  if (event.kind === 1) {\n    return 6 /* Repost */;\n  }\n  return 16 /* GenericRepost */;\n}\n\n// src/thread/index.ts\nfunction eventsBySameAuthor(op, events) {\n  const eventsByAuthor = /* @__PURE__ */ new Map();\n  eventsByAuthor.set(op.id, op);\n  events.forEach((event) => {\n    if (event.pubkey === op.pubkey) {\n      eventsByAuthor.set(event.id, event);\n    }\n  });\n  return eventsByAuthor;\n}\nvar hasMarkers = (event, tagType) => {\n  return event.getMatchingTags(tagType).some((tag) => tag[3] && tag[3] !== \"\");\n};\nfunction eventIsReply(op, event, threadIds = /* @__PURE__ */ new Set(), tagType) {\n  tagType ??= op.tagType();\n  const tags = event.getMatchingTags(tagType);\n  threadIds.add(op.tagId());\n  if (threadIds.has(event.tagId())) return false;\n  const heedExplicitReplyMarker = () => {\n    let eventIsTagged = false;\n    for (const tag of tags) {\n      if (tag[3] === \"reply\") return threadIds.has(tag[1]);\n      const markerIsEmpty = tag[3] === \"\" || tag[3] === void 0;\n      const markerIsRoot = tag[3] === \"root\";\n      if (tag[1] === op.tagId() && (markerIsEmpty || markerIsRoot)) {\n        eventIsTagged = markerIsRoot ? \"root\" : true;\n      }\n    }\n    if (!eventIsTagged) return false;\n    if (eventIsTagged === \"root\") return true;\n  };\n  const explicitReplyMarker = heedExplicitReplyMarker();\n  if (explicitReplyMarker !== void 0) return explicitReplyMarker;\n  if (hasMarkers(event, tagType)) return false;\n  const expectedTags = op.getMatchingTags(\"e\").map((tag) => tag[1]);\n  expectedTags.push(op.id);\n  return event.getMatchingTags(\"e\").every((tag) => expectedTags.includes(tag[1]));\n}\nfunction eventThreads(op, events) {\n  const eventsByAuthor = eventsBySameAuthor(op, events);\n  const threadEvents = events.filter((event) => eventIsPartOfThread(op, event, eventsByAuthor));\n  return threadEvents.sort((a, b) => a.created_at - b.created_at);\n}\nfunction getEventReplyIds(event) {\n  if (hasMarkers(event, event.tagType())) {\n    let rootTag;\n    const replyTags = [];\n    event.getMatchingTags(event.tagType()).forEach((tag) => {\n      if (tag[3] === \"root\") rootTag = tag;\n      if (tag[3] === \"reply\") replyTags.push(tag);\n    });\n    if (replyTags.length === 0) {\n      if (rootTag) {\n        replyTags.push(rootTag);\n      }\n    }\n    return replyTags.map((tag) => tag[1]);\n  } else {\n    return event.getMatchingTags(\"e\").map((tag) => tag[1]);\n  }\n}\nfunction isEventOriginalPost(event) {\n  return getEventReplyIds(event).length === 0;\n}\nfunction eventThreadIds(op, events) {\n  const threadIds = /* @__PURE__ */ new Map();\n  const threadEvents = eventThreads(op, events);\n  threadEvents.forEach((event) => threadIds.set(event.id, event));\n  return threadIds;\n}\nfunction eventReplies(op, events, threadEventIds) {\n  threadEventIds ??= new Set(eventThreadIds(op, events).keys());\n  return events.filter((event) => eventIsReply(op, event, threadEventIds));\n}\nfunction eventIsPartOfThread(op, event, eventsByAuthor) {\n  if (op.pubkey !== event.pubkey) return false;\n  const taggedEventIds = event.getMatchingTags(\"e\").map((tag) => tag[1]);\n  const allTaggedEventsAreByOriginalAuthor = taggedEventIds.every((id) => eventsByAuthor.has(id));\n  return allTaggedEventsAreByOriginalAuthor;\n}\nfunction eventHasETagMarkers(event) {\n  return event.getMatchingTags(\"e\").some((tag) => tag[3]);\n}\nfunction getRootEventId(event, searchTag) {\n  searchTag ??= event.tagType();\n  const rootEventTag = getRootTag(event, searchTag);\n  if (rootEventTag) return rootEventTag[1];\n  const replyTag = getReplyTag(event, searchTag);\n  return replyTag?.[1];\n}\nfunction getRootTag(event, searchTag) {\n  searchTag ??= event.tagType();\n  const rootEventTag = event.tags.find((tag) => tag[3] === \"root\");\n  if (!rootEventTag) {\n    if (eventHasETagMarkers(event)) return;\n    const matchingTags = event.getMatchingTags(searchTag);\n    if (matchingTags.length < 3) return matchingTags[0];\n  }\n  return rootEventTag;\n}\nfunction getReplyTag(event, searchTag) {\n  searchTag ??= event.tagType();\n  let replyTag = event.tags.find((tag) => tag[3] === \"reply\");\n  if (replyTag) return replyTag;\n  if (!replyTag) replyTag = event.tags.find((tag) => tag[3] === \"root\");\n  if (!replyTag) {\n    if (eventHasETagMarkers(event)) return;\n    const matchingTags = event.getMatchingTags(searchTag);\n    if (matchingTags.length === 1) return matchingTags[0];\n    if (matchingTags.length === 2) return matchingTags[1];\n  }\n}\n\n// src/events/fetch-tagged-event.ts\nasync function fetchTaggedEvent(tag, marker) {\n  if (!this.ndk) throw new Error(\"NDK instance not found\");\n  const t = this.getMatchingTags(tag, marker);\n  if (t.length === 0) return void 0;\n  const [_, id, hint] = t[0];\n  let relay;\n  const event = await this.ndk.fetchEvent(id, {}, relay);\n  return event;\n}\nasync function fetchRootEvent(subOpts) {\n  if (!this.ndk) throw new Error(\"NDK instance not found\");\n  const rootTag = getRootTag(this);\n  if (!rootTag) return void 0;\n  return this.ndk.fetchEventFromTag(rootTag, this, subOpts);\n}\nasync function fetchReplyEvent(subOpts) {\n  if (!this.ndk) throw new Error(\"NDK instance not found\");\n  const replyTag = getReplyTag(this);\n  if (!replyTag) return void 0;\n  return this.ndk.fetchEventFromTag(replyTag, this, subOpts);\n}\n\n// src/events/serializer.ts\nfunction serialize(includeSig = false, includeId = false) {\n  const payload = [0, this.pubkey, this.created_at, this.kind, this.tags, this.content];\n  if (includeSig) payload.push(this.sig);\n  if (includeId) payload.push(this.id);\n  return JSON.stringify(payload);\n}\nfunction deserialize(serializedEvent) {\n  const eventArray = JSON.parse(serializedEvent);\n  const ret = {\n    pubkey: eventArray[1],\n    created_at: eventArray[2],\n    kind: eventArray[3],\n    tags: eventArray[4],\n    content: eventArray[5]\n  };\n  if (eventArray.length >= 7) ret.sig = eventArray[6];\n  if (eventArray.length >= 8) ret.id = eventArray[7];\n  return ret;\n}\n\n// src/events/validation.ts\nimport { sha256 } from \"@noble/hashes/sha256\";\nimport { bytesToHex } from \"@noble/hashes/utils\";\nimport { schnorr } from \"@noble/curves/secp256k1\";\n\n// src/events/signature.ts\nvar worker;\nvar processingQueue = {};\nfunction signatureVerificationInit(w) {\n  worker = w;\n  worker.onmessage = (msg) => {\n    const [eventId, result] = msg.data;\n    const record = processingQueue[eventId];\n    if (!record) {\n      console.error(\"No record found for event\", eventId);\n      return;\n    }\n    delete processingQueue[eventId];\n    for (const resolve of record.resolves) {\n      resolve(result);\n    }\n  };\n}\nasync function verifySignatureAsync(event, persist) {\n  const promise = new Promise((resolve) => {\n    const serialized = event.serialize();\n    let enqueue = false;\n    if (!processingQueue[event.id]) {\n      processingQueue[event.id] = { event, resolves: [] };\n      enqueue = true;\n    }\n    processingQueue[event.id].resolves.push(resolve);\n    if (!enqueue) return;\n    worker.postMessage({\n      serialized,\n      id: event.id,\n      sig: event.sig,\n      pubkey: event.pubkey\n    });\n  });\n  return promise;\n}\n\n// src/events/validation.ts\nimport { LRUCache } from \"typescript-lru-cache\";\nvar PUBKEY_REGEX = /^[a-f0-9]{64}$/;\nfunction validate() {\n  if (typeof this.kind !== \"number\") return false;\n  if (typeof this.content !== \"string\") return false;\n  if (typeof this.created_at !== \"number\") return false;\n  if (typeof this.pubkey !== \"string\") return false;\n  if (!this.pubkey.match(PUBKEY_REGEX)) return false;\n  if (!Array.isArray(this.tags)) return false;\n  for (let i = 0; i < this.tags.length; i++) {\n    const tag = this.tags[i];\n    if (!Array.isArray(tag)) return false;\n    for (let j = 0; j < tag.length; j++) {\n      if (typeof tag[j] === \"object\") return false;\n    }\n  }\n  return true;\n}\nvar verifiedSignatures = new LRUCache({\n  maxSize: 1e3,\n  entryExpirationTimeInMS: 6e4\n});\nfunction verifySignature(persist) {\n  if (typeof this.signatureVerified === \"boolean\") return this.signatureVerified;\n  const prevVerification = verifiedSignatures.get(this.id);\n  if (prevVerification !== null) {\n    return this.signatureVerified = !!prevVerification;\n  }\n  try {\n    if (this.ndk?.asyncSigVerification) {\n      verifySignatureAsync(this, persist).then((result) => {\n        if (persist) {\n          this.signatureVerified = result;\n          if (result) verifiedSignatures.set(this.id, this.sig);\n        }\n        if (!result) {\n          this.ndk.emit(\"event:invalid-sig\", this);\n          verifiedSignatures.set(this.id, false);\n        }\n      });\n    } else {\n      const hash = sha256(new TextEncoder().encode(this.serialize()));\n      const res = schnorr.verify(this.sig, hash, this.pubkey);\n      if (res) verifiedSignatures.set(this.id, this.sig);\n      else verifiedSignatures.set(this.id, false);\n      return this.signatureVerified = res;\n    }\n  } catch (err) {\n    return this.signatureVerified = false;\n  }\n}\nfunction getEventHash() {\n  return getEventHashFromSerializedEvent(this.serialize());\n}\nfunction getEventHashFromSerializedEvent(serializedEvent) {\n  const eventHash = sha256(new TextEncoder().encode(serializedEvent));\n  return bytesToHex(eventHash);\n}\n\n// src/events/index.ts\nvar skipClientTagOnKinds = [3 /* Contacts */];\nvar NDKEvent = class _NDKEvent extends EventEmitter {\n  ndk;\n  created_at;\n  content = \"\";\n  tags = [];\n  kind;\n  id = \"\";\n  sig;\n  pubkey = \"\";\n  signatureVerified;\n  _author = void 0;\n  /**\n   * The relay that this event was first received from.\n   */\n  relay;\n  /**\n   * The relays that this event was received from and/or successfully published to.\n   */\n  get onRelays() {\n    let res = [];\n    if (!this.ndk) {\n      if (this.relay) res.push(this.relay);\n    } else {\n      res = this.ndk.subManager.seenEvents.get(this.id) || [];\n    }\n    return res;\n  }\n  /**\n   * The status of the publish operation.\n   */\n  publishStatus = \"success\";\n  publishError;\n  constructor(ndk, event) {\n    super();\n    this.ndk = ndk;\n    this.created_at = event?.created_at;\n    this.content = event?.content || \"\";\n    this.tags = event?.tags || [];\n    this.id = event?.id || \"\";\n    this.sig = event?.sig;\n    this.pubkey = event?.pubkey || \"\";\n    this.kind = event?.kind;\n    if (event instanceof _NDKEvent) {\n      if (this.relay) {\n        this.relay = event.relay;\n        this.ndk?.subManager.seenEvent(event.id, this.relay);\n      }\n      this.publishStatus = event.publishStatus;\n      this.publishError = event.publishError;\n    }\n  }\n  /**\n   * Deserialize an NDKEvent from a serialized payload.\n   * @param ndk\n   * @param event\n   * @returns\n   */\n  static deserialize(ndk, event) {\n    return new _NDKEvent(ndk, deserialize(event));\n  }\n  /**\n   * Returns the event as is.\n   */\n  rawEvent() {\n    return {\n      created_at: this.created_at,\n      content: this.content,\n      tags: this.tags,\n      kind: this.kind,\n      pubkey: this.pubkey,\n      id: this.id,\n      sig: this.sig\n    };\n  }\n  set author(user) {\n    this.pubkey = user.pubkey;\n    this._author = user;\n    this._author.ndk ??= this.ndk;\n  }\n  /**\n   * Returns an NDKUser for the author of the event.\n   */\n  get author() {\n    if (this._author) return this._author;\n    if (!this.ndk) throw new Error(\"No NDK instance found\");\n    const user = this.ndk.getUser({ pubkey: this.pubkey });\n    this._author = user;\n    return user;\n  }\n  /**\n   * NIP-73 tagging of external entities\n   * @param entity to be tagged\n   * @param type of the entity\n   * @param markerUrl to be used as the marker URL\n   *\n   * @example\n   * ```typescript\n   * event.tagExternal(\"https://example.com/article/123#nostr\", \"url\");\n   * event.tags => [[\"i\", \"https://example.com/123\"], [\"k\", \"https://example.com\"]]\n   * ```\n   *\n   * @example tag a podcast:item:guid\n   * ```typescript\n   * event.tagExternal(\"e32b4890-b9ea-4aef-a0bf-54b787833dc5\", \"podcast:item:guid\");\n   * event.tags => [[\"i\", \"podcast:item:guid:e32b4890-b9ea-4aef-a0bf-54b787833dc5\"], [\"k\", \"podcast:item:guid\"]]\n   * ```\n   *\n   * @see https://github.com/nostr-protocol/nips/blob/master/73.md\n   */\n  tagExternal(entity, type, markerUrl) {\n    let iTag = [\"i\"];\n    let kTag = [\"k\"];\n    switch (type) {\n      case \"url\":\n        const url = new URL(entity);\n        url.hash = \"\";\n        iTag.push(url.toString());\n        kTag.push(`${url.protocol}//${url.host}`);\n        break;\n      case \"hashtag\":\n        iTag.push(`#${entity.toLowerCase()}`);\n        kTag.push(\"#\");\n        break;\n      case \"geohash\":\n        iTag.push(`geo:${entity.toLowerCase()}`);\n        kTag.push(\"geo\");\n        break;\n      case \"isbn\":\n        iTag.push(`isbn:${entity.replace(/-/g, \"\")}`);\n        kTag.push(\"isbn\");\n        break;\n      case \"podcast:guid\":\n        iTag.push(`podcast:guid:${entity}`);\n        kTag.push(\"podcast:guid\");\n        break;\n      case \"podcast:item:guid\":\n        iTag.push(`podcast:item:guid:${entity}`);\n        kTag.push(\"podcast:item:guid\");\n        break;\n      case \"podcast:publisher:guid\":\n        iTag.push(`podcast:publisher:guid:${entity}`);\n        kTag.push(\"podcast:publisher:guid\");\n        break;\n      case \"isan\":\n        iTag.push(`isan:${entity.split(\"-\").slice(0, 4).join(\"-\")}`);\n        kTag.push(\"isan\");\n        break;\n      case \"doi\":\n        iTag.push(`doi:${entity.toLowerCase()}`);\n        kTag.push(\"doi\");\n        break;\n      default:\n        throw new Error(`Unsupported NIP-73 entity type: ${type}`);\n    }\n    if (markerUrl) {\n      iTag.push(markerUrl);\n    }\n    this.tags.push(iTag);\n    this.tags.push(kTag);\n  }\n  /**\n   * Tag a user with an optional marker.\n   * @param target What is to be tagged. Can be an NDKUser, NDKEvent, or an NDKTag.\n   * @param marker The marker to use in the tag.\n   * @param skipAuthorTag Whether to explicitly skip adding the author tag of the event.\n   * @param forceTag Force a specific tag to be used instead of the default \"e\" or \"a\" tag.\n   * @example\n   * ```typescript\n   * reply.tag(opEvent, \"reply\");\n   * // reply.tags => [[\"e\", <id>, <relay>, \"reply\"]]\n   * ```\n   */\n  tag(target, marker, skipAuthorTag, forceTag) {\n    let tags = [];\n    const isNDKUser = target.fetchProfile !== void 0;\n    if (isNDKUser) {\n      forceTag ??= \"p\";\n      const tag = [forceTag, target.pubkey];\n      if (marker) tag.push(...[\"\", marker]);\n      tags.push(tag);\n    } else if (target instanceof _NDKEvent) {\n      const event = target;\n      skipAuthorTag ??= event?.pubkey === this.pubkey;\n      tags = event.referenceTags(marker, skipAuthorTag, forceTag);\n      for (const pTag of event.getMatchingTags(\"p\")) {\n        if (pTag[1] === this.pubkey) continue;\n        if (this.tags.find((t) => t[0] === \"p\" && t[1] === pTag[1])) continue;\n        this.tags.push([\"p\", pTag[1]]);\n      }\n    } else if (Array.isArray(target)) {\n      tags = [target];\n    } else {\n      throw new Error(\"Invalid argument\", target);\n    }\n    this.tags = mergeTags(this.tags, tags);\n  }\n  /**\n   * Return a NostrEvent object, trying to fill in missing fields\n   * when possible, adding tags when necessary.\n   * @param pubkey {string} The pubkey of the user who the event belongs to.\n   * @returns {Promise<NostrEvent>} A promise that resolves to a NostrEvent.\n   */\n  async toNostrEvent(pubkey) {\n    if (!pubkey && this.pubkey === \"\") {\n      const user = await this.ndk?.signer?.user();\n      this.pubkey = user?.pubkey || \"\";\n    }\n    if (!this.created_at) {\n      this.created_at = Math.floor(Date.now() / 1e3);\n    }\n    const { content, tags } = await this.generateTags();\n    this.content = content || \"\";\n    this.tags = tags;\n    try {\n      this.id = this.getEventHash();\n    } catch (e) {\n    }\n    return this.rawEvent();\n  }\n  serialize = serialize.bind(this);\n  getEventHash = getEventHash.bind(this);\n  validate = validate.bind(this);\n  verifySignature = verifySignature.bind(this);\n  /**\n   * Is this event replaceable (whether parameterized or not)?\n   *\n   * This will return true for kind 0, 3, 10k-20k and 30k-40k\n   */\n  isReplaceable = isReplaceable.bind(this);\n  isEphemeral = isEphemeral.bind(this);\n  /**\n   * Is this event parameterized replaceable?\n   *\n   * This will return true for kind 30k-40k\n   */\n  isParamReplaceable = isParamReplaceable.bind(this);\n  /**\n   * Encodes a bech32 id.\n   *\n   * @param relays {string[]} The relays to encode in the id\n   * @returns {string} - Encoded naddr, note or nevent.\n   */\n  encode = encode.bind(this);\n  encrypt = encrypt.bind(this);\n  decrypt = decrypt.bind(this);\n  /**\n   * Get all tags with the given name\n   * @param tagName {string} The name of the tag to search for\n   * @returns {NDKTag[]} An array of the matching tags\n   */\n  getMatchingTags(tagName, marker) {\n    const t = this.tags.filter((tag) => tag[0] === tagName);\n    if (marker === void 0) return t;\n    return t.filter((tag) => tag[3] === marker);\n  }\n  /**\n   * Check if the event has a tag with the given name\n   * @param tagName\n   * @param marker\n   * @returns\n   */\n  hasTag(tagName, marker) {\n    return this.tags.some((tag) => tag[0] === tagName && (!marker || tag[3] === marker));\n  }\n  /**\n   * Get the first tag with the given name\n   * @param tagName Tag name to search for\n   * @returns The value of the first tag with the given name, or undefined if no such tag exists\n   */\n  tagValue(tagName) {\n    const tags = this.getMatchingTags(tagName);\n    if (tags.length === 0) return void 0;\n    return tags[0][1];\n  }\n  /**\n   * Gets the NIP-31 \"alt\" tag of the event.\n   */\n  get alt() {\n    return this.tagValue(\"alt\");\n  }\n  /**\n   * Sets the NIP-31 \"alt\" tag of the event. Use this to set an alt tag so\n   * clients that don't handle a particular event kind can display something\n   * useful for users.\n   */\n  set alt(alt) {\n    this.removeTag(\"alt\");\n    if (alt) this.tags.push([\"alt\", alt]);\n  }\n  /**\n   * Gets the NIP-33 \"d\" tag of the event.\n   */\n  get dTag() {\n    return this.tagValue(\"d\");\n  }\n  /**\n   * Sets the NIP-33 \"d\" tag of the event.\n   */\n  set dTag(value) {\n    this.removeTag(\"d\");\n    if (value) this.tags.push([\"d\", value]);\n  }\n  /**\n   * Remove all tags with the given name (e.g. \"d\", \"a\", \"p\")\n   * @param tagName Tag name(s) to search for and remove\n   * @returns {void}\n   */\n  removeTag(tagName) {\n    const tagNames = Array.isArray(tagName) ? tagName : [tagName];\n    this.tags = this.tags.filter((tag) => !tagNames.includes(tag[0]));\n  }\n  /**\n   * Sign the event if a signer is present.\n   *\n   * It will generate tags.\n   * Repleacable events will have their created_at field set to the current time.\n   * @param signer {NDKSigner} The NDKSigner to use to sign the event\n   * @returns {Promise<string>} A Promise that resolves to the signature of the signed event.\n   */\n  async sign(signer) {\n    if (!signer) {\n      this.ndk?.assertSigner();\n      signer = this.ndk.signer;\n    } else {\n      this.author = await signer.user();\n    }\n    const nostrEvent = await this.toNostrEvent();\n    this.sig = await signer.sign(nostrEvent);\n    return this.sig;\n  }\n  /**\n   *\n   * @param relaySet\n   * @param timeoutMs\n   * @param requiredRelayCount\n   * @returns\n   */\n  async publishReplaceable(relaySet, timeoutMs, requiredRelayCount) {\n    this.id = \"\";\n    this.created_at = Math.floor(Date.now() / 1e3);\n    this.sig = \"\";\n    return this.publish(relaySet, timeoutMs, requiredRelayCount);\n  }\n  /**\n   * Attempt to sign and then publish an NDKEvent to a given relaySet.\n   * If no relaySet is provided, the relaySet will be calculated by NDK.\n   * @param relaySet {NDKRelaySet} The relaySet to publish the even to.\n   * @param timeoutM {number} The timeout for the publish operation in milliseconds.\n   * @param requiredRelayCount The number of relays that must receive the event for the publish to be considered successful.\n   * @returns A promise that resolves to the relays the event was published to.\n   */\n  async publish(relaySet, timeoutMs, requiredRelayCount) {\n    if (!this.sig) await this.sign();\n    if (!this.ndk)\n      throw new Error(\"NDKEvent must be associated with an NDK instance to publish\");\n    if (!relaySet) {\n      relaySet = this.ndk.devWriteRelaySet || await calculateRelaySetFromEvent(this.ndk, this);\n    }\n    if (this.kind === 5 /* EventDeletion */ && this.ndk.cacheAdapter?.deleteEventIds) {\n      const eTags = this.getMatchingTags(\"e\").map((tag) => tag[1]);\n      this.ndk.cacheAdapter.deleteEventIds(eTags);\n    }\n    const rawEvent = this.rawEvent();\n    if (this.ndk.cacheAdapter?.addUnpublishedEvent) {\n      try {\n        this.ndk.cacheAdapter.addUnpublishedEvent(this, relaySet.relayUrls);\n      } catch (e) {\n        console.error(\"Error adding unpublished event to cache\", e);\n      }\n    }\n    if (this.kind === 5 /* EventDeletion */ && this.ndk.cacheAdapter?.deleteEventIds) {\n      this.ndk.cacheAdapter.deleteEventIds(this.getMatchingTags(\"e\").map((tag) => tag[1]));\n    }\n    this.ndk.subManager.dispatchEvent(rawEvent, void 0, true);\n    const relays = await relaySet.publish(this, timeoutMs, requiredRelayCount);\n    relays.forEach((relay) => this.ndk?.subManager.seenEvent(this.id, relay));\n    return relays;\n  }\n  /**\n   * Generates tags for users, notes, and other events tagged in content.\n   * Will also generate random \"d\" tag for parameterized replaceable events where needed.\n   * @returns {ContentTag} The tags and content of the event.\n   */\n  async generateTags() {\n    let tags = [];\n    const g = await generateContentTags(this.content, this.tags);\n    const content = g.content;\n    tags = g.tags;\n    if (this.kind && this.isParamReplaceable()) {\n      const dTag = this.getMatchingTags(\"d\")[0];\n      if (!dTag) {\n        const title = this.tagValue(\"title\");\n        const randLength = title ? 6 : 16;\n        let str = [...Array(randLength)].map(() => Math.random().toString(36)[2]).join(\"\");\n        if (title && title.length > 0) {\n          str = title.replace(/[^a-z0-9]+/gi, \"-\").replace(/^-|-$/g, \"\") + \"-\" + str;\n        }\n        tags.push([\"d\", str]);\n      }\n    }\n    if (this.shouldAddClientTag) {\n      const clientTag = [\"client\", this.ndk.clientName ?? \"\"];\n      if (this.ndk.clientNip89) clientTag.push(this.ndk.clientNip89);\n      tags.push(clientTag);\n    } else {\n      tags = tags.filter((tag) => tag[0] !== \"client\");\n    }\n    return { content: content || \"\", tags };\n  }\n  get shouldAddClientTag() {\n    if (!this.ndk?.clientName && !this.ndk?.clientNip89) return false;\n    if (skipClientTagOnKinds.includes(this.kind)) return false;\n    if (this.isEphemeral()) return false;\n    if (this.hasTag(\"client\")) return false;\n    return true;\n  }\n  muted() {\n    const authorMutedEntry = this.ndk?.mutedIds.get(this.pubkey);\n    if (authorMutedEntry && authorMutedEntry === \"p\") return \"author\";\n    const eventTagReference = this.tagReference();\n    const eventMutedEntry = this.ndk?.mutedIds.get(eventTagReference[1]);\n    if (eventMutedEntry && eventMutedEntry === eventTagReference[0]) return \"event\";\n    return null;\n  }\n  /**\n   * Returns the \"d\" tag of a parameterized replaceable event or throws an error if the event isn't\n   * a parameterized replaceable event.\n   * @returns {string} the \"d\" tag of the event.\n   */\n  replaceableDTag() {\n    if (this.kind && this.kind >= 3e4 && this.kind <= 4e4) {\n      const dTag = this.getMatchingTags(\"d\")[0];\n      const dTagId = dTag ? dTag[1] : \"\";\n      return dTagId;\n    }\n    throw new Error(\"Event is not a parameterized replaceable event\");\n  }\n  /**\n   * Provides a deduplication key for the event.\n   *\n   * For kinds 0, 3, 10k-20k this will be the event <kind>:<pubkey>\n   * For kinds 30k-40k this will be the event <kind>:<pubkey>:<d-tag>\n   * For all other kinds this will be the event id\n   */\n  deduplicationKey() {\n    if (this.kind === 0 || this.kind === 3 || this.kind && this.kind >= 1e4 && this.kind < 2e4) {\n      return `${this.kind}:${this.pubkey}`;\n    } else {\n      return this.tagId();\n    }\n  }\n  /**\n   * Returns the id of the event or, if it's a parameterized event, the generated id of the event using \"d\" tag, pubkey, and kind.\n   * @returns {string} The id\n   */\n  tagId() {\n    if (this.isParamReplaceable()) {\n      return this.tagAddress();\n    }\n    return this.id;\n  }\n  /**\n   * Returns the \"reference\" value (\"<kind>:<author-pubkey>:<d-tag>\") for this replaceable event.\n   * @returns {string} The id\n   */\n  tagAddress() {\n    if (!this.isParamReplaceable()) {\n      throw new Error(\"This must only be called on replaceable events\");\n    }\n    const dTagId = this.replaceableDTag();\n    return `${this.kind}:${this.pubkey}:${dTagId}`;\n  }\n  /**\n   * Determines the type of tag that can be used to reference this event from another event.\n   * @returns {string} The tag type\n   * @example\n   * event = new NDKEvent(ndk, { kind: 30000, pubkey: 'pubkey', tags: [ [\"d\", \"d-code\"] ] });\n   * event.tagType(); // \"a\"\n   */\n  tagType() {\n    return this.isParamReplaceable() ? \"a\" : \"e\";\n  }\n  /**\n   * Get the tag that can be used to reference this event from another event.\n   *\n   * Consider using referenceTags() instead (unless you have a good reason to use this)\n   *\n   * @example\n   *     event = new NDKEvent(ndk, { kind: 30000, pubkey: 'pubkey', tags: [ [\"d\", \"d-code\"] ] });\n   *     event.tagReference(); // [\"a\", \"30000:pubkey:d-code\"]\n   *\n   *     event = new NDKEvent(ndk, { kind: 1, pubkey: 'pubkey', id: \"eventid\" });\n   *     event.tagReference(); // [\"e\", \"eventid\"]\n   * @returns {NDKTag} The NDKTag object referencing this event\n   */\n  tagReference(marker) {\n    let tag;\n    if (this.isParamReplaceable()) {\n      tag = [\"a\", this.tagAddress()];\n    } else {\n      tag = [\"e\", this.tagId()];\n    }\n    if (this.relay) {\n      tag.push(this.relay.url);\n    } else {\n      tag.push(\"\");\n    }\n    tag.push(marker ?? \"\");\n    if (!this.isParamReplaceable()) {\n      tag.push(this.pubkey);\n    }\n    return tag;\n  }\n  /**\n   * Get the tags that can be used to reference this event from another event\n   * @param marker The marker to use in the tag\n   * @param skipAuthorTag Whether to explicitly skip adding the author tag of the event\n   * @param forceTag Force a specific tag to be used instead of the default \"e\" or \"a\" tag\n   * @example\n   *     event = new NDKEvent(ndk, { kind: 30000, pubkey: 'pubkey', tags: [ [\"d\", \"d-code\"] ] });\n   *     event.referenceTags(); // [[\"a\", \"30000:pubkey:d-code\"], [\"e\", \"parent-id\"]]\n   *\n   *     event = new NDKEvent(ndk, { kind: 1, pubkey: 'pubkey', id: \"eventid\" });\n   *     event.referenceTags(); // [[\"e\", \"parent-id\"]]\n   * @returns {NDKTag} The NDKTag object referencing this event\n   */\n  referenceTags(marker, skipAuthorTag, forceTag) {\n    let tags = [];\n    if (this.isParamReplaceable()) {\n      tags = [\n        [forceTag ?? \"a\", this.tagAddress()],\n        [forceTag ?? \"e\", this.id]\n      ];\n    } else {\n      tags = [[forceTag ?? \"e\", this.id]];\n    }\n    tags = tags.map((tag) => {\n      if (tag[0] === \"e\" || marker) {\n        tag.push(this.relay?.url ?? \"\");\n      } else if (this.relay?.url) {\n        tag.push(this.relay?.url);\n      }\n      return tag;\n    });\n    tags.forEach((tag) => {\n      if (tag[0] === \"e\") {\n        tag.push(marker ?? \"\");\n        tag.push(this.pubkey);\n      } else if (marker) {\n        tag.push(marker);\n      }\n    });\n    tags = [...tags, ...this.getMatchingTags(\"h\")];\n    if (!skipAuthorTag) tags.push(...this.author.referenceTags());\n    return tags;\n  }\n  /**\n   * Provides the filter that will return matching events for this event.\n   *\n   * @example\n   *    event = new NDKEvent(ndk, { kind: 30000, pubkey: 'pubkey', tags: [ [\"d\", \"d-code\"] ] });\n   *    event.filter(); // { \"#a\": [\"30000:pubkey:d-code\"] }\n   * @example\n   *    event = new NDKEvent(ndk, { kind: 1, pubkey: 'pubkey', id: \"eventid\" });\n   *    event.filter(); // { \"#e\": [\"eventid\"] }\n   *\n   * @returns The filter that will return matching events for this event\n   */\n  filter() {\n    if (this.isParamReplaceable()) {\n      return { \"#a\": [this.tagId()] };\n    } else {\n      return { \"#e\": [this.tagId()] };\n    }\n  }\n  /**\n   * Generates a deletion event of the current event\n   *\n   * @param reason The reason for the deletion\n   * @param publish Whether to publish the deletion event automatically\n   * @returns The deletion event\n   */\n  async delete(reason, publish = true) {\n    if (!this.ndk) throw new Error(\"No NDK instance found\");\n    this.ndk.assertSigner();\n    const e = new _NDKEvent(this.ndk, {\n      kind: 5 /* EventDeletion */,\n      content: reason || \"\"\n    });\n    e.tag(this, void 0, true);\n    e.tags.push([\"k\", this.kind.toString()]);\n    if (publish) {\n      this.emit(\"deleted\");\n      await e.publish();\n    }\n    return e;\n  }\n  /**\n   * Fetch an event tagged with the given tag following relay hints if provided.\n   * @param tag The tag to search for\n   * @param marker The marker to use in the tag (e.g. \"root\")\n   * @returns The fetched event or null if no event was found, undefined if no matching tag was found in the event\n   * * @example\n   * const replyEvent = await ndk.fetchEvent(\"nevent1qqs8x8vnycyha73grv380gmvlury4wtmx0nr9a5ds2dngqwgu87wn6gpzemhxue69uhhyetvv9ujuurjd9kkzmpwdejhgq3ql2vyh47mk2p0qlsku7hg0vn29faehy9hy34ygaclpn66ukqp3afqz4cwjd\")\n   * const originalEvent = await replyEvent.fetchTaggedEvent(\"e\", \"reply\");\n   * console.log(replyEvent.encode() + \" is a reply to event \" + originalEvent?.encode());\n   */\n  fetchTaggedEvent = fetchTaggedEvent.bind(this);\n  /**\n   * Fetch the root event of the current event.\n   * @returns The fetched root event or null if no event was found\n   * @example\n   * const replyEvent = await ndk.fetchEvent(\"nevent1qqs8x8vnycyha73grv380gmvlury4wtmx0nr9a5ds2dngqwgu87wn6gpzemhxue69uhhyetvv9ujuurjd9kkzmpwdejhgq3ql2vyh47mk2p0qlsku7hg0vn29faehy9hy34ygaclpn66ukqp3afqz4cwjd\")\n   * const rootEvent = await replyEvent.fetchRootEvent();\n   * console.log(replyEvent.encode() + \" is a reply in the thread \" + rootEvent?.encode());\n   */\n  fetchRootEvent = fetchRootEvent.bind(this);\n  /**\n   * Fetch the event the current event is replying to.\n   * @returns The fetched reply event or null if no event was found\n   */\n  fetchReplyEvent = fetchReplyEvent.bind(this);\n  /**\n   * NIP-18 reposting event.\n   *\n   * @param publish Whether to publish the reposted event automatically @default true\n   * @param signer The signer to use for signing the reposted event\n   * @returns The reposted event\n   *\n   * @function\n   */\n  repost = repost.bind(this);\n  /**\n   * React to an existing event\n   *\n   * @param content The content of the reaction\n   */\n  async react(content, publish = true) {\n    if (!this.ndk) throw new Error(\"No NDK instance found\");\n    this.ndk.assertSigner();\n    const e = new _NDKEvent(this.ndk, {\n      kind: 7 /* Reaction */,\n      content\n    });\n    e.tag(this);\n    if (publish) {\n      await e.publish();\n    } else {\n      await e.sign();\n    }\n    return e;\n  }\n  /**\n   * Checks whether the event is valid per underlying NIPs.\n   *\n   * This method is meant to be overridden by subclasses that implement specific NIPs\n   * to allow the enforcement of NIP-specific validation rules.\n   *\n   * Otherwise, it will only check for basic event properties.\n   *\n   */\n  get isValid() {\n    return this.validate();\n  }\n  /**\n   * Creates a reply event for the current event.\n   * \n   * This function will use NIP-22 when appropriate (i.e. replies to non-kind:1 events).\n   * This function does not have side-effects; it will just return an event with the appropriate tags\n   * to generate the reply event; the caller is responsible for publishing the event.\n   */\n  reply() {\n    const reply = new _NDKEvent(this.ndk);\n    if (this.kind === 1) {\n      reply.kind = 1;\n      const opHasETag = this.hasTag(\"e\");\n      if (opHasETag) {\n        reply.tags = [\n          ...reply.tags,\n          ...this.getMatchingTags(\"e\"),\n          ...this.getMatchingTags(\"p\"),\n          ...this.getMatchingTags(\"a\"),\n          ...this.referenceTags(\"reply\")\n        ];\n      } else {\n        reply.tag(this, \"root\");\n      }\n    } else {\n      reply.kind = 1111 /* GenericReply */;\n      const carryOverTags = [\"A\", \"E\", \"I\", \"P\"];\n      const rootTags = this.tags.filter((tag) => carryOverTags.includes(tag[0]));\n      if (rootTags.length > 0) {\n        const rootKind = this.tagValue(\"K\");\n        reply.tags.push(...rootTags);\n        if (rootKind) reply.tags.push([\"K\", rootKind]);\n        const [type, id, _, ...extra] = this.tagReference();\n        const tag = [type, id, ...extra];\n        reply.tags.push(tag);\n      } else {\n        const [type, id, _, relayHint] = this.tagReference();\n        const tag = [type, id, relayHint ?? \"\"];\n        if (type === \"e\") tag.push(this.pubkey);\n        reply.tags.push(tag);\n        const uppercaseTag = [...tag];\n        uppercaseTag[0] = uppercaseTag[0].toUpperCase();\n        reply.tags.push(uppercaseTag);\n        reply.tags.push([\"K\", this.kind.toString()]);\n        reply.tags.push([\"P\", this.pubkey]);\n      }\n      reply.tags.push([\"k\", this.kind.toString()]);\n      reply.tags.push(...this.getMatchingTags(\"p\"));\n      reply.tags.push([\"p\", this.pubkey]);\n    }\n    return reply;\n  }\n};\n\n// src/relay/connectivity.ts\nvar MAX_RECONNECT_ATTEMPTS = 5;\nvar FLAPPING_THRESHOLD_MS = 1e3;\nvar NDKRelayConnectivity = class {\n  ndkRelay;\n  ws;\n  _status;\n  timeoutMs;\n  connectedAt;\n  _connectionStats = {\n    attempts: 0,\n    success: 0,\n    durations: []\n  };\n  debug;\n  netDebug;\n  connectTimeout;\n  reconnectTimeout;\n  ndk;\n  openSubs = /* @__PURE__ */ new Map();\n  openCountRequests = /* @__PURE__ */ new Map();\n  openEventPublishes = /* @__PURE__ */ new Map();\n  serial = 0;\n  baseEoseTimeout = 4400;\n  constructor(ndkRelay, ndk) {\n    this.ndkRelay = ndkRelay;\n    this._status = 1 /* DISCONNECTED */;\n    const rand = Math.floor(Math.random() * 1e3);\n    this.debug = this.ndkRelay.debug.extend(\"connectivity\" + rand);\n    this.ndk = ndk;\n  }\n  /**\n   * Connects to the NDK relay and handles the connection lifecycle.\n   *\n   * This method attempts to establish a WebSocket connection to the NDK relay specified in the `ndkRelay` object.\n   * If the connection is successful, it updates the connection statistics, sets the connection status to `CONNECTED`,\n   * and emits `connect` and `ready` events on the `ndkRelay` object.\n   *\n   * If the connection attempt fails, it handles the error by either initiating a reconnection attempt or emitting a\n   * `delayed-connect` event on the `ndkRelay` object, depending on the `reconnect` parameter.\n   *\n   * @param timeoutMs - The timeout in milliseconds for the connection attempt. If not provided, the default timeout from the `ndkRelay` object is used.\n   * @param reconnect - Indicates whether a reconnection should be attempted if the connection fails. Defaults to `true`.\n   * @returns A Promise that resolves when the connection is established, or rejects if the connection fails.\n   */\n  async connect(timeoutMs, reconnect = true) {\n    if (this._status !== 2 /* RECONNECTING */ && this._status !== 1 /* DISCONNECTED */ || this.reconnectTimeout) {\n      this.debug(\n        \"Relay requested to be connected but was in state %s or it had a reconnect timeout\",\n        this._status\n      );\n      return;\n    }\n    if (this.reconnectTimeout) {\n      clearTimeout(this.reconnectTimeout);\n      this.reconnectTimeout = void 0;\n    }\n    if (this.connectTimeout) {\n      clearTimeout(this.connectTimeout);\n      this.connectTimeout = void 0;\n    }\n    timeoutMs ??= this.timeoutMs;\n    if (!this.timeoutMs && timeoutMs) this.timeoutMs = timeoutMs;\n    if (this.timeoutMs)\n      this.connectTimeout = setTimeout(\n        () => this.onConnectionError(reconnect),\n        this.timeoutMs\n      );\n    try {\n      this.updateConnectionStats.attempt();\n      if (this._status === 1 /* DISCONNECTED */)\n        this._status = 4 /* CONNECTING */;\n      else this._status = 2 /* RECONNECTING */;\n      this.ws = new WebSocket(this.ndkRelay.url);\n      this.ws.onopen = this.onConnect.bind(this);\n      this.ws.onclose = this.onDisconnect.bind(this);\n      this.ws.onmessage = this.onMessage.bind(this);\n      this.ws.onerror = this.onError.bind(this);\n    } catch (e) {\n      this.debug(`Failed to connect to ${this.ndkRelay.url}`, e);\n      this._status = 1 /* DISCONNECTED */;\n      if (reconnect) this.handleReconnection();\n      else this.ndkRelay.emit(\"delayed-connect\", 2 * 24 * 60 * 60 * 1e3);\n      throw e;\n    }\n  }\n  /**\n   * Disconnects the WebSocket connection to the NDK relay.\n   * This method sets the connection status to `NDKRelayStatus.DISCONNECTING`,\n   * attempts to close the WebSocket connection, and sets the status to\n   * `NDKRelayStatus.DISCONNECTED` if the disconnect operation fails.\n   */\n  disconnect() {\n    this._status = 0 /* DISCONNECTING */;\n    try {\n      this.ws?.close();\n    } catch (e) {\n      this.debug(\"Failed to disconnect\", e);\n      this._status = 1 /* DISCONNECTED */;\n    }\n  }\n  /**\n   * Handles the error that occurred when attempting to connect to the NDK relay.\n   * If `reconnect` is `true`, this method will initiate a reconnection attempt.\n   * Otherwise, it will emit a `delayed-connect` event on the `ndkRelay` object,\n   * indicating that a reconnection should be attempted after a delay.\n   *\n   * @param reconnect - Indicates whether a reconnection should be attempted.\n   */\n  onConnectionError(reconnect) {\n    this.debug(`Error connecting to ${this.ndkRelay.url}`, this.timeoutMs);\n    if (reconnect && !this.reconnectTimeout) {\n      this.handleReconnection();\n    }\n  }\n  /**\n   * Handles the connection event when the WebSocket connection is established.\n   * This method is called when the WebSocket connection is successfully opened.\n   * It clears any existing connection and reconnection timeouts, updates the connection statistics,\n   * sets the connection status to `CONNECTED`, and emits `connect` and `ready` events on the `ndkRelay` object.\n   */\n  onConnect() {\n    this.netDebug?.(\"connected\", this.ndkRelay);\n    if (this.reconnectTimeout) {\n      clearTimeout(this.reconnectTimeout);\n      this.reconnectTimeout = void 0;\n    }\n    if (this.connectTimeout) {\n      clearTimeout(this.connectTimeout);\n      this.connectTimeout = void 0;\n    }\n    this.updateConnectionStats.connected();\n    this._status = 5 /* CONNECTED */;\n    this.ndkRelay.emit(\"connect\");\n    this.ndkRelay.emit(\"ready\");\n  }\n  /**\n   * Handles the disconnection event when the WebSocket connection is closed.\n   * This method is called when the WebSocket connection is successfully closed.\n   * It updates the connection statistics, sets the connection status to `DISCONNECTED`,\n   * initiates a reconnection attempt if we didn't disconnect ourselves,\n   * and emits a `disconnect` event on the `ndkRelay` object.\n   */\n  onDisconnect() {\n    this.netDebug?.(\"disconnected\", this.ndkRelay);\n    this.updateConnectionStats.disconnected();\n    if (this._status === 5 /* CONNECTED */) {\n      this.handleReconnection();\n    }\n    this._status = 1 /* DISCONNECTED */;\n    this.ndkRelay.emit(\"disconnect\");\n  }\n  /**\n   * Handles incoming messages from the NDK relay WebSocket connection.\n   * This method is called whenever a message is received from the relay.\n   * It parses the message data and dispatches the appropriate handling logic based on the message type.\n   *\n   * @param event - The MessageEvent containing the received message data.\n   */\n  onMessage(event) {\n    this.netDebug?.(event.data, this.ndkRelay, \"recv\");\n    try {\n      const data = JSON.parse(event.data);\n      const [cmd, id, ...rest] = data;\n      switch (cmd) {\n        case \"EVENT\": {\n          const so = this.openSubs.get(id);\n          const event2 = data[2];\n          if (!so) {\n            this.debug(`Received event for unknown subscription ${id}`);\n            return;\n          }\n          so.onevent(event2);\n          return;\n        }\n        case \"COUNT\": {\n          const payload = data[2];\n          const cr = this.openCountRequests.get(id);\n          if (cr) {\n            cr.resolve(payload.count);\n            this.openCountRequests.delete(id);\n          }\n          return;\n        }\n        case \"EOSE\": {\n          const so = this.openSubs.get(id);\n          if (!so) return;\n          so.oneose(id);\n          return;\n        }\n        case \"OK\": {\n          const ok = data[2];\n          const reason = data[3];\n          const ep = this.openEventPublishes.get(id);\n          const firstEp = ep?.pop();\n          if (!ep || !firstEp) {\n            this.debug(\"Received OK for unknown event publish\", id);\n            return;\n          }\n          if (ok) firstEp.resolve(reason);\n          else firstEp.reject(new Error(reason));\n          if (ep.length === 0) {\n            this.openEventPublishes.delete(id);\n          } else {\n            this.openEventPublishes.set(id, ep);\n          }\n          return;\n        }\n        case \"CLOSED\": {\n          const so = this.openSubs.get(id);\n          if (!so) return;\n          so.onclosed(data[2]);\n          return;\n        }\n        case \"NOTICE\":\n          this.onNotice(data[1]);\n          return;\n        case \"AUTH\": {\n          this.onAuthRequested(data[1]);\n          return;\n        }\n      }\n    } catch (error) {\n      this.debug(\n        `Error parsing message from ${this.ndkRelay.url}: ${error.message}`,\n        error?.stack\n      );\n      return;\n    }\n  }\n  /**\n   * Handles an authentication request from the NDK relay.\n   *\n   * If an authentication policy is configured, it will be used to authenticate the connection.\n   * Otherwise, the `auth` event will be emitted to allow the application to handle the authentication.\n   *\n   * @param challenge - The authentication challenge provided by the NDK relay.\n   */\n  async onAuthRequested(challenge) {\n    const authPolicy = this.ndkRelay.authPolicy ?? this.ndk?.relayAuthDefaultPolicy;\n    this.debug(\"Relay requested authentication\", {\n      havePolicy: !!authPolicy\n    });\n    if (this._status === 7 /* AUTHENTICATING */) {\n      this.debug(\"Already authenticating, ignoring\");\n      return;\n    }\n    this._status = 6 /* AUTH_REQUESTED */;\n    if (authPolicy) {\n      if (this._status >= 5 /* CONNECTED */) {\n        this._status = 7 /* AUTHENTICATING */;\n        let res;\n        try {\n          res = await authPolicy(this.ndkRelay, challenge);\n        } catch (e) {\n          this.debug(\"Authentication policy threw an error\", e);\n          res = false;\n        }\n        this.debug(\"Authentication policy returned\", !!res);\n        if (res instanceof NDKEvent || res === true) {\n          if (res instanceof NDKEvent) {\n            await this.auth(res);\n          }\n          const authenticate = async () => {\n            if (this._status >= 5 /* CONNECTED */ && this._status < 8 /* AUTHENTICATED */) {\n              const event = new NDKEvent(this.ndk);\n              event.kind = 22242 /* ClientAuth */;\n              event.tags = [\n                [\"relay\", this.ndkRelay.url],\n                [\"challenge\", challenge]\n              ];\n              await event.sign();\n              this.auth(event).then(() => {\n                this._status = 8 /* AUTHENTICATED */;\n                this.ndkRelay.emit(\"authed\");\n                this.debug(\"Authentication successful\");\n              }).catch((e) => {\n                this._status = 6 /* AUTH_REQUESTED */;\n                this.ndkRelay.emit(\"auth:failed\", e);\n                this.debug(\"Authentication failed\", e);\n              });\n            } else {\n              this.debug(\n                \"Authentication failed, it changed status, status is %d\",\n                this._status\n              );\n            }\n          };\n          if (res === true) {\n            if (!this.ndk?.signer) {\n              this.debug(\"No signer available for authentication localhost\");\n              this.ndk?.once(\"signer:ready\", authenticate);\n            } else {\n              authenticate().catch((e) => {\n                console.error(\"Error authenticating\", e);\n              });\n            }\n          }\n          this._status = 5 /* CONNECTED */;\n          this.ndkRelay.emit(\"authed\");\n        }\n      }\n    } else {\n      this.ndkRelay.emit(\"auth\", challenge);\n    }\n  }\n  /**\n   * Handles errors that occur on the WebSocket connection to the relay.\n   * @param error - The error or event that occurred.\n   */\n  onError(error) {\n    this.debug(`WebSocket error on ${this.ndkRelay.url}:`, error);\n  }\n  /**\n   * Gets the current status of the NDK relay connection.\n   * @returns {NDKRelayStatus} The current status of the NDK relay connection.\n   */\n  get status() {\n    return this._status;\n  }\n  /**\n   * Checks if the NDK relay connection is currently available.\n   * @returns {boolean} `true` if the relay connection is in the `CONNECTED` status, `false` otherwise.\n   */\n  isAvailable() {\n    return this._status === 5 /* CONNECTED */;\n  }\n  /**\n   * Checks if the NDK relay connection is flapping, which means the connection is rapidly\n   * disconnecting and reconnecting. This is determined by analyzing the durations of the\n   * last three connection attempts. If the standard deviation of the durations is less\n   * than 1000 milliseconds, the connection is considered to be flapping.\n   *\n   * @returns {boolean} `true` if the connection is flapping, `false` otherwise.\n   */\n  isFlapping() {\n    const durations = this._connectionStats.durations;\n    if (durations.length % 3 !== 0) return false;\n    const sum = durations.reduce((a, b) => a + b, 0);\n    const avg = sum / durations.length;\n    const variance = durations.map((x) => Math.pow(x - avg, 2)).reduce((a, b) => a + b, 0) / durations.length;\n    const stdDev = Math.sqrt(variance);\n    const isFlapping = stdDev < FLAPPING_THRESHOLD_MS;\n    return isFlapping;\n  }\n  /**\n   * Handles a notice received from the NDK relay.\n   * If the notice indicates the relay is complaining (e.g. \"too many\" or \"maximum\"),\n   * the method disconnects from the relay and attempts to reconnect after a 2-second delay.\n   * A debug message is logged with the relay URL and the notice text.\n   * The \"notice\" event is emitted on the ndkRelay instance with the notice text.\n   *\n   * @param notice - The notice text received from the NDK relay.\n   */\n  async onNotice(notice) {\n    this.ndkRelay.emit(\"notice\", notice);\n  }\n  /**\n   * Attempts to reconnect to the NDK relay after a connection is lost.\n   * This function is called recursively to handle multiple reconnection attempts.\n   * It checks if the relay is flapping and emits a \"flapping\" event if so.\n   * It then calculates a delay before the next reconnection attempt based on the number of previous attempts.\n   * The function sets a timeout to execute the next reconnection attempt after the calculated delay.\n   * If the maximum number of reconnection attempts is reached, a debug message is logged.\n   *\n   * @param attempt - The current attempt number (default is 0).\n   */\n  handleReconnection(attempt = 0) {\n    if (this.reconnectTimeout) return;\n    if (this.isFlapping()) {\n      this.ndkRelay.emit(\"flapping\", this._connectionStats);\n      this._status = 3 /* FLAPPING */;\n      return;\n    }\n    const reconnectDelay = this.connectedAt ? Math.max(0, 6e4 - (Date.now() - this.connectedAt)) : 5e3 * (this._connectionStats.attempts + 1);\n    this.reconnectTimeout = setTimeout(() => {\n      this.reconnectTimeout = void 0;\n      this._status = 2 /* RECONNECTING */;\n      this.connect().catch((err) => {\n        if (attempt < MAX_RECONNECT_ATTEMPTS) {\n          setTimeout(\n            () => {\n              this.handleReconnection(attempt + 1);\n            },\n            1e3 * (attempt + 1) ^ 4\n          );\n        } else {\n          this.debug(\"Reconnect failed\");\n        }\n      });\n    }, reconnectDelay);\n    this.ndkRelay.emit(\"delayed-connect\", reconnectDelay);\n    this.debug(\"Reconnecting in\", reconnectDelay);\n    this._connectionStats.nextReconnectAt = Date.now() + reconnectDelay;\n  }\n  /**\n   * Sends a message to the NDK relay if the connection is in the CONNECTED state and the WebSocket is open.\n   * If the connection is not in the CONNECTED state or the WebSocket is not open, logs a debug message and throws an error.\n   *\n   * @param message - The message to send to the NDK relay.\n   * @throws {Error} If attempting to send on a closed relay connection.\n   */\n  async send(message) {\n    if (this._status >= 5 /* CONNECTED */ && this.ws?.readyState === WebSocket.OPEN) {\n      this.ws?.send(message);\n      this.netDebug?.(message, this.ndkRelay, \"send\");\n    } else {\n      this.debug(\n        `Not connected to ${this.ndkRelay.url} (%d), not sending message ${message}`,\n        this._status\n      );\n    }\n  }\n  /**\n   * Authenticates the NDK event by sending it to the NDK relay and returning a promise that resolves with the result.\n   *\n   * @param event - The NDK event to authenticate.\n   * @returns A promise that resolves with the authentication result.\n   */\n  async auth(event) {\n    const ret = new Promise((resolve, reject) => {\n      const val = this.openEventPublishes.get(event.id) ?? [];\n      val.push({ resolve, reject });\n      this.openEventPublishes.set(event.id, val);\n    });\n    this.send('[\"AUTH\",' + JSON.stringify(event.rawEvent()) + \"]\");\n    return ret;\n  }\n  /**\n   * Publishes an NDK event to the relay and returns a promise that resolves with the result.\n   *\n   * @param event - The NDK event to publish.\n   * @returns A promise that resolves with the result of the event publication.\n   * @throws {Error} If attempting to publish on a closed relay connection.\n   */\n  async publish(event) {\n    const ret = new Promise((resolve, reject) => {\n      const val = this.openEventPublishes.get(event.id) ?? [];\n      if (val.length > 0) {\n        console.warn(\n          \"Duplicate event publishing detected, you are publishing event \" + event.id + \" twice\"\n        );\n      }\n      val.push({ resolve, reject });\n      this.openEventPublishes.set(event.id, val);\n    });\n    this.send('[\"EVENT\",' + JSON.stringify(event) + \"]\");\n    return ret;\n  }\n  /**\n   * Counts the number of events that match the provided filters.\n   *\n   * @param filters - The filters to apply to the count request.\n   * @param params - An optional object containing a custom id for the count request.\n   * @returns A promise that resolves with the number of matching events.\n   * @throws {Error} If attempting to send the count request on a closed relay connection.\n   */\n  async count(filters, params) {\n    this.serial++;\n    const id = params?.id || \"count:\" + this.serial;\n    const ret = new Promise((resolve, reject) => {\n      this.openCountRequests.set(id, { resolve, reject });\n    });\n    this.send('[\"COUNT\",\"' + id + '\",' + JSON.stringify(filters).substring(1));\n    return ret;\n  }\n  close(subId, reason) {\n    this.send('[\"CLOSE\",\"' + subId + '\"]');\n    const sub = this.openSubs.get(subId);\n    this.openSubs.delete(subId);\n    if (sub) sub.onclose(reason);\n  }\n  /**\n   * Subscribes to the NDK relay with the provided filters and parameters.\n   *\n   * @param filters - The filters to apply to the subscription.\n   * @param params - The subscription parameters, including an optional custom id.\n   * @returns A new NDKRelaySubscription instance.\n   */\n  req(relaySub) {\n    this.send(\n      '[\"REQ\",\"' + relaySub.subId + '\",' + JSON.stringify(relaySub.executeFilters).substring(1)\n    ) + \"]\";\n    this.openSubs.set(relaySub.subId, relaySub);\n  }\n  /**\n   * Utility functions to update the connection stats.\n   */\n  updateConnectionStats = {\n    connected: () => {\n      this._connectionStats.success++;\n      this._connectionStats.connectedAt = Date.now();\n    },\n    disconnected: () => {\n      if (this._connectionStats.connectedAt) {\n        this._connectionStats.durations.push(\n          Date.now() - this._connectionStats.connectedAt\n        );\n        if (this._connectionStats.durations.length > 100) {\n          this._connectionStats.durations.shift();\n        }\n      }\n      this._connectionStats.connectedAt = void 0;\n    },\n    attempt: () => {\n      this._connectionStats.attempts++;\n      this._connectionStats.connectedAt = Date.now();\n    }\n  };\n  /** Returns the connection stats. */\n  get connectionStats() {\n    return this._connectionStats;\n  }\n  /** Returns the relay URL */\n  get url() {\n    return this.ndkRelay.url;\n  }\n  get connected() {\n    return this._status >= 5 /* CONNECTED */ && this.ws?.readyState === WebSocket.OPEN;\n  }\n};\n\n// src/relay/publisher.ts\nvar NDKRelayPublisher = class {\n  ndkRelay;\n  debug;\n  constructor(ndkRelay) {\n    this.ndkRelay = ndkRelay;\n    this.debug = ndkRelay.debug.extend(\"publisher\");\n  }\n  /**\n   * Published an event to the relay; if the relay is not connected, it will\n   * wait for the relay to connect before publishing the event.\n   *\n   * If the relay does not connect within the timeout, the publish operation\n   * will fail.\n   * @param event  The event to publish\n   * @param timeoutMs  The timeout for the publish operation in milliseconds\n   * @returns A promise that resolves when the event has been published or rejects if the operation times out\n   */\n  async publish(event, timeoutMs = 2500) {\n    let timeout;\n    const publishConnected = () => {\n      return new Promise((resolve, reject) => {\n        try {\n          this.publishEvent(event).then((result) => {\n            this.ndkRelay.emit(\"published\", event);\n            event.emit(\"relay:published\", this.ndkRelay);\n            resolve(true);\n          }).catch(reject);\n        } catch (err) {\n          reject(err);\n        }\n      });\n    };\n    const timeoutPromise = new Promise((_, reject) => {\n      timeout = setTimeout(() => {\n        timeout = void 0;\n        reject(new Error(\"Timeout: \" + timeoutMs + \"ms\"));\n      }, timeoutMs);\n    });\n    const onConnectHandler = () => {\n      publishConnected().then((result) => connectResolve(result)).catch((err) => connectReject(err));\n    };\n    let connectResolve;\n    let connectReject;\n    const onError = (err) => {\n      this.ndkRelay.debug(\"Publish failed\", err, event.id);\n      this.ndkRelay.emit(\"publish:failed\", event, err);\n      event.emit(\"relay:publish:failed\", this.ndkRelay, err);\n      throw err;\n    };\n    const onFinally = () => {\n      if (timeout) clearTimeout(timeout);\n      this.ndkRelay.removeListener(\"connect\", onConnectHandler);\n    };\n    if (this.ndkRelay.status >= 5 /* CONNECTED */) {\n      return Promise.race([publishConnected(), timeoutPromise]).catch(onError).finally(onFinally);\n    } else {\n      if (this.ndkRelay.status <= 1 /* DISCONNECTED */) {\n        console.warn(\n          \"Relay is disconnected, trying to connect to publish an event\",\n          this.ndkRelay.url\n        );\n        this.ndkRelay.connect();\n      } else {\n        console.warn(\n          \"Relay not connected, waiting for connection to publish an event\",\n          this.ndkRelay.url\n        );\n      }\n      return Promise.race([\n        new Promise((resolve, reject) => {\n          connectResolve = resolve;\n          connectReject = reject;\n          this.ndkRelay.once(\"connect\", onConnectHandler);\n        }),\n        timeoutPromise\n      ]).catch(onError).finally(onFinally);\n    }\n  }\n  async publishEvent(event) {\n    return this.ndkRelay.connectivity.publish(event.rawEvent());\n  }\n};\n\n// src/subscription/grouping.ts\nfunction filterFingerprint(filters, closeOnEose) {\n  const elements = [];\n  for (const filter of filters) {\n    const keys = Object.entries(filter || {}).map(([key, values]) => {\n      if ([\"since\", \"until\"].includes(key)) {\n        return key + \":\" + values;\n      } else {\n        return key;\n      }\n    }).sort().join(\"-\");\n    elements.push(keys);\n  }\n  let id = closeOnEose ? \"+\" : \"\";\n  id += elements.join(\"|\");\n  return id;\n}\nfunction mergeFilters(filters) {\n  const result = [];\n  const lastResult = {};\n  filters.filter((f) => !!f.limit).forEach((filterWithLimit) => result.push(filterWithLimit));\n  filters = filters.filter((f) => !f.limit);\n  if (filters.length === 0) return result;\n  filters.forEach((filter) => {\n    Object.entries(filter).forEach(([key, value]) => {\n      if (Array.isArray(value)) {\n        if (lastResult[key] === void 0) {\n          lastResult[key] = [...value];\n        } else {\n          lastResult[key] = Array.from(/* @__PURE__ */ new Set([...lastResult[key], ...value]));\n        }\n      } else {\n        lastResult[key] = value;\n      }\n    });\n  });\n  return [...result, lastResult];\n}\n\n// src/relay/subscription.ts\nvar NDKRelaySubscription = class {\n  fingerprint;\n  items = /* @__PURE__ */ new Map();\n  topSubManager;\n  debug;\n  /**\n   * Tracks the status of this REQ.\n   */\n  status = 0 /* INITIAL */;\n  onClose;\n  relay;\n  /**\n   * Whether this subscription has reached EOSE.\n   */\n  eosed = false;\n  /**\n   * Timeout at which this subscription will\n   * start executing.\n   */\n  executionTimer;\n  /**\n   * Track the time at which this subscription will fire.\n   */\n  fireTime;\n  /**\n   * The delay type that the current fireTime was calculated with.\n   */\n  delayType;\n  /**\n   * The filters that have been executed.\n   */\n  executeFilters;\n  id = Math.random().toString(36).substring(7);\n  /**\n   *\n   * @param fingerprint The fingerprint of this subscription.\n   */\n  constructor(relay, fingerprint, topSubManager) {\n    this.relay = relay;\n    this.topSubManager = topSubManager;\n    this.debug = relay.debug.extend(\"subscription-\" + this.id);\n    this.fingerprint = fingerprint || Math.random().toString(36).substring(7);\n  }\n  _subId;\n  get subId() {\n    if (this._subId) return this._subId;\n    this._subId = this.fingerprint.slice(0, 15);\n    return this._subId;\n  }\n  subIdParts = /* @__PURE__ */ new Set();\n  addSubIdPart(part) {\n    this.subIdParts.add(part);\n  }\n  addItem(subscription, filters) {\n    this.debug(\"Adding item\", { filters, internalId: subscription.internalId, status: this.status, fingerprint: this.fingerprint, id: this.subId, items: this.items, itemsSize: this.items.size });\n    if (this.items.has(subscription.internalId)) return;\n    subscription.on(\"close\", this.removeItem.bind(this, subscription));\n    this.items.set(subscription.internalId, { subscription, filters });\n    if (this.status !== 3 /* RUNNING */) {\n      if (subscription.subId && (!this._subId || this._subId.length < 48)) {\n        if (this.status === 0 /* INITIAL */ || this.status === 1 /* PENDING */) {\n          this.addSubIdPart(subscription.subId);\n        }\n      }\n    }\n    switch (this.status) {\n      case 0 /* INITIAL */:\n        this.evaluateExecutionPlan(subscription);\n        break;\n      case 3 /* RUNNING */:\n        console.log(\n          \"BUG: This should not happen: This subscription needs to catch up with a subscription that was already running\",\n          filters\n        );\n        break;\n      case 1 /* PENDING */:\n        this.evaluateExecutionPlan(subscription);\n        break;\n      case 4 /* CLOSED */:\n        this.debug(\n          \"Subscription is closed, cannot add new items %o (%o)\",\n          subscription,\n          filters\n        );\n        throw new Error(\"Cannot add new items to a closed subscription\");\n    }\n  }\n  /**\n   * A subscription has been closed, remove it from the list of items.\n   * @param subscription\n   */\n  removeItem(subscription) {\n    this.items.delete(subscription.internalId);\n    if (this.items.size === 0) {\n      if (!this.eosed) return;\n      this.close();\n      this.cleanup();\n    }\n  }\n  close() {\n    if (this.status === 4 /* CLOSED */) return;\n    const prevStatus = this.status;\n    this.status = 4 /* CLOSED */;\n    if (prevStatus === 3 /* RUNNING */) {\n      try {\n        this.relay.close(this.subId);\n      } catch (e) {\n        this.debug(\"Error closing subscription\", e, this);\n      }\n    } else {\n      this.debug(\"Subscription wanted to close but it wasn't running, this is probably ok\", {\n        subId: this.subId,\n        prevStatus,\n        sub: this\n      });\n    }\n    this.cleanup();\n  }\n  cleanup() {\n    if (this.executionTimer) clearTimeout(this.executionTimer);\n    this.relay.off(\"ready\", this.executeOnRelayReady);\n    this.relay.off(\"authed\", this.reExecuteAfterAuth);\n    if (this.onClose) this.onClose(this);\n  }\n  evaluateExecutionPlan(subscription) {\n    if (!subscription.isGroupable()) {\n      this.status = 1 /* PENDING */;\n      this.execute();\n      return;\n    }\n    if (subscription.filters.find((filter) => !!filter.limit)) {\n      this.executeFilters = this.compileFilters();\n      if (this.executeFilters.length >= 10) {\n        this.status = 1 /* PENDING */;\n        this.execute();\n        return;\n      }\n    }\n    const delay = subscription.groupableDelay;\n    const delayType = subscription.groupableDelayType;\n    if (!delay) throw new Error(\"Cannot group a subscription without a delay\");\n    if (this.status === 0 /* INITIAL */) {\n      this.schedule(delay, delayType);\n    } else {\n      const existingDelayType = this.delayType;\n      const timeUntilFire = this.fireTime - Date.now();\n      if (existingDelayType === \"at-least\" && delayType === \"at-least\") {\n        if (timeUntilFire < delay) {\n          if (this.executionTimer) clearTimeout(this.executionTimer);\n          this.schedule(delay, delayType);\n        }\n      } else if (existingDelayType === \"at-least\" && delayType === \"at-most\") {\n        if (timeUntilFire > delay) {\n          if (this.executionTimer) clearTimeout(this.executionTimer);\n          this.schedule(delay, delayType);\n        }\n      } else if (existingDelayType === \"at-most\" && delayType === \"at-most\") {\n        if (timeUntilFire > delay) {\n          if (this.executionTimer) clearTimeout(this.executionTimer);\n          this.schedule(delay, delayType);\n        }\n      } else if (existingDelayType === \"at-most\" && delayType === \"at-least\") {\n        if (timeUntilFire > delay) {\n          if (this.executionTimer) clearTimeout(this.executionTimer);\n          this.schedule(delay, delayType);\n        }\n      } else {\n        throw new Error(\n          \"Unknown delay type combination \" + existingDelayType + \" \" + delayType\n        );\n      }\n    }\n  }\n  schedule(delay, delayType) {\n    this.status = 1 /* PENDING */;\n    const currentTime = Date.now();\n    this.fireTime = currentTime + delay;\n    this.delayType = delayType;\n    const timer = setTimeout(this.execute.bind(this), delay);\n    if (delayType === \"at-least\") {\n      this.executionTimer = timer;\n    }\n  }\n  executeOnRelayReady = () => {\n    if (this.status !== 2 /* WAITING */) return;\n    if (this.items.size === 0) {\n      this.debug(\"No items to execute; this relay was probably too slow to respond and the caller gave up\", { status: this.status, fingerprint: this.fingerprint, items: this.items, itemsSize: this.items.size, id: this.id, subId: this.subId });\n      this.cleanup();\n      return;\n    }\n    this.debug(\"Executing on relay ready\", { status: this.status, fingerprint: this.fingerprint, items: this.items, itemsSize: this.items.size });\n    this.status = 1 /* PENDING */;\n    this.execute();\n  };\n  finalizeSubId() {\n    if (this.subIdParts.size > 0) {\n      this._subId = Array.from(this.subIdParts).join(\"-\");\n    } else {\n      this._subId = this.fingerprint.slice(0, 15);\n    }\n    this._subId += \"-\" + Math.random().toString(36).substring(2, 7);\n  }\n  // we do it this way so that we can remove the listener\n  reExecuteAfterAuth = (() => {\n    const oldSubId = this.subId;\n    this.debug(\"Re-executing after auth\", this.items.size);\n    if (this.eosed) {\n      this.relay.close(this.subId);\n    } else {\n      this.debug(\n        \"We are abandoning an opened subscription, once it EOSE's, the handler will close it\",\n        { oldSubId }\n      );\n    }\n    this._subId = void 0;\n    this.status = 1 /* PENDING */;\n    this.execute();\n    this.debug(\"Re-executed after auth %s \\u{1F449} %s\", oldSubId, this.subId);\n  }).bind(this);\n  execute() {\n    if (this.status !== 1 /* PENDING */) {\n      return;\n    }\n    if (!this.relay.connected) {\n      this.status = 2 /* WAITING */;\n      this.debug(\"Waiting for relay to be ready\", { status: this.status, id: this.subId, fingerprint: this.fingerprint, items: this.items, itemsSize: this.items.size });\n      this.relay.once(\"ready\", this.executeOnRelayReady);\n      return;\n    } else if (this.relay.status < 8 /* AUTHENTICATED */) {\n      this.relay.once(\"authed\", this.reExecuteAfterAuth);\n    }\n    this.status = 3 /* RUNNING */;\n    this.finalizeSubId();\n    this.executeFilters = this.compileFilters();\n    this.relay.req(this);\n  }\n  onstart() {\n  }\n  onevent(event) {\n    this.topSubManager.dispatchEvent(event, this.relay);\n  }\n  oneose(subId) {\n    this.eosed = true;\n    if (subId !== this.subId) {\n      this.debug(\"Received EOSE for an abandoned subscription\", subId, this.subId);\n      this.relay.close(subId);\n      return;\n    }\n    if (this.items.size === 0) {\n      this.close();\n    }\n    for (const { subscription } of this.items.values()) {\n      subscription.eoseReceived(this.relay);\n      if (subscription.closeOnEose) {\n        this.debug(\"Removing item because of EOSE\", { filters: subscription.filters, internalId: subscription.internalId, status: this.status, fingerprint: this.fingerprint, items: this.items, itemsSize: this.items.size });\n        this.removeItem(subscription);\n      }\n    }\n  }\n  onclose(reason) {\n    this.status = 4 /* CLOSED */;\n  }\n  onclosed(reason) {\n    if (!reason) return;\n    for (const { subscription } of this.items.values()) {\n      subscription.closedReceived(this.relay, reason);\n    }\n  }\n  /**\n   * Grabs the filters from all the subscriptions\n   * and merges them into a single filter.\n   */\n  compileFilters() {\n    const mergedFilters = [];\n    const filters = Array.from(this.items.values()).map((item) => item.filters);\n    if (!filters[0]) {\n      this.debug(\"\\u{1F440} No filters to merge\", this.items);\n      console.error(\"BUG: No filters to merge!\", this.items);\n      return [];\n    }\n    const filterCount = filters[0].length;\n    for (let i = 0; i < filterCount; i++) {\n      const allFiltersAtIndex = filters.map((filter) => filter[i]);\n      mergedFilters.push(...mergeFilters(allFiltersAtIndex));\n    }\n    return mergedFilters;\n  }\n};\n\n// src/relay/sub-manager.ts\nvar NDKRelaySubscriptionManager = class {\n  relay;\n  subscriptions;\n  generalSubManager;\n  /**\n   * @param relay - The relay instance.\n   * @param generalSubManager - The subscription manager instance.\n   */\n  constructor(relay, generalSubManager) {\n    this.relay = relay;\n    this.subscriptions = /* @__PURE__ */ new Map();\n    this.generalSubManager = generalSubManager;\n  }\n  /**\n   * Adds a subscription to the manager.\n   */\n  addSubscription(sub, filters) {\n    let relaySub;\n    if (!sub.isGroupable()) {\n      relaySub = this.createSubscription(sub, filters);\n    } else {\n      const filterFp = filterFingerprint(filters, sub.closeOnEose);\n      if (filterFp) {\n        const existingSubs = this.subscriptions.get(filterFp);\n        relaySub = (existingSubs || []).find(\n          (sub2) => sub2.status < 3 /* RUNNING */\n        );\n      }\n      relaySub ??= this.createSubscription(sub, filters, filterFp);\n    }\n    relaySub.addItem(sub, filters);\n  }\n  createSubscription(sub, filters, fingerprint) {\n    const relaySub = new NDKRelaySubscription(this.relay, fingerprint || null, this.generalSubManager);\n    relaySub.onClose = this.onRelaySubscriptionClose.bind(this);\n    const currentVal = this.subscriptions.get(relaySub.fingerprint) ?? [];\n    this.subscriptions.set(relaySub.fingerprint, [...currentVal, relaySub]);\n    return relaySub;\n  }\n  onRelaySubscriptionClose(sub) {\n    let currentVal = this.subscriptions.get(sub.fingerprint) ?? [];\n    if (!currentVal) {\n      console.warn(\n        \"Unexpectedly did not find a subscription with fingerprint\",\n        sub.fingerprint\n      );\n    } else if (currentVal.length === 1) {\n      this.subscriptions.delete(sub.fingerprint);\n    } else {\n      currentVal = currentVal.filter((s) => s.id !== sub.id);\n      this.subscriptions.set(sub.fingerprint, currentVal);\n    }\n  }\n};\n\n// src/relay/index.ts\nvar NDKRelayStatus = /* @__PURE__ */ ((NDKRelayStatus2) => {\n  NDKRelayStatus2[NDKRelayStatus2[\"DISCONNECTING\"] = 0] = \"DISCONNECTING\";\n  NDKRelayStatus2[NDKRelayStatus2[\"DISCONNECTED\"] = 1] = \"DISCONNECTED\";\n  NDKRelayStatus2[NDKRelayStatus2[\"RECONNECTING\"] = 2] = \"RECONNECTING\";\n  NDKRelayStatus2[NDKRelayStatus2[\"FLAPPING\"] = 3] = \"FLAPPING\";\n  NDKRelayStatus2[NDKRelayStatus2[\"CONNECTING\"] = 4] = \"CONNECTING\";\n  NDKRelayStatus2[NDKRelayStatus2[\"CONNECTED\"] = 5] = \"CONNECTED\";\n  NDKRelayStatus2[NDKRelayStatus2[\"AUTH_REQUESTED\"] = 6] = \"AUTH_REQUESTED\";\n  NDKRelayStatus2[NDKRelayStatus2[\"AUTHENTICATING\"] = 7] = \"AUTHENTICATING\";\n  NDKRelayStatus2[NDKRelayStatus2[\"AUTHENTICATED\"] = 8] = \"AUTHENTICATED\";\n  return NDKRelayStatus2;\n})(NDKRelayStatus || {});\nvar NDKRelay = class _NDKRelay extends EventEmitter2 {\n  url;\n  scores;\n  connectivity;\n  subs;\n  publisher;\n  authPolicy;\n  /**\n   * The lowest validation ratio this relay can reach.\n   */\n  lowestValidationRatio;\n  /**\n   * Current validation ratio this relay is targeting.\n   */\n  targetValidationRatio;\n  validationRatioFn;\n  /**\n   * This tracks events that have been seen by this relay\n   * with a valid signature.\n   */\n  validatedEventCount = 0;\n  /**\n   * This tracks events that have been seen by this relay\n   * but have not been validated.\n   */\n  nonValidatedEventCount = 0;\n  /**\n   * Whether this relay is trusted.\n   *\n   * Trusted relay's events do not get their signature verified.\n   */\n  trusted = false;\n  complaining = false;\n  debug;\n  static defaultValidationRatioUpdateFn = (relay, validatedCount, nonValidatedCount) => {\n    if (relay.lowestValidationRatio === void 0 || relay.targetValidationRatio === void 0)\n      return 1;\n    let newRatio = relay.validationRatio;\n    if (relay.validationRatio > relay.targetValidationRatio) {\n      const factor = validatedCount / 100;\n      newRatio = Math.max(relay.lowestValidationRatio, relay.validationRatio - factor);\n    }\n    if (newRatio < relay.validationRatio) {\n      return newRatio;\n    }\n    return relay.validationRatio;\n  };\n  constructor(url, authPolicy, ndk) {\n    super();\n    this.url = normalizeRelayUrl(url);\n    this.scores = /* @__PURE__ */ new Map();\n    this.debug = debug(`ndk:relay:${url}`);\n    this.connectivity = new NDKRelayConnectivity(this, ndk);\n    this.connectivity.netDebug = ndk?.netDebug;\n    this.req = this.connectivity.req.bind(this.connectivity);\n    this.close = this.connectivity.close.bind(this.connectivity);\n    this.subs = new NDKRelaySubscriptionManager(this, ndk.subManager);\n    this.publisher = new NDKRelayPublisher(this);\n    this.authPolicy = authPolicy;\n    this.targetValidationRatio = ndk?.initialValidationRatio;\n    this.lowestValidationRatio = ndk?.lowestValidationRatio;\n    this.validationRatioFn = (ndk?.validationRatioFn ?? _NDKRelay.defaultValidationRatioUpdateFn).bind(this);\n    this.updateValidationRatio();\n    if (!ndk) {\n      console.trace(\"relay created without ndk\");\n    }\n  }\n  updateValidationRatio() {\n    setTimeout(() => {\n      this.updateValidationRatio();\n    }, 3e4);\n  }\n  get status() {\n    return this.connectivity.status;\n  }\n  get connectionStats() {\n    return this.connectivity.connectionStats;\n  }\n  /**\n   * Connects to the relay.\n   */\n  async connect(timeoutMs, reconnect = true) {\n    return this.connectivity.connect(timeoutMs, reconnect);\n  }\n  /**\n   * Disconnects from the relay.\n   */\n  disconnect() {\n    if (this.status === 1 /* DISCONNECTED */) {\n      return;\n    }\n    this.connectivity.disconnect();\n  }\n  /**\n   * Queues or executes the subscription of a specific set of filters\n   * within this relay.\n   *\n   * @param subscription NDKSubscription this filters belong to.\n   * @param filters Filters to execute\n   */\n  subscribe(subscription, filters) {\n    this.subs.addSubscription(subscription, filters);\n  }\n  /**\n   * Publishes an event to the relay with an optional timeout.\n   *\n   * If the relay is not connected, the event will be published when the relay connects,\n   * unless the timeout is reached before the relay connects.\n   *\n   * @param event The event to publish\n   * @param timeoutMs The timeout for the publish operation in milliseconds\n   * @returns A promise that resolves when the event has been published or rejects if the operation times out\n   */\n  async publish(event, timeoutMs = 2500) {\n    return this.publisher.publish(event, timeoutMs);\n  }\n  referenceTags() {\n    return [[\"r\", this.url]];\n  }\n  addValidatedEvent() {\n    this.validatedEventCount++;\n  }\n  addNonValidatedEvent() {\n    this.nonValidatedEventCount++;\n  }\n  /**\n   * The current validation ratio this relay has achieved.\n   */\n  get validationRatio() {\n    if (this.nonValidatedEventCount === 0) {\n      return 1;\n    }\n    return this.validatedEventCount / (this.validatedEventCount + this.nonValidatedEventCount);\n  }\n  shouldValidateEvent() {\n    if (this.trusted) {\n      return false;\n    }\n    if (this.targetValidationRatio === void 0) {\n      return true;\n    }\n    return this.validationRatio < this.targetValidationRatio;\n  }\n  get connected() {\n    return this.connectivity.connected;\n  }\n  req;\n  close;\n};\n\n// src/relay/pool/index.ts\nvar NDKPool = class extends EventEmitter3 {\n  // TODO: This should probably be an LRU cache\n  _relays = /* @__PURE__ */ new Map();\n  autoConnectRelays = /* @__PURE__ */ new Set();\n  blacklistRelayUrls;\n  debug;\n  temporaryRelayTimers = /* @__PURE__ */ new Map();\n  flappingRelays = /* @__PURE__ */ new Set();\n  // A map to store timeouts for each flapping relay.\n  backoffTimes = /* @__PURE__ */ new Map();\n  ndk;\n  constructor(relayUrls = [], blacklistedRelayUrls = [], ndk, debug8) {\n    super();\n    this.debug = debug8 ?? ndk.debug.extend(\"pool\");\n    this.ndk = ndk;\n    this.relayUrls = relayUrls;\n    this.blacklistRelayUrls = new Set(blacklistedRelayUrls);\n  }\n  get relays() {\n    return this._relays;\n  }\n  set relayUrls(urls) {\n    this._relays.clear();\n    for (const relayUrl of urls) {\n      const relay = new NDKRelay(relayUrl, void 0, this.ndk);\n      relay.connectivity.netDebug = this.ndk.netDebug;\n      this.addRelay(relay, false);\n    }\n  }\n  set name(name) {\n    this.debug = this.debug.extend(name);\n  }\n  /**\n   * Adds a relay to the pool, and sets a timer to remove it if it is not used within the specified time.\n   * @param relay - The relay to add to the pool.\n   * @param removeIfUnusedAfter - The time in milliseconds to wait before removing the relay from the pool after it is no longer used.\n   */\n  useTemporaryRelay(relay, removeIfUnusedAfter = 3e4, filters) {\n    const relayAlreadyInPool = this.relays.has(relay.url);\n    if (!relayAlreadyInPool) {\n      this.addRelay(relay);\n      this.debug(\"Adding temporary relay %s for filters %o\", relay.url, filters);\n    }\n    const existingTimer = this.temporaryRelayTimers.get(relay.url);\n    if (existingTimer) {\n      clearTimeout(existingTimer);\n    }\n    if (!relayAlreadyInPool || existingTimer) {\n      const timer = setTimeout(() => {\n        if (this.ndk.explicitRelayUrls?.includes(relay.url)) return;\n        this.removeRelay(relay.url);\n      }, removeIfUnusedAfter);\n      this.temporaryRelayTimers.set(relay.url, timer);\n    }\n  }\n  /**\n   * Adds a relay to the pool.\n   *\n   * @param relay - The relay to add to the pool.\n   * @param connect - Whether or not to connect to the relay.\n   */\n  addRelay(relay, connect = true) {\n    const isAlreadyInPool = this.relays.has(relay.url);\n    const isBlacklisted = this.blacklistRelayUrls?.has(relay.url);\n    const isCustomRelayUrl = relay.url.includes(\"/npub1\");\n    let reconnect = true;\n    const relayUrl = relay.url;\n    if (isAlreadyInPool) return;\n    if (isBlacklisted) {\n      this.debug(`Refusing to add relay ${relayUrl}: blacklisted`);\n      return;\n    }\n    if (isCustomRelayUrl) {\n      this.debug(`Refusing to add relay ${relayUrl}: is a filter relay`);\n      return;\n    }\n    if (this.ndk.cacheAdapter?.getRelayStatus) {\n      const info = this.ndk.cacheAdapter.getRelayStatus(relayUrl);\n      if (info && info.dontConnectBefore) {\n        if (info.dontConnectBefore > Date.now()) {\n          const delay = info.dontConnectBefore - Date.now();\n          this.debug(`Refusing to add relay ${relayUrl}: delayed connect for ${delay}ms`);\n          setTimeout(() => {\n            this.addRelay(relay, connect);\n          }, delay);\n          return;\n        } else {\n          reconnect = false;\n        }\n      }\n    }\n    const noticeHandler = (notice) => this.emit(\"notice\", relay, notice);\n    const connectHandler = () => this.handleRelayConnect(relayUrl);\n    const readyHandler = () => this.handleRelayReady(relay);\n    const disconnectHandler = () => this.emit(\"relay:disconnect\", relay);\n    const flappingHandler = () => this.handleFlapping(relay);\n    const authHandler = (challenge) => this.emit(\"relay:auth\", relay, challenge);\n    const authedHandler = () => this.emit(\"relay:authed\", relay);\n    relay.off(\"notice\", noticeHandler);\n    relay.off(\"connect\", connectHandler);\n    relay.off(\"ready\", readyHandler);\n    relay.off(\"disconnect\", disconnectHandler);\n    relay.off(\"flapping\", flappingHandler);\n    relay.off(\"auth\", authHandler);\n    relay.off(\"authed\", authedHandler);\n    relay.on(\"notice\", noticeHandler);\n    relay.on(\"connect\", connectHandler);\n    relay.on(\"ready\", readyHandler);\n    relay.on(\"disconnect\", disconnectHandler);\n    relay.on(\"flapping\", flappingHandler);\n    relay.on(\"auth\", authHandler);\n    relay.on(\"authed\", authedHandler);\n    relay.on(\"delayed-connect\", (delay) => {\n      if (this.ndk.cacheAdapter?.updateRelayStatus) {\n        this.ndk.cacheAdapter.updateRelayStatus(relay.url, {\n          dontConnectBefore: Date.now() + delay\n        });\n      }\n    });\n    this.relays.set(relayUrl, relay);\n    if (connect) this.autoConnectRelays.add(relayUrl);\n    if (connect) {\n      this.emit(\"relay:connecting\", relay);\n      relay.connect(void 0, reconnect).catch((e) => {\n        this.debug(`Failed to connect to relay ${relayUrl}`, e);\n      });\n    }\n  }\n  /**\n   * Removes a relay from the pool.\n   * @param relayUrl - The URL of the relay to remove.\n   * @returns {boolean} True if the relay was removed, false if it was not found.\n   */\n  removeRelay(relayUrl) {\n    const relay = this.relays.get(relayUrl);\n    if (relay) {\n      relay.disconnect();\n      this.relays.delete(relayUrl);\n      this.autoConnectRelays.delete(relayUrl);\n      this.emit(\"relay:disconnect\", relay);\n      return true;\n    }\n    const existingTimer = this.temporaryRelayTimers.get(relayUrl);\n    if (existingTimer) {\n      clearTimeout(existingTimer);\n      this.temporaryRelayTimers.delete(relayUrl);\n    }\n    return false;\n  }\n  /**\n   * Checks whether a relay is already connected in the pool.\n   */\n  isRelayConnected(url) {\n    const normalizedUrl = normalizeRelayUrl(url);\n    const relay = this.relays.get(normalizedUrl);\n    if (!relay) return false;\n    return relay.status === 5 /* CONNECTED */;\n  }\n  /**\n   * Fetches a relay from the pool, or creates a new one if it does not exist.\n   *\n   * New relays will be attempted to be connected.\n   */\n  getRelay(url, connect = true, temporary = false, filters) {\n    let relay = this.relays.get(normalizeRelayUrl(url));\n    if (!relay) {\n      relay = new NDKRelay(url, void 0, this.ndk);\n      relay.connectivity.netDebug = this.ndk.netDebug;\n      if (temporary) {\n        this.useTemporaryRelay(relay, 3e4, filters);\n      } else {\n        this.addRelay(relay, connect);\n      }\n    }\n    return relay;\n  }\n  handleRelayConnect(relayUrl) {\n    const relay = this.relays.get(relayUrl);\n    if (!relay) {\n      console.error(\"NDK BUG: relay not found in pool\", { relayUrl });\n      return;\n    }\n    this.emit(\"relay:connect\", relay);\n    if (this.stats().connected === this.relays.size) {\n      this.emit(\"connect\");\n    }\n  }\n  handleRelayReady(relay) {\n    this.emit(\"relay:ready\", relay);\n  }\n  /**\n   * Attempts to establish a connection to each relay in the pool.\n   *\n   * @async\n   * @param {number} [timeoutMs] - Optional timeout in milliseconds for each connection attempt.\n   * @returns {Promise<void>} A promise that resolves when all connection attempts have completed.\n   * @throws {Error} If any of the connection attempts result in an error or timeout.\n   */\n  async connect(timeoutMs) {\n    const promises = [];\n    this.debug(\n      `Connecting to ${this.relays.size} relays${timeoutMs ? `, timeout ${timeoutMs}...` : \"\"}`\n    );\n    const relaysToConnect = new Set(this.autoConnectRelays.keys());\n    this.ndk.explicitRelayUrls?.forEach((url) => {\n      const normalizedUrl = normalizeRelayUrl(url);\n      relaysToConnect.add(normalizedUrl);\n    });\n    for (const relayUrl of relaysToConnect) {\n      const relay = this.relays.get(relayUrl);\n      if (!relay) continue;\n      const connectPromise = new Promise((resolve, reject) => {\n        this.emit(\"relay:connecting\", relay);\n        return relay.connect(timeoutMs).then(resolve).catch(reject);\n      });\n      if (timeoutMs) {\n        const timeoutPromise = new Promise((_, reject) => {\n          setTimeout(() => reject(`Timed out after ${timeoutMs}ms`), timeoutMs);\n        });\n        promises.push(\n          Promise.race([connectPromise, timeoutPromise]).catch((e) => {\n            this.debug(\n              `Failed to connect to relay ${relay.url}: ${e ?? \"No reason specified\"}`\n            );\n          })\n        );\n      } else {\n        promises.push(connectPromise);\n      }\n    }\n    if (timeoutMs) {\n      setTimeout(() => {\n        const allConnected = this.stats().connected === this.relays.size;\n        const someConnected = this.stats().connected > 0;\n        if (!allConnected && someConnected) {\n          this.emit(\"connect\");\n        }\n      }, timeoutMs);\n    }\n    await Promise.all(promises);\n  }\n  checkOnFlappingRelays() {\n    const flappingRelaysCount = this.flappingRelays.size;\n    const totalRelays = this.relays.size;\n    if (flappingRelaysCount / totalRelays >= 0.8) {\n      for (const relayUrl of this.flappingRelays) {\n        this.backoffTimes.set(relayUrl, 0);\n      }\n    }\n  }\n  handleFlapping(relay) {\n    this.debug(`Relay ${relay.url} is flapping`);\n    let currentBackoff = this.backoffTimes.get(relay.url) || 5e3;\n    currentBackoff = currentBackoff * 2;\n    this.backoffTimes.set(relay.url, currentBackoff);\n    this.debug(`Backoff time for ${relay.url} is ${currentBackoff}ms`);\n    setTimeout(() => {\n      this.debug(`Attempting to reconnect to ${relay.url}`);\n      this.emit(\"relay:connecting\", relay);\n      relay.connect();\n      this.checkOnFlappingRelays();\n    }, currentBackoff);\n    relay.disconnect();\n    this.emit(\"flapping\", relay);\n  }\n  size() {\n    return this.relays.size;\n  }\n  /**\n   * Returns the status of each relay in the pool.\n   * @returns {NDKPoolStats} An object containing the number of relays in each status.\n   */\n  stats() {\n    const stats = {\n      total: 0,\n      connected: 0,\n      disconnected: 0,\n      connecting: 0\n    };\n    for (const relay of this.relays.values()) {\n      stats.total++;\n      if (relay.status === 5 /* CONNECTED */) {\n        stats.connected++;\n      } else if (relay.status === 1 /* DISCONNECTED */) {\n        stats.disconnected++;\n      } else if (relay.status === 4 /* CONNECTING */) {\n        stats.connecting++;\n      }\n    }\n    return stats;\n  }\n  connectedRelays() {\n    return Array.from(this.relays.values()).filter(\n      (relay) => relay.status >= 5 /* CONNECTED */\n    );\n  }\n  permanentAndConnectedRelays() {\n    return Array.from(this.relays.values()).filter(\n      (relay) => relay.status >= 5 /* CONNECTED */ && !this.temporaryRelayTimers.has(relay.url)\n    );\n  }\n  /**\n   * Get a list of all relay urls in the pool.\n   */\n  urls() {\n    return Array.from(this.relays.keys());\n  }\n};\n\n// src/user/index.ts\nimport { nip19 as nip194 } from \"nostr-tools\";\n\n// src/subscription/index.ts\nimport { EventEmitter as EventEmitter4 } from \"tseep\";\n\n// src/subscription/utils.ts\nimport { nip19 as nip193 } from \"nostr-tools\";\nvar MAX_SUBID_LENGTH = 20;\nfunction queryFullyFilled(subscription) {\n  if (filterIncludesIds(subscription.filter)) {\n    if (resultHasAllRequestedIds(subscription)) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction compareFilter(filter1, filter2) {\n  if (Object.keys(filter1).length !== Object.keys(filter2).length) return false;\n  for (const [key, value] of Object.entries(filter1)) {\n    const valuesInFilter2 = filter2[key];\n    if (!valuesInFilter2) return false;\n    if (Array.isArray(value) && Array.isArray(valuesInFilter2)) {\n      const v = value;\n      for (const valueInFilter2 of valuesInFilter2) {\n        const val = valueInFilter2;\n        if (!v.includes(val)) {\n          return false;\n        }\n      }\n    } else {\n      if (valuesInFilter2 !== value) return false;\n    }\n  }\n  return true;\n}\nfunction filterIncludesIds(filter) {\n  return !!filter[\"ids\"];\n}\nfunction resultHasAllRequestedIds(subscription) {\n  const ids = subscription.filter[\"ids\"];\n  return !!ids && ids.length === subscription.eventFirstSeen.size;\n}\nfunction generateSubId(subscriptions, filters) {\n  const subIds = subscriptions.map((sub) => sub.subId).filter(Boolean);\n  const subIdParts = [];\n  const filterNonKindKeys = /* @__PURE__ */ new Set();\n  const filterKinds = /* @__PURE__ */ new Set();\n  if (subIds.length > 0) {\n    subIdParts.push(Array.from(new Set(subIds)).join(\",\"));\n  } else {\n    for (const filter of filters) {\n      for (const key of Object.keys(filter)) {\n        if (key === \"kinds\") {\n          filter.kinds?.forEach((k) => filterKinds.add(k));\n        } else {\n          filterNonKindKeys.add(key);\n        }\n      }\n    }\n    if (filterKinds.size > 0) {\n      subIdParts.push(\"kinds:\" + Array.from(filterKinds).join(\",\"));\n    }\n    if (filterNonKindKeys.size > 0) {\n      subIdParts.push(Array.from(filterNonKindKeys).join(\",\"));\n    }\n  }\n  let subId = subIdParts.join(\"-\");\n  if (subId.length > MAX_SUBID_LENGTH) subId = subId.substring(0, MAX_SUBID_LENGTH);\n  subId += \"-\" + Math.floor(Math.random() * 999).toString();\n  return subId;\n}\nfunction filterForEventsTaggingId(id) {\n  try {\n    const decoded = nip193.decode(id);\n    switch (decoded.type) {\n      case \"naddr\":\n        return {\n          \"#a\": [\n            `${decoded.data.kind}:${decoded.data.pubkey}:${decoded.data.identifier}`\n          ]\n        };\n      case \"nevent\":\n        return { \"#e\": [decoded.data.id] };\n      case \"note\":\n        return { \"#e\": [decoded.data] };\n      case \"nprofile\":\n        return { \"#p\": [decoded.data.pubkey] };\n      case \"npub\":\n        return { \"#p\": [decoded.data] };\n    }\n  } catch {\n  }\n}\nfunction filterAndRelaySetFromBech32(beche2, ndk) {\n  const filter = filterFromId(beche2);\n  const relays = relaysFromBech32(beche2, ndk);\n  if (relays.length === 0) return { filter };\n  return {\n    filter,\n    relaySet: new NDKRelaySet(new Set(relays), ndk)\n  };\n}\nfunction filterFromId(id) {\n  let decoded;\n  if (id.match(NIP33_A_REGEX)) {\n    const [kind, pubkey, identifier] = id.split(\":\");\n    const filter = {\n      authors: [pubkey],\n      kinds: [parseInt(kind)]\n    };\n    if (identifier) {\n      filter[\"#d\"] = [identifier];\n    }\n    return filter;\n  }\n  if (id.match(BECH32_REGEX)) {\n    try {\n      decoded = nip193.decode(id);\n      switch (decoded.type) {\n        case \"nevent\": {\n          const filter2 = { ids: [decoded.data.id] };\n          if (decoded.data.author) filter2.authors = [decoded.data.author];\n          if (decoded.data.kind) filter2.kinds = [decoded.data.kind];\n          return filter2;\n        }\n        case \"note\":\n          return { ids: [decoded.data] };\n        case \"naddr\":\n          const filter = {\n            authors: [decoded.data.pubkey],\n            kinds: [decoded.data.kind]\n          };\n          if (decoded.data.identifier) filter[\"#d\"] = [decoded.data.identifier];\n          return filter;\n      }\n    } catch (e) {\n      console.error(\"Error decoding\", id, e);\n    }\n  }\n  return { ids: [id] };\n}\nfunction isNip33AValue(value) {\n  return value.match(NIP33_A_REGEX) !== null;\n}\nvar NIP33_A_REGEX = /^(\\d+):([0-9A-Fa-f]+)(?::(.*))?$/;\nvar BECH32_REGEX = /^n(event|ote|profile|pub|addr)1[\\d\\w]+$/;\nfunction relaysFromBech32(bech322, ndk) {\n  try {\n    const decoded = nip193.decode(bech322);\n    if ([\"naddr\", \"nevent\"].includes(decoded?.type)) {\n      const data = decoded.data;\n      if (data?.relays) {\n        return data.relays.map(\n          (r) => new NDKRelay(r, ndk.relayAuthDefaultPolicy, ndk)\n        );\n      }\n    }\n  } catch (e) {\n  }\n  return [];\n}\n\n// src/subscription/index.ts\nvar NDKSubscriptionCacheUsage = /* @__PURE__ */ ((NDKSubscriptionCacheUsage2) => {\n  NDKSubscriptionCacheUsage2[\"ONLY_CACHE\"] = \"ONLY_CACHE\";\n  NDKSubscriptionCacheUsage2[\"CACHE_FIRST\"] = \"CACHE_FIRST\";\n  NDKSubscriptionCacheUsage2[\"PARALLEL\"] = \"PARALLEL\";\n  NDKSubscriptionCacheUsage2[\"ONLY_RELAY\"] = \"ONLY_RELAY\";\n  return NDKSubscriptionCacheUsage2;\n})(NDKSubscriptionCacheUsage || {});\nvar defaultOpts = {\n  closeOnEose: false,\n  cacheUsage: \"CACHE_FIRST\" /* CACHE_FIRST */,\n  groupable: true,\n  groupableDelay: 100,\n  groupableDelayType: \"at-most\"\n};\nvar NDKSubscription = class extends EventEmitter4 {\n  subId;\n  filters;\n  opts;\n  pool;\n  skipVerification = false;\n  skipValidation = false;\n  /**\n   * Tracks the filters as they are executed on each relay\n   */\n  relayFilters;\n  relaySet;\n  ndk;\n  debug;\n  /**\n   * Events that have been seen by the subscription, with the time they were first seen.\n   */\n  eventFirstSeen = /* @__PURE__ */ new Map();\n  /**\n   * Relays that have sent an EOSE.\n   */\n  eosesSeen = /* @__PURE__ */ new Set();\n  /**\n   * The time the last event was received by the subscription.\n   * This is used to calculate when EOSE should be emitted.\n   */\n  lastEventReceivedAt;\n  internalId;\n  /**\n   * Whether the subscription should close when all relays have reached the end of the event stream.\n   */\n  closeOnEose;\n  /**\n   * Pool monitor callback\n   */\n  poolMonitor;\n  skipOptimisticPublishEvent = false;\n  constructor(ndk, filters, opts, relaySet, subId) {\n    super();\n    this.ndk = ndk;\n    this.pool = opts?.pool || ndk.pool;\n    this.opts = { ...defaultOpts, ...opts || {} };\n    this.filters = filters instanceof Array ? filters : [filters];\n    this.subId = subId || opts?.subId;\n    this.internalId = Math.random().toString(36).substring(7);\n    this.relaySet = relaySet;\n    this.debug = ndk.debug.extend(`subscription[${opts?.subId ?? this.internalId}]`);\n    this.skipVerification = opts?.skipVerification || false;\n    this.skipValidation = opts?.skipValidation || false;\n    this.closeOnEose = opts?.closeOnEose || false;\n    this.skipOptimisticPublishEvent = opts?.skipOptimisticPublishEvent || false;\n    if (this.opts.cacheUsage === \"ONLY_CACHE\" /* ONLY_CACHE */ && !this.opts.closeOnEose) {\n      throw new Error(\"Cannot use cache-only options with a persistent subscription\");\n    }\n  }\n  /**\n   * Returns the relays that have not yet sent an EOSE.\n   */\n  relaysMissingEose() {\n    if (!this.relayFilters) return [];\n    const relaysMissingEose = Array.from(this.relayFilters.keys()).filter(\n      (url) => !this.eosesSeen.has(this.pool.getRelay(url, false, false))\n    );\n    return relaysMissingEose;\n  }\n  /**\n   * Provides access to the first filter of the subscription for\n   * backwards compatibility.\n   */\n  get filter() {\n    return this.filters[0];\n  }\n  get groupableDelay() {\n    if (!this.isGroupable()) return void 0;\n    return this.opts?.groupableDelay;\n  }\n  get groupableDelayType() {\n    return this.opts?.groupableDelayType || \"at-most\";\n  }\n  isGroupable() {\n    return this.opts?.groupable || false;\n  }\n  shouldQueryCache() {\n    return this.opts?.cacheUsage !== \"ONLY_RELAY\" /* ONLY_RELAY */;\n  }\n  shouldQueryRelays() {\n    return this.opts?.cacheUsage !== \"ONLY_CACHE\" /* ONLY_CACHE */;\n  }\n  shouldWaitForCache() {\n    return (\n      // Must want to close on EOSE; subscriptions\n      // that want to receive further updates must\n      // always hit the relay\n      this.opts.closeOnEose && // Cache adapter must claim to be fast\n      !!this.ndk.cacheAdapter?.locking && // If explicitly told to run in parallel, then\n      // we should not wait for the cache\n      this.opts.cacheUsage !== \"PARALLEL\" /* PARALLEL */\n    );\n  }\n  /**\n   * Start the subscription. This is the main method that should be called\n   * after creating a subscription.\n   */\n  async start() {\n    let cachePromise;\n    if (this.shouldQueryCache()) {\n      cachePromise = this.startWithCache();\n      if (this.shouldWaitForCache()) {\n        await cachePromise;\n        if (queryFullyFilled(this)) {\n          this.emit(\"eose\", this);\n          return;\n        }\n      }\n    }\n    if (this.shouldQueryRelays()) {\n      this.startWithRelays();\n      this.startPoolMonitor();\n    } else {\n      this.emit(\"eose\", this);\n    }\n    return;\n  }\n  /**\n   * We want to monitor for new relays that are coming online, in case\n   * they should be part of this subscription.\n   */\n  startPoolMonitor() {\n    const d4 = this.debug.extend(\"pool-monitor\");\n    this.poolMonitor = (relay) => {\n      if (this.relayFilters?.has(relay.url)) return;\n      const calc = calculateRelaySetsFromFilters(this.ndk, this.filters, this.pool);\n      if (calc.get(relay.url)) {\n        this.relayFilters?.set(relay.url, this.filters);\n        relay.subscribe(this, this.filters);\n      }\n    };\n    this.pool.on(\"relay:connect\", this.poolMonitor);\n  }\n  onStopped;\n  stop() {\n    this.emit(\"close\", this);\n    this.poolMonitor && this.pool.off(\"relay:connect\", this.poolMonitor);\n    this.removeAllListeners();\n    this.onStopped?.();\n  }\n  /**\n   * @returns Whether the subscription has an authors filter.\n   */\n  hasAuthorsFilter() {\n    return this.filters.some((f) => f.authors?.length);\n  }\n  async startWithCache() {\n    if (this.ndk.cacheAdapter?.query) {\n      const promise = this.ndk.cacheAdapter.query(this);\n      if (this.ndk.cacheAdapter.locking) {\n        await promise;\n      }\n    }\n  }\n  /**\n   * Send REQ to relays\n   */\n  startWithRelays() {\n    if (!this.relaySet || this.relaySet.relays.size === 0) {\n      this.relayFilters = calculateRelaySetsFromFilters(this.ndk, this.filters, this.pool);\n    } else {\n      this.relayFilters = /* @__PURE__ */ new Map();\n      for (const relay of this.relaySet.relays) {\n        this.relayFilters.set(relay.url, this.filters);\n      }\n    }\n    if (!this.relayFilters || this.relayFilters.size === 0) return;\n    for (const [relayUrl, filters] of this.relayFilters) {\n      const relay = this.pool.getRelay(relayUrl, true, true, filters);\n      relay.subscribe(this, filters);\n    }\n  }\n  // EVENT handling\n  /**\n   * Called when an event is received from a relay or the cache\n   * @param event\n   * @param relay\n   * @param fromCache Whether the event was received from the cache\n   * @param optimisticPublish Whether this event is coming from an optimistic publish\n   */\n  eventReceived(event, relay, fromCache = false, optimisticPublish = false) {\n    const eventId = event.id;\n    const eventAlreadySeen = this.eventFirstSeen.has(eventId);\n    let ndkEvent;\n    if (event instanceof NDKEvent) ndkEvent = event;\n    if (!eventAlreadySeen) {\n      ndkEvent ??= new NDKEvent(this.ndk, event);\n      ndkEvent.ndk = this.ndk;\n      ndkEvent.relay = relay;\n      if (!fromCache && !optimisticPublish) {\n        if (!this.skipValidation) {\n          if (!ndkEvent.isValid) {\n            this.debug(`Event failed validation %s from relay %s`, eventId, relay?.url);\n            return;\n          }\n        }\n        if (relay) {\n          if (relay?.shouldValidateEvent() !== false) {\n            if (!this.skipVerification) {\n              if (!ndkEvent.verifySignature(true) && !this.ndk.asyncSigVerification) {\n                this.debug(`Event failed signature validation`, event);\n                return;\n              } else if (relay) {\n                relay.addValidatedEvent();\n              }\n            }\n          } else {\n            relay.addNonValidatedEvent();\n          }\n        }\n        if (this.ndk.cacheAdapter) {\n          this.ndk.cacheAdapter.setEvent(ndkEvent, this.filters, relay);\n        }\n      }\n      if (!fromCache && relay) {\n        this.ndk.emit(\"event\", ndkEvent, relay);\n      }\n      if (!optimisticPublish || this.skipOptimisticPublishEvent !== true) {\n        this.emit(\"event\", ndkEvent, relay, this);\n        this.eventFirstSeen.set(eventId, Date.now());\n      }\n    } else {\n      const timeSinceFirstSeen = Date.now() - (this.eventFirstSeen.get(eventId) || 0);\n      this.emit(\"event:dup\", eventId, relay, timeSinceFirstSeen, this);\n      if (relay) {\n        const signature = verifiedSignatures.get(eventId);\n        if (signature && typeof signature === \"string\") {\n          if (event.sig === signature) {\n            relay.addValidatedEvent();\n          }\n        }\n      }\n    }\n    this.lastEventReceivedAt = Date.now();\n  }\n  closedReceived(relay, reason) {\n    this.emit(\"closed\", relay, reason);\n  }\n  // EOSE handling\n  eoseTimeout;\n  eosed = false;\n  eoseReceived(relay) {\n    this.debug(\"EOSE received from %s\", relay.url);\n    this.eosesSeen.add(relay);\n    let lastEventSeen = this.lastEventReceivedAt ? Date.now() - this.lastEventReceivedAt : void 0;\n    const hasSeenAllEoses = this.eosesSeen.size === this.relayFilters?.size;\n    const queryFilled = queryFullyFilled(this);\n    const performEose = (reason) => {\n      this.debug(\"Performing EOSE: %s %d\", reason, this.eosed);\n      if (this.eosed) return;\n      if (this.eoseTimeout) clearTimeout(this.eoseTimeout);\n      this.emit(\"eose\", this);\n      this.eosed = true;\n    };\n    if (queryFilled || hasSeenAllEoses) {\n      performEose(\"query filled or seen all\");\n    } else if (this.relayFilters) {\n      let timeToWaitForNextEose = 1e3;\n      const connectedRelays = new Set(this.pool.connectedRelays().map((r) => r.url));\n      const connectedRelaysWithFilters = Array.from(this.relayFilters.keys()).filter(\n        (url) => connectedRelays.has(url)\n      );\n      if (connectedRelaysWithFilters.length === 0) {\n        return;\n      }\n      const percentageOfRelaysThatHaveSentEose = this.eosesSeen.size / connectedRelaysWithFilters.length;\n      this.debug(\"Percentage of relays that have sent EOSE\", { subId: this.subId, percentageOfRelaysThatHaveSentEose, seen: this.eosesSeen.size, total: connectedRelaysWithFilters.length });\n      if (this.eosesSeen.size >= 2 && percentageOfRelaysThatHaveSentEose >= 0.5) {\n        timeToWaitForNextEose = timeToWaitForNextEose * (1 - percentageOfRelaysThatHaveSentEose);\n        if (timeToWaitForNextEose === 0) {\n          performEose(\"time to wait was 0\");\n          return;\n        }\n        if (this.eoseTimeout) clearTimeout(this.eoseTimeout);\n        const sendEoseTimeout = () => {\n          lastEventSeen = this.lastEventReceivedAt ? Date.now() - this.lastEventReceivedAt : void 0;\n          if (lastEventSeen !== void 0 && lastEventSeen < 20) {\n            this.eoseTimeout = setTimeout(sendEoseTimeout, timeToWaitForNextEose);\n          } else {\n            performEose(\"send eose timeout: \" + timeToWaitForNextEose);\n          }\n        };\n        this.eoseTimeout = setTimeout(sendEoseTimeout, timeToWaitForNextEose);\n      }\n    }\n  }\n};\n\n// src/user/follows.ts\nasync function follows(opts, outbox, kind = 3 /* Contacts */) {\n  if (!this.ndk) throw new Error(\"NDK not set\");\n  const contactListEvent = await this.ndk.fetchEvent(\n    { kinds: [kind], authors: [this.pubkey] },\n    opts || { groupable: false }\n  );\n  if (contactListEvent) {\n    const pubkeys = /* @__PURE__ */ new Set();\n    contactListEvent.tags.forEach((tag) => {\n      if (tag[0] === \"p\") pubkeys.add(tag[1]);\n    });\n    if (outbox) {\n      this.ndk?.outboxTracker?.trackUsers(Array.from(pubkeys));\n    }\n    return [...pubkeys].reduce((acc, pubkey) => {\n      const user = new NDKUser({ pubkey });\n      user.ndk = this.ndk;\n      acc.add(user);\n      return acc;\n    }, /* @__PURE__ */ new Set());\n  }\n  return /* @__PURE__ */ new Set();\n}\n\n// src/user/profile.ts\nfunction profileFromEvent(event) {\n  const profile = {};\n  let payload;\n  try {\n    payload = JSON.parse(event.content);\n  } catch (error) {\n    throw new Error(`Failed to parse profile event: ${error}`);\n  }\n  profile.created_at = event.created_at;\n  profile.profileEvent = JSON.stringify(event.rawEvent());\n  Object.keys(payload).forEach((key) => {\n    switch (key) {\n      case \"name\":\n        profile.name = payload.name;\n        break;\n      case \"display_name\":\n        profile.displayName = payload.display_name;\n        break;\n      case \"image\":\n      case \"picture\":\n        profile.image = payload.picture || payload.image;\n        break;\n      case \"banner\":\n        profile.banner = payload.banner;\n        break;\n      case \"bio\":\n        profile.bio = payload.bio;\n        break;\n      case \"nip05\":\n        profile.nip05 = payload.nip05;\n        break;\n      case \"lud06\":\n        profile.lud06 = payload.lud06;\n        break;\n      case \"lud16\":\n        profile.lud16 = payload.lud16;\n        break;\n      case \"about\":\n        profile.about = payload.about;\n        break;\n      case \"zapService\":\n        profile.zapService = payload.zapService;\n        break;\n      case \"website\":\n        profile.website = payload.website;\n        break;\n      default:\n        profile[key] = payload[key];\n        break;\n    }\n  });\n  return profile;\n}\nfunction serializeProfile(profile) {\n  const payload = {};\n  for (const [key, val] of Object.entries(profile)) {\n    switch (key) {\n      case \"username\":\n      case \"name\":\n        payload.name = val;\n        break;\n      case \"displayName\":\n        payload.display_name = val;\n        break;\n      case \"image\":\n      case \"picture\":\n        payload.picture = val;\n        break;\n      case \"bio\":\n      case \"about\":\n        payload.about = val;\n        break;\n      default:\n        payload[key] = val;\n        break;\n    }\n  }\n  return JSON.stringify(payload);\n}\n\n// src/user/nip05.ts\nvar NIP05_REGEX = /^(?:([\\w.+-]+)@)?([\\w.-]+)$/;\nasync function getNip05For(ndk, fullname, _fetch = fetch, fetchOpts = {}) {\n  return await ndk.queuesNip05.add({\n    id: fullname,\n    func: async () => {\n      if (ndk.cacheAdapter && ndk.cacheAdapter.loadNip05) {\n        const profile = await ndk.cacheAdapter.loadNip05(fullname);\n        if (profile !== \"missing\") {\n          if (profile) {\n            const user = new NDKUser({\n              pubkey: profile.pubkey,\n              relayUrls: profile.relays,\n              nip46Urls: profile.nip46\n            });\n            user.ndk = ndk;\n            return user;\n          } else if (fetchOpts.cache !== \"no-cache\") {\n            return null;\n          }\n        }\n      }\n      const match = fullname.match(NIP05_REGEX);\n      if (!match) return null;\n      const [_, name = \"_\", domain] = match;\n      try {\n        const res = await _fetch(\n          `https://${domain}/.well-known/nostr.json?name=${name}`,\n          fetchOpts\n        );\n        const { names, relays, nip46 } = parseNIP05Result(await res.json());\n        const pubkey = names[name.toLowerCase()];\n        let profile = null;\n        if (pubkey) {\n          profile = { pubkey, relays: relays?.[pubkey], nip46: nip46?.[pubkey] };\n        }\n        if (ndk?.cacheAdapter && ndk.cacheAdapter.saveNip05) {\n          ndk.cacheAdapter.saveNip05(fullname, profile);\n        }\n        return profile;\n      } catch (_e) {\n        if (ndk?.cacheAdapter && ndk.cacheAdapter.saveNip05) {\n          ndk?.cacheAdapter.saveNip05(fullname, null);\n        }\n        console.error(\"Failed to fetch NIP05 for\", fullname, _e);\n        return null;\n      }\n    }\n  });\n}\nfunction parseNIP05Result(json) {\n  const result = {\n    names: {}\n  };\n  for (const [name, pubkey] of Object.entries(json.names)) {\n    if (typeof name === \"string\" && typeof pubkey === \"string\") {\n      result.names[name.toLowerCase()] = pubkey;\n    }\n  }\n  if (json.relays) {\n    result.relays = {};\n    for (const [pubkey, relays] of Object.entries(json.relays)) {\n      if (typeof pubkey === \"string\" && Array.isArray(relays)) {\n        result.relays[pubkey] = relays.filter(\n          (relay) => typeof relay === \"string\"\n        );\n      }\n    }\n  }\n  if (json.nip46) {\n    result.nip46 = {};\n    for (const [pubkey, nip46] of Object.entries(json.nip46)) {\n      if (typeof pubkey === \"string\" && Array.isArray(nip46)) {\n        result.nip46[pubkey] = nip46.filter((relay) => typeof relay === \"string\");\n      }\n    }\n  }\n  return result;\n}\n\n// src/events/kinds/nutzap/mint-list.ts\nvar NDKCashuMintList = class _NDKCashuMintList extends NDKEvent {\n  static kind = 10019 /* CashuMintList */;\n  static kinds = [10019 /* CashuMintList */];\n  _p2pk;\n  constructor(ndk, event) {\n    super(ndk, event);\n    this.kind ??= 10019 /* CashuMintList */;\n  }\n  static from(event) {\n    return new _NDKCashuMintList(event.ndk, event);\n  }\n  set relays(urls) {\n    this.tags = this.tags.filter((t) => t[0] !== \"relay\");\n    for (const url of urls) {\n      this.tags.push([\"relay\", url]);\n    }\n  }\n  get relays() {\n    const r = [];\n    for (const tag of this.tags) {\n      if (tag[0] === \"relay\") {\n        r.push(tag[1]);\n      }\n    }\n    return r;\n  }\n  set mints(urls) {\n    this.tags = this.tags.filter((t) => t[0] !== \"mint\");\n    for (const url of urls) {\n      this.tags.push([\"mint\", url]);\n    }\n  }\n  get mints() {\n    const r = [];\n    for (const tag of this.tags) {\n      if (tag[0] === \"mint\") {\n        r.push(tag[1]);\n      }\n    }\n    return Array.from(new Set(r));\n  }\n  get p2pk() {\n    if (this._p2pk) {\n      return this._p2pk;\n    }\n    this._p2pk = this.tagValue(\"pubkey\") ?? this.pubkey;\n    return this._p2pk;\n  }\n  set p2pk(pubkey) {\n    this._p2pk = pubkey;\n    this.removeTag(\"pubkey\");\n    if (pubkey) {\n      this.tags.push([\"pubkey\", pubkey]);\n    }\n  }\n  get relaySet() {\n    return NDKRelaySet.fromRelayUrls(this.relays, this.ndk);\n  }\n};\n\n// src/zapper/ln.ts\nimport { bech32 } from \"@scure/base\";\nimport createDebug2 from \"debug\";\nvar d2 = createDebug2(\"ndk:zapper:ln\");\nasync function getNip57ZapSpecFromLud({ lud06, lud16 }, ndk) {\n  let zapEndpoint;\n  if (lud16 && !lud16.startsWith(\"LNURL\")) {\n    const [name, domain] = lud16.split(\"@\");\n    zapEndpoint = `https://${domain}/.well-known/lnurlp/${name}`;\n  } else if (lud06) {\n    const { words } = bech32.decode(lud06, 1e3);\n    const data = bech32.fromWords(words);\n    const utf8Decoder = new TextDecoder(\"utf-8\");\n    zapEndpoint = utf8Decoder.decode(data);\n  }\n  if (!zapEndpoint) {\n    d2(\"No zap endpoint found %o\", { lud06, lud16 });\n    throw new Error(\"No zap endpoint found\");\n  }\n  try {\n    const _fetch = ndk.httpFetch || fetch;\n    const response = await _fetch(zapEndpoint);\n    if (response.status !== 200) {\n      const text = await response.text();\n      throw new Error(`Unable to fetch zap endpoint ${zapEndpoint}: ${text}`);\n    }\n    return await response.json();\n  } catch (e) {\n    throw new Error(`Unable to fetch zap endpoint ${zapEndpoint}: ${e}`);\n  }\n}\n\n// src/user/index.ts\nvar NDKUser = class _NDKUser {\n  ndk;\n  profile;\n  _npub;\n  _pubkey;\n  relayUrls = [];\n  nip46Urls = [];\n  constructor(opts) {\n    if (opts.npub) this._npub = opts.npub;\n    if (opts.hexpubkey) this._pubkey = opts.hexpubkey;\n    if (opts.pubkey) this._pubkey = opts.pubkey;\n    if (opts.relayUrls) this.relayUrls = opts.relayUrls;\n    if (opts.nip46Urls) this.nip46Urls = opts.nip46Urls;\n  }\n  get npub() {\n    if (!this._npub) {\n      if (!this._pubkey) throw new Error(\"pubkey not set\");\n      this._npub = nip194.npubEncode(this.pubkey);\n    }\n    return this._npub;\n  }\n  get nprofile() {\n    console.log(\"encoding with pubkey\", this.pubkey);\n    return nip194.nprofileEncode({\n      pubkey: this.pubkey\n    });\n  }\n  set npub(npub) {\n    this._npub = npub;\n  }\n  /**\n   * Get the user's hexpubkey\n   * @returns {Hexpubkey} The user's hexpubkey\n   *\n   * @deprecated Use `pubkey` instead\n   */\n  get hexpubkey() {\n    return this.pubkey;\n  }\n  /**\n   * Set the user's hexpubkey\n   * @param pubkey {Hexpubkey} The user's hexpubkey\n   * @deprecated Use `pubkey` instead\n   */\n  set hexpubkey(pubkey) {\n    this._pubkey = pubkey;\n  }\n  /**\n   * Get the user's pubkey\n   * @returns {string} The user's pubkey\n   */\n  get pubkey() {\n    if (!this._pubkey) {\n      if (!this._npub) throw new Error(\"npub not set\");\n      this._pubkey = nip194.decode(this.npub).data;\n    }\n    return this._pubkey;\n  }\n  /**\n   * Set the user's pubkey\n   * @param pubkey {string} The user's pubkey\n   */\n  set pubkey(pubkey) {\n    this._pubkey = pubkey;\n  }\n  /**\n   * Gets NIP-57 and NIP-61 information that this user has signaled\n   *\n   * @param getAll {boolean} Whether to get all zap info or just the first one\n   */\n  async getZapInfo(getAll = true, methods = [\"nip61\", \"nip57\"]) {\n    if (!this.ndk) throw new Error(\"No NDK instance found\");\n    const kinds = [];\n    if (methods.includes(\"nip61\")) kinds.push(10019 /* CashuMintList */);\n    if (methods.includes(\"nip57\")) kinds.push(0 /* Metadata */);\n    if (kinds.length === 0) return [];\n    let events = await this.ndk.fetchEvents(\n      { kinds, authors: [this.pubkey] },\n      {\n        cacheUsage: \"ONLY_CACHE\" /* ONLY_CACHE */,\n        groupable: false\n      }\n    );\n    if (events.size < methods.length) {\n      events = await this.ndk.fetchEvents(\n        { kinds, authors: [this.pubkey] },\n        {\n          cacheUsage: \"ONLY_RELAY\" /* ONLY_RELAY */\n        }\n      );\n    }\n    const res = [];\n    const nip61 = Array.from(events).find((e) => e.kind === 10019 /* CashuMintList */);\n    const nip572 = Array.from(events).find((e) => e.kind === 0 /* Metadata */);\n    if (nip61) {\n      const mintList = NDKCashuMintList.from(nip61);\n      if (mintList.mints.length > 0) {\n        res.push({\n          type: \"nip61\",\n          data: {\n            mints: mintList.mints,\n            relays: mintList.relays,\n            p2pk: mintList.p2pk\n          }\n        });\n      }\n      if (!getAll) return res;\n    }\n    if (nip572) {\n      const profile = profileFromEvent(nip572);\n      const { lud06, lud16 } = profile;\n      try {\n        const zapSpec = await getNip57ZapSpecFromLud({ lud06, lud16 }, this.ndk);\n        if (zapSpec) {\n          res.push({ type: \"nip57\", data: zapSpec });\n        }\n      } catch (e) {\n        console.error(\"Error getting NIP-57 zap spec\", e);\n      }\n    }\n    return res;\n  }\n  /**\n   * Determines whether this user\n   * has signaled support for NIP-60 zaps\n   **/\n  // export type UserZapConfiguration = {\n  // }\n  // async getRecipientZapConfig(): Promise<> {\n  // }\n  /**\n   * Retrieves the zapper this pubkey has designated as an issuer of zap receipts\n   */\n  async getZapConfiguration(ndk) {\n    ndk ??= this.ndk;\n    if (!ndk) throw new Error(\"No NDK instance found\");\n    const process = async () => {\n      if (this.ndk?.cacheAdapter?.loadUsersLNURLDoc) {\n        const doc = await this.ndk.cacheAdapter.loadUsersLNURLDoc(this.pubkey);\n        if (doc !== \"missing\") {\n          if (doc === null) return;\n          if (doc) return doc;\n        }\n      }\n      let lnurlspec;\n      try {\n        await this.fetchProfile({ groupable: false });\n        if (this.profile) {\n          const { lud06, lud16 } = this.profile;\n          lnurlspec = await getNip57ZapSpecFromLud({ lud06, lud16 }, ndk);\n        }\n      } catch {\n      }\n      if (this.ndk?.cacheAdapter?.saveUsersLNURLDoc) {\n        this.ndk.cacheAdapter.saveUsersLNURLDoc(this.pubkey, lnurlspec || null);\n      }\n      if (!lnurlspec) return;\n      return lnurlspec;\n    };\n    return await ndk.queuesZapConfig.add({\n      id: this.pubkey,\n      func: process\n    });\n  }\n  /**\n   * Fetches the zapper's pubkey for the zapped user\n   * @returns The zapper's pubkey if one can be found\n   */\n  async getZapperPubkey() {\n    const zapConfig = await this.getZapConfiguration();\n    return zapConfig?.nostrPubkey;\n  }\n  /**\n   * Instantiate an NDKUser from a NIP-05 string\n   * @param nip05Id {string} The user's NIP-05\n   * @param ndk {NDK} An NDK instance\n   * @param skipCache {boolean} Whether to skip the cache or not\n   * @returns {NDKUser | undefined} An NDKUser if one is found for the given NIP-05, undefined otherwise.\n   */\n  static async fromNip05(nip05Id, ndk, skipCache = false) {\n    if (!ndk) throw new Error(\"No NDK instance found\");\n    const opts = {};\n    if (skipCache) opts.cache = \"no-cache\";\n    const profile = await getNip05For(ndk, nip05Id, ndk?.httpFetch, opts);\n    if (profile) {\n      const user = new _NDKUser({\n        pubkey: profile.pubkey,\n        relayUrls: profile.relays,\n        nip46Urls: profile.nip46\n      });\n      user.ndk = ndk;\n      return user;\n    }\n  }\n  /**\n   * Fetch a user's profile\n   * @param opts {NDKSubscriptionOptions} A set of NDKSubscriptionOptions\n   * @param storeProfileEvent {boolean} Whether to store the profile event or not\n   * @returns User Profile\n   */\n  async fetchProfile(opts, storeProfileEvent = false) {\n    if (!this.ndk) throw new Error(\"NDK not set\");\n    if (!this.profile) this.profile = {};\n    let setMetadataEvents = null;\n    if (this.ndk.cacheAdapter && this.ndk.cacheAdapter.fetchProfile && opts?.cacheUsage !== \"ONLY_RELAY\" /* ONLY_RELAY */) {\n      const profile = await this.ndk.cacheAdapter.fetchProfile(this.pubkey);\n      if (profile) {\n        this.profile = profile;\n        return profile;\n      }\n    }\n    if (!opts && // if no options have been set\n    this.ndk.cacheAdapter && // and we have a cache\n    this.ndk.cacheAdapter.locking) {\n      setMetadataEvents = await this.ndk.fetchEvents(\n        {\n          kinds: [0],\n          authors: [this.pubkey]\n        },\n        {\n          cacheUsage: \"ONLY_CACHE\" /* ONLY_CACHE */,\n          closeOnEose: true,\n          groupable: false\n        }\n      );\n      opts = {\n        cacheUsage: \"ONLY_RELAY\" /* ONLY_RELAY */,\n        closeOnEose: true,\n        groupable: true,\n        groupableDelay: 250\n      };\n    }\n    if (!setMetadataEvents || setMetadataEvents.size === 0) {\n      setMetadataEvents = await this.ndk.fetchEvents(\n        {\n          kinds: [0],\n          authors: [this.pubkey]\n        },\n        opts\n      );\n    }\n    const sortedSetMetadataEvents = Array.from(setMetadataEvents).sort(\n      (a, b) => a.created_at - b.created_at\n    );\n    if (sortedSetMetadataEvents.length === 0) return null;\n    const event = sortedSetMetadataEvents[0];\n    this.profile = profileFromEvent(event);\n    if (storeProfileEvent) {\n      this.profile.profileEvent = JSON.stringify(event);\n    }\n    if (this.profile && this.ndk.cacheAdapter && this.ndk.cacheAdapter.saveProfile) {\n      this.ndk.cacheAdapter.saveProfile(this.pubkey, this.profile);\n    }\n    return this.profile;\n  }\n  /**\n   * Returns a set of users that this user follows.\n   * \n   * @deprecated Use followSet instead\n   */\n  follows = follows.bind(this);\n  /**\n   * Returns a set of pubkeys that this user follows.\n   * \n   * @param opts - NDKSubscriptionOptions\n   * @param outbox - boolean\n   * @param kind - number\n   */\n  async followSet(opts, outbox, kind = 3 /* Contacts */) {\n    const follows2 = await this.follows(opts, outbox, kind);\n    return new Set(Array.from(follows2).map((f) => f.pubkey));\n  }\n  /** @deprecated Use referenceTags instead. */\n  /**\n   * Get the tag that can be used to reference this user in an event\n   * @returns {NDKTag} an NDKTag\n   */\n  tagReference() {\n    return [\"p\", this.pubkey];\n  }\n  /**\n   * Get the tags that can be used to reference this user in an event\n   * @returns {NDKTag[]} an array of NDKTag\n   */\n  referenceTags(marker) {\n    const tag = [[\"p\", this.pubkey]];\n    if (!marker) return tag;\n    tag[0].push(\"\", marker);\n    return tag;\n  }\n  /**\n   * Publishes the current profile.\n   */\n  async publish() {\n    if (!this.ndk) throw new Error(\"No NDK instance found\");\n    if (!this.profile) throw new Error(\"No profile available\");\n    this.ndk.assertSigner();\n    const event = new NDKEvent(this.ndk, {\n      kind: 0,\n      content: serializeProfile(this.profile)\n    });\n    await event.publish();\n  }\n  /**\n   * Add a follow to this user's contact list\n   *\n   * @param newFollow {NDKUser} The user to follow\n   * @param currentFollowList {Set<NDKUser>} The current follow list\n   * @param kind {NDKKind} The kind to use for this contact list (defaults to `3`)\n   * @returns {Promise<boolean>} True if the follow was added, false if the follow already exists\n   */\n  async follow(newFollow, currentFollowList, kind = 3 /* Contacts */) {\n    if (!this.ndk) throw new Error(\"No NDK instance found\");\n    this.ndk.assertSigner();\n    if (!currentFollowList) {\n      currentFollowList = await this.follows(void 0, void 0, kind);\n    }\n    if (currentFollowList.has(newFollow)) {\n      return false;\n    }\n    currentFollowList.add(newFollow);\n    const event = new NDKEvent(this.ndk, { kind });\n    for (const follow of currentFollowList) {\n      event.tag(follow);\n    }\n    await event.publish();\n    return true;\n  }\n  /**\n   * Remove a follow from this user's contact list\n   *\n   * @param user {NDKUser} The user to unfollow\n   * @param currentFollowList {Set<NDKUser>} The current follow list\n   * @param kind {NDKKind} The kind to use for this contact list (defaults to `3`)\n   * @returns The relays were the follow list was published or false if the user wasn't found\n   */\n  async unfollow(user, currentFollowList, kind = 3 /* Contacts */) {\n    if (!this.ndk) throw new Error(\"No NDK instance found\");\n    this.ndk.assertSigner();\n    if (!currentFollowList) {\n      currentFollowList = await this.follows(void 0, void 0, kind);\n    }\n    const newUserFollowList = /* @__PURE__ */ new Set();\n    let foundUser = false;\n    for (const follow of currentFollowList) {\n      if (follow.pubkey !== user.pubkey) {\n        newUserFollowList.add(follow);\n      } else {\n        foundUser = true;\n      }\n    }\n    if (!foundUser) return false;\n    const event = new NDKEvent(this.ndk, { kind });\n    for (const follow of newUserFollowList) {\n      event.tag(follow);\n    }\n    return await event.publish();\n  }\n  /**\n   * Validate a user's NIP-05 identifier (usually fetched from their kind:0 profile data)\n   *\n   * @param nip05Id The NIP-05 string to validate\n   * @returns {Promise<boolean | null>} True if the NIP-05 is found and matches this user's pubkey,\n   * False if the NIP-05 is found but doesn't match this user's pubkey,\n   * null if the NIP-05 isn't found on the domain or we're unable to verify (because of network issues, etc.)\n   */\n  async validateNip05(nip05Id) {\n    if (!this.ndk) throw new Error(\"No NDK instance found\");\n    const profilePointer = await getNip05For(this.ndk, nip05Id);\n    if (profilePointer === null) return null;\n    return profilePointer.pubkey === this.pubkey;\n  }\n};\n\n// src/events/kinds/lists/index.ts\nvar NDKList = class _NDKList extends NDKEvent {\n  _encryptedTags;\n  /**\n   * Stores the number of bytes the content was before decryption\n   * to expire the cache when the content changes.\n   */\n  encryptedTagsLength;\n  constructor(ndk, rawEvent) {\n    super(ndk, rawEvent);\n    this.kind ??= 30001 /* CategorizedBookmarkList */;\n  }\n  /**\n   * Wrap a NDKEvent into a NDKList\n   */\n  static from(ndkEvent) {\n    return new _NDKList(ndkEvent.ndk, ndkEvent);\n  }\n  /**\n   * Returns the title of the list. Falls back on fetching the name tag value.\n   */\n  get title() {\n    const titleTag = this.tagValue(\"title\") || this.tagValue(\"name\");\n    if (titleTag) return titleTag;\n    if (this.kind === 3 /* Contacts */) {\n      return \"Contacts\";\n    } else if (this.kind === 1e4 /* MuteList */) {\n      return \"Mute\";\n    } else if (this.kind === 10001 /* PinList */) {\n      return \"Pinned Notes\";\n    } else if (this.kind === 10002 /* RelayList */) {\n      return \"Relay Metadata\";\n    } else if (this.kind === 10003 /* BookmarkList */) {\n      return \"Bookmarks\";\n    } else if (this.kind === 10004 /* CommunityList */) {\n      return \"Communities\";\n    } else if (this.kind === 10005 /* PublicChatList */) {\n      return \"Public Chats\";\n    } else if (this.kind === 10006 /* BlockRelayList */) {\n      return \"Blocked Relays\";\n    } else if (this.kind === 10007 /* SearchRelayList */) {\n      return \"Search Relays\";\n    } else if (this.kind === 10050 /* DirectMessageReceiveRelayList */) {\n      return \"Direct Message Receive Relays\";\n    } else if (this.kind === 10015 /* InterestList */) {\n      return \"Interests\";\n    } else if (this.kind === 10030 /* EmojiList */) {\n      return \"Emojis\";\n    } else {\n      return this.tagValue(\"d\");\n    }\n  }\n  /**\n   * Sets the title of the list.\n   */\n  set title(title) {\n    this.removeTag([\"title\", \"name\"]);\n    if (title) this.tags.push([\"title\", title]);\n  }\n  /**\n   * Returns the name of the list.\n   * @deprecated Please use \"title\" instead.\n   */\n  get name() {\n    return this.title;\n  }\n  /**\n   * Sets the name of the list.\n   * @deprecated Please use \"title\" instead. This method will use the `title` tag instead.\n   */\n  set name(name) {\n    this.title = name;\n  }\n  /**\n   * Returns the description of the list.\n   */\n  get description() {\n    return this.tagValue(\"description\");\n  }\n  /**\n   * Sets the description of the list.\n   */\n  set description(name) {\n    this.removeTag(\"description\");\n    if (name) this.tags.push([\"description\", name]);\n  }\n  /**\n   * Returns the image of the list.\n   */\n  get image() {\n    return this.tagValue(\"image\");\n  }\n  /**\n   * Sets the image of the list.\n   */\n  set image(name) {\n    this.removeTag(\"image\");\n    if (name) this.tags.push([\"image\", name]);\n  }\n  isEncryptedTagsCacheValid() {\n    return !!(this._encryptedTags && this.encryptedTagsLength === this.content.length);\n  }\n  /**\n   * Returns the decrypted content of the list.\n   */\n  async encryptedTags(useCache = true) {\n    if (useCache && this.isEncryptedTagsCacheValid()) return this._encryptedTags;\n    if (!this.ndk) throw new Error(\"NDK instance not set\");\n    if (!this.ndk.signer) throw new Error(\"NDK signer not set\");\n    const user = await this.ndk.signer.user();\n    try {\n      if (this.content.length > 0) {\n        try {\n          const decryptedContent = await this.ndk.signer.decrypt(user, this.content);\n          const a = JSON.parse(decryptedContent);\n          if (a && a[0]) {\n            this.encryptedTagsLength = this.content.length;\n            return this._encryptedTags = a;\n          }\n          this.encryptedTagsLength = this.content.length;\n          return this._encryptedTags = [];\n        } catch (e) {\n          console.log(`error decrypting ${this.content}`);\n        }\n      }\n    } catch (e) {\n    }\n    return [];\n  }\n  /**\n   * This method can be overriden to validate that a tag is valid for this list.\n   *\n   * (i.e. the NDKPersonList can validate that items are NDKUser instances)\n   */\n  validateTag(tagValue) {\n    return true;\n  }\n  getItems(type) {\n    return this.tags.filter((tag) => tag[0] === type);\n  }\n  /**\n   * Returns the unecrypted items in this list.\n   */\n  get items() {\n    return this.tags.filter((t) => {\n      return ![\n        \"d\",\n        \"L\",\n        \"l\",\n        \"title\",\n        \"name\",\n        \"description\",\n        \"published_at\",\n        \"summary\",\n        \"image\",\n        \"thumb\",\n        \"alt\",\n        \"expiration\",\n        \"subject\",\n        \"client\"\n      ].includes(t[0]);\n    });\n  }\n  /**\n   * Adds a new item to the list.\n   * @param relay Relay to add\n   * @param mark Optional mark to add to the item\n   * @param encrypted Whether to encrypt the item\n   * @param position Where to add the item in the list (top or bottom)\n   */\n  async addItem(item, mark = void 0, encrypted = false, position = \"bottom\") {\n    if (!this.ndk) throw new Error(\"NDK instance not set\");\n    if (!this.ndk.signer) throw new Error(\"NDK signer not set\");\n    let tags;\n    if (item instanceof NDKEvent) {\n      tags = [item.tagReference(mark)];\n    } else if (item instanceof NDKUser) {\n      tags = item.referenceTags();\n    } else if (item instanceof NDKRelay) {\n      tags = item.referenceTags();\n    } else if (Array.isArray(item)) {\n      tags = [item];\n    } else {\n      throw new Error(\"Invalid object type\");\n    }\n    if (mark) tags[0].push(mark);\n    if (encrypted) {\n      const user = await this.ndk.signer.user();\n      const currentList = await this.encryptedTags();\n      if (position === \"top\") currentList.unshift(...tags);\n      else currentList.push(...tags);\n      this._encryptedTags = currentList;\n      this.encryptedTagsLength = this.content.length;\n      this.content = JSON.stringify(currentList);\n      await this.encrypt(user);\n    } else {\n      if (position === \"top\") this.tags.unshift(...tags);\n      else this.tags.push(...tags);\n    }\n    this.created_at = Math.floor(Date.now() / 1e3);\n    this.emit(\"change\");\n  }\n  /**\n   * Removes an item from the list from both the encrypted and unencrypted lists.\n   * @param value value of item to remove from the list\n   * @param publish whether to publish the change\n   * @returns\n   */\n  async removeItemByValue(value, publish = true) {\n    if (!this.ndk) throw new Error(\"NDK instance not set\");\n    if (!this.ndk.signer) throw new Error(\"NDK signer not set\");\n    const index = this.tags.findIndex((tag) => tag[1] === value);\n    if (index >= 0) {\n      this.tags.splice(index, 1);\n    }\n    const user = await this.ndk.signer.user();\n    const encryptedTags = await this.encryptedTags();\n    const encryptedIndex = encryptedTags.findIndex((tag) => tag[1] === value);\n    if (encryptedIndex >= 0) {\n      encryptedTags.splice(encryptedIndex, 1);\n      this._encryptedTags = encryptedTags;\n      this.encryptedTagsLength = this.content.length;\n      this.content = JSON.stringify(encryptedTags);\n      await this.encrypt(user);\n    }\n    if (publish) {\n      return this.publishReplaceable();\n    } else {\n      this.created_at = Math.floor(Date.now() / 1e3);\n    }\n    this.emit(\"change\");\n  }\n  /**\n   * Removes an item from the list.\n   *\n   * @param index The index of the item to remove.\n   * @param encrypted Whether to remove from the encrypted list or not.\n   */\n  async removeItem(index, encrypted) {\n    if (!this.ndk) throw new Error(\"NDK instance not set\");\n    if (!this.ndk.signer) throw new Error(\"NDK signer not set\");\n    if (encrypted) {\n      const user = await this.ndk.signer.user();\n      const currentList = await this.encryptedTags();\n      currentList.splice(index, 1);\n      this._encryptedTags = currentList;\n      this.encryptedTagsLength = this.content.length;\n      this.content = JSON.stringify(currentList);\n      await this.encrypt(user);\n    } else {\n      this.tags.splice(index, 1);\n    }\n    this.created_at = Math.floor(Date.now() / 1e3);\n    this.emit(\"change\");\n    return this;\n  }\n  has(item) {\n    return this.items.some((tag) => tag[1] === item);\n  }\n  /**\n   * Creates a filter that will result in fetching\n   * the items of this list\n   * @example\n   * const list = new NDKList(...);\n   * const filters = list.filterForItems();\n   * const events = await ndk.fetchEvents(filters);\n   */\n  filterForItems() {\n    const ids = /* @__PURE__ */ new Set();\n    const nip33Queries = /* @__PURE__ */ new Map();\n    const filters = [];\n    for (const tag of this.items) {\n      if (tag[0] === \"e\" && tag[1]) {\n        ids.add(tag[1]);\n      } else if (tag[0] === \"a\" && tag[1]) {\n        const [kind, pubkey, dTag] = tag[1].split(\":\");\n        if (!kind || !pubkey) continue;\n        const key = `${kind}:${pubkey}`;\n        const item = nip33Queries.get(key) || [];\n        item.push(dTag || \"\");\n        nip33Queries.set(key, item);\n      }\n    }\n    if (ids.size > 0) {\n      filters.push({ ids: Array.from(ids) });\n    }\n    if (nip33Queries.size > 0) {\n      for (const [key, values] of nip33Queries.entries()) {\n        const [kind, pubkey] = key.split(\":\");\n        filters.push({\n          kinds: [parseInt(kind)],\n          authors: [pubkey],\n          \"#d\": values\n        });\n      }\n    }\n    return filters;\n  }\n};\nvar lists_default = NDKList;\n\n// src/user/pin.ts\nasync function pinEvent(user, event, pinEvent2, publish) {\n  const kind = 10001 /* PinList */;\n  if (!user.ndk) throw new Error(\"No NDK instance found\");\n  user.ndk.assertSigner();\n  if (!pinEvent2) {\n    const events = await user.ndk.fetchEvents(\n      { kinds: [kind], authors: [user.pubkey] },\n      { cacheUsage: \"ONLY_RELAY\" /* ONLY_RELAY */ }\n    );\n    if (events.size > 0) {\n      pinEvent2 = lists_default.from(Array.from(events)[0]);\n    } else {\n      pinEvent2 = new NDKEvent(user.ndk, {\n        kind\n      });\n    }\n  }\n  pinEvent2.tag(event);\n  if (publish) {\n    await pinEvent2.publish();\n  }\n  return pinEvent2;\n}\n\n// src/events/kinds/article.ts\nvar NDKArticle = class _NDKArticle extends NDKEvent {\n  static kind = 30023 /* Article */;\n  static kinds = [30023 /* Article */];\n  constructor(ndk, rawEvent) {\n    super(ndk, rawEvent);\n    this.kind ??= 30023 /* Article */;\n  }\n  /**\n   * Creates a NDKArticle from an existing NDKEvent.\n   *\n   * @param event NDKEvent to create the NDKArticle from.\n   * @returns NDKArticle\n   */\n  static from(event) {\n    return new _NDKArticle(event.ndk, event);\n  }\n  /**\n   * Getter for the article title.\n   *\n   * @returns {string | undefined} - The article title if available, otherwise undefined.\n   */\n  get title() {\n    return this.tagValue(\"title\");\n  }\n  /**\n   * Setter for the article title.\n   *\n   * @param {string | undefined} title - The title to set for the article.\n   */\n  set title(title) {\n    this.removeTag(\"title\");\n    if (title) this.tags.push([\"title\", title]);\n  }\n  /**\n   * Getter for the article image.\n   *\n   * @returns {string | undefined} - The article image if available, otherwise undefined.\n   */\n  get image() {\n    return this.tagValue(\"image\");\n  }\n  /**\n   * Setter for the article image.\n   *\n   * @param {string | undefined} image - The image to set for the article.\n   */\n  set image(image) {\n    this.removeTag(\"image\");\n    if (image) this.tags.push([\"image\", image]);\n  }\n  get summary() {\n    return this.tagValue(\"summary\");\n  }\n  set summary(summary) {\n    this.removeTag(\"summary\");\n    if (summary) this.tags.push([\"summary\", summary]);\n  }\n  /**\n   * Getter for the article's publication timestamp.\n   *\n   * @returns {number | undefined} - The Unix timestamp of when the article was published or undefined.\n   */\n  get published_at() {\n    const tag = this.tagValue(\"published_at\");\n    if (tag) {\n      let val = parseInt(tag);\n      if (val > 1e12) {\n        val = Math.floor(val / 1e3);\n      }\n      return val;\n    }\n    return void 0;\n  }\n  /**\n   * Setter for the article's publication timestamp.\n   *\n   * @param {number | undefined} timestamp - The Unix timestamp to set for the article's publication date.\n   */\n  set published_at(timestamp) {\n    this.removeTag(\"published_at\");\n    if (timestamp !== void 0) {\n      this.tags.push([\"published_at\", timestamp.toString()]);\n    }\n  }\n  /**\n   * Generates content tags for the article.\n   *\n   * This method first checks and sets the publication date if not available,\n   * and then generates content tags based on the base NDKEvent class.\n   *\n   * @returns {ContentTag} - The generated content tags.\n   */\n  async generateTags() {\n    super.generateTags();\n    if (!this.published_at) {\n      this.published_at = this.created_at;\n    }\n    return super.generateTags();\n  }\n  /**\n   * Getter for the article's URL.\n   *\n   * @returns {string | undefined} - The article's URL if available, otherwise undefined.\n   */\n  get url() {\n    return this.tagValue(\"url\");\n  }\n  /**\n   * Setter for the article's URL.\n   *\n   * @param {string | undefined} url - The URL to set for the article.\n   */\n  set url(url) {\n    if (url) {\n      this.tags.push([\"url\", url]);\n    } else {\n      this.removeTag(\"url\");\n    }\n  }\n};\n\n// src/events/kinds/wiki.ts\nvar NDKWiki = class extends NDKArticle {\n  static kind = 30818 /* Wiki */;\n  static kinds = [30818 /* Wiki */];\n};\n\n// src/events/kinds/classified.ts\nvar NDKClassified = class _NDKClassified extends NDKEvent {\n  constructor(ndk, rawEvent) {\n    super(ndk, rawEvent);\n    this.kind ??= 30402 /* Classified */;\n  }\n  /**\n   * Creates a NDKClassified from an existing NDKEvent.\n   *\n   * @param event NDKEvent to create the NDKClassified from.\n   * @returns NDKClassified\n   */\n  static from(event) {\n    return new _NDKClassified(event.ndk, event);\n  }\n  /**\n   * Getter for the classified title.\n   *\n   * @returns {string | undefined} - The classified title if available, otherwise undefined.\n   */\n  get title() {\n    return this.tagValue(\"title\");\n  }\n  /**\n   * Setter for the classified title.\n   *\n   * @param {string | undefined} title - The title to set for the classified.\n   */\n  set title(title) {\n    this.removeTag(\"title\");\n    if (title) this.tags.push([\"title\", title]);\n  }\n  /**\n   * Getter for the classified summary.\n   *\n   * @returns {string | undefined} - The classified summary if available, otherwise undefined.\n   */\n  get summary() {\n    return this.tagValue(\"summary\");\n  }\n  /**\n   * Setter for the classified summary.\n   *\n   * @param {string | undefined} summary - The summary to set for the classified.\n   */\n  set summary(summary) {\n    this.removeTag(\"summary\");\n    if (summary) this.tags.push([\"summary\", summary]);\n  }\n  /**\n   * Getter for the classified's publication timestamp.\n   *\n   * @returns {number | undefined} - The Unix timestamp of when the classified was published or undefined.\n   */\n  get published_at() {\n    const tag = this.tagValue(\"published_at\");\n    if (tag) {\n      return parseInt(tag);\n    }\n    return void 0;\n  }\n  /**\n   * Setter for the classified's publication timestamp.\n   *\n   * @param {number | undefined} timestamp - The Unix timestamp to set for the classified's publication date.\n   */\n  set published_at(timestamp) {\n    this.removeTag(\"published_at\");\n    if (timestamp !== void 0) {\n      this.tags.push([\"published_at\", timestamp.toString()]);\n    }\n  }\n  /**\n   * Getter for the classified location.\n   *\n   * @returns {string | undefined} - The classified location if available, otherwise undefined.\n   */\n  get location() {\n    return this.tagValue(\"location\");\n  }\n  /**\n   * Setter for the classified location.\n   *\n   * @param {string | undefined} location - The location to set for the classified.\n   */\n  set location(location) {\n    this.removeTag(\"location\");\n    if (location) this.tags.push([\"location\", location]);\n  }\n  /**\n   * Getter for the classified price.\n   *\n   * @returns {NDKClassifiedPriceTag | undefined} - The classified price if available, otherwise undefined.\n   */\n  get price() {\n    const priceTag = this.tags.find((tag) => tag[0] === \"price\");\n    if (priceTag) {\n      return {\n        amount: parseFloat(priceTag[1]),\n        currency: priceTag[2],\n        frequency: priceTag[3]\n      };\n    } else {\n      return void 0;\n    }\n  }\n  /**\n   * Setter for the classified price.\n   *\n   * @param price - The price to set for the classified.\n   */\n  set price(priceTag) {\n    if (typeof priceTag === \"string\") {\n      priceTag = {\n        amount: parseFloat(priceTag)\n      };\n    }\n    if (priceTag?.amount) {\n      const tag = [\"price\", priceTag.amount.toString()];\n      if (priceTag.currency) tag.push(priceTag.currency);\n      if (priceTag.frequency) tag.push(priceTag.frequency);\n      this.tags.push(tag);\n    } else {\n      this.removeTag(\"price\");\n    }\n  }\n  /**\n   * Generates content tags for the classified.\n   *\n   * This method first checks and sets the publication date if not available,\n   * and then generates content tags based on the base NDKEvent class.\n   *\n   * @returns {ContentTag} - The generated content tags.\n   */\n  async generateTags() {\n    super.generateTags();\n    if (!this.published_at) {\n      this.published_at = this.created_at;\n    }\n    return super.generateTags();\n  }\n};\n\n// src/events/kinds/video.ts\nvar NDKVideo = class _NDKVideo extends NDKEvent {\n  static kind = 34235 /* HorizontalVideo */;\n  static kinds = [34235 /* HorizontalVideo */, 34236 /* VerticalVideo */];\n  constructor(ndk, rawEvent) {\n    super(ndk, rawEvent);\n    this.kind ??= 34235 /* HorizontalVideo */;\n  }\n  /**\n   * Creates a NDKArticle from an existing NDKEvent.\n   *\n   * @param event NDKEvent to create the NDKArticle from.\n   * @returns NDKArticle\n   */\n  static from(event) {\n    return new _NDKVideo(event.ndk, event.rawEvent());\n  }\n  /**\n   * Getter for the article title.\n   *\n   * @returns {string | undefined} - The article title if available, otherwise undefined.\n   */\n  get title() {\n    return this.tagValue(\"title\");\n  }\n  /**\n   * Setter for the article title.\n   *\n   * @param {string | undefined} title - The title to set for the article.\n   */\n  set title(title) {\n    this.removeTag(\"title\");\n    if (title) this.tags.push([\"title\", title]);\n  }\n  /**\n   * Getter for the article thumbnail.\n   *\n   * @returns {string | undefined} - The article thumbnail if available, otherwise undefined.\n   */\n  get thumbnail() {\n    return this.tagValue(\"thumb\");\n  }\n  /**\n   * Setter for the article thumbnail.\n   *\n   * @param {string | undefined} thumbnail - The thumbnail to set for the article.\n   */\n  set thumbnail(thumbnail) {\n    this.removeTag(\"thumb\");\n    if (thumbnail) this.tags.push([\"thumb\", thumbnail]);\n  }\n  get url() {\n    return this.tagValue(\"url\");\n  }\n  set url(url) {\n    this.removeTag(\"url\");\n    if (url) this.tags.push([\"url\", url]);\n  }\n  /**\n   * Getter for the article's publication timestamp.\n   *\n   * @returns {number | undefined} - The Unix timestamp of when the article was published or undefined.\n   */\n  get published_at() {\n    const tag = this.tagValue(\"published_at\");\n    if (tag) {\n      return parseInt(tag);\n    }\n    return void 0;\n  }\n  /**\n   * Setter for the article's publication timestamp.\n   *\n   * @param {number | undefined} timestamp - The Unix timestamp to set for the article's publication date.\n   */\n  set published_at(timestamp) {\n    this.removeTag(\"published_at\");\n    if (timestamp !== void 0) {\n      this.tags.push([\"published_at\", timestamp.toString()]);\n    }\n  }\n  /**\n   * Generates content tags for the article.\n   *\n   * This method first checks and sets the publication date if not available,\n   * and then generates content tags based on the base NDKEvent class.\n   *\n   * @returns {ContentTag} - The generated content tags.\n   */\n  async generateTags() {\n    super.generateTags();\n    if (!this.published_at) {\n      this.published_at = this.created_at;\n    }\n    return super.generateTags();\n  }\n  get duration() {\n    const tag = this.tagValue(\"duration\");\n    if (tag) {\n      return parseInt(tag);\n    }\n    return void 0;\n  }\n  /**\n   * Setter for the video's duration\n   *\n   * @param {number | undefined} duration - The duration to set for the video (in seconds)\n   */\n  set duration(dur) {\n    this.removeTag(\"duration\");\n    if (dur !== void 0) {\n      this.tags.push([\"duration\", Math.floor(dur).toString()]);\n    }\n  }\n};\n\n// src/events/kinds/highlight.ts\nimport { nip19 as nip195 } from \"nostr-tools\";\nvar NDKHighlight = class _NDKHighlight extends NDKEvent {\n  _article;\n  static kind = 9802 /* Highlight */;\n  static kinds = [9802 /* Highlight */];\n  constructor(ndk, rawEvent) {\n    super(ndk, rawEvent);\n    this.kind ??= 9802 /* Highlight */;\n  }\n  static from(event) {\n    return new _NDKHighlight(event.ndk, event);\n  }\n  get url() {\n    return this.tagValue(\"r\");\n  }\n  /**\n   * Context tag.\n   */\n  set context(context) {\n    if (context === void 0) {\n      this.tags = this.tags.filter(([tag, value]) => tag !== \"context\");\n    } else {\n      this.tags = this.tags.filter(([tag, value]) => tag !== \"context\");\n      this.tags.push([\"context\", context]);\n    }\n  }\n  get context() {\n    return this.tags.find(([tag, value]) => tag === \"context\")?.[1] ?? void 0;\n  }\n  /**\n   * Will return the article URL or NDKEvent if they have already been\n   * set (it won't attempt to load remote events)\n   */\n  get article() {\n    return this._article;\n  }\n  /**\n   * Article the highlight is coming from.\n   *\n   * @param article Article URL or NDKEvent.\n   */\n  set article(article) {\n    this._article = article;\n    if (typeof article === \"string\") {\n      this.tags.push([\"r\", article]);\n    } else {\n      this.tag(article);\n    }\n  }\n  getArticleTag() {\n    return this.getMatchingTags(\"a\")[0] || this.getMatchingTags(\"e\")[0] || this.getMatchingTags(\"r\")[0];\n  }\n  async getArticle() {\n    if (this._article !== void 0) return this._article;\n    let taggedBech32;\n    const articleTag = this.getArticleTag();\n    if (!articleTag) return void 0;\n    switch (articleTag[0]) {\n      case \"a\":\n        const [kind, pubkey, identifier] = articleTag[1].split(\":\");\n        taggedBech32 = nip195.naddrEncode({ kind: parseInt(kind), pubkey, identifier });\n        break;\n      case \"e\":\n        taggedBech32 = nip195.noteEncode(articleTag[1]);\n        break;\n      case \"r\":\n        this._article = articleTag[1];\n        break;\n    }\n    if (taggedBech32) {\n      let a = await this.ndk?.fetchEvent(taggedBech32);\n      if (a) {\n        if (a.kind === 30023 /* Article */) {\n          a = NDKArticle.from(a);\n        }\n        this._article = a;\n      }\n    }\n    return this._article;\n  }\n};\n\n// src/events/kinds/NDKRelayList.ts\nvar READ_MARKER = \"read\";\nvar WRITE_MARKER = \"write\";\nvar NDKRelayList = class _NDKRelayList extends NDKEvent {\n  constructor(ndk, rawEvent) {\n    super(ndk, rawEvent);\n    this.kind ??= 10002 /* RelayList */;\n  }\n  static from(ndkEvent) {\n    return new _NDKRelayList(ndkEvent.ndk, ndkEvent.rawEvent());\n  }\n  get readRelayUrls() {\n    return this.tags.filter((tag) => tag[0] === \"r\" || tag[0] === \"relay\").filter((tag) => !tag[2] || tag[2] && tag[2] === READ_MARKER).map((tag) => tryNormalizeRelayUrl(tag[1])).filter((url) => !!url);\n  }\n  set readRelayUrls(relays) {\n    for (const relay of relays) {\n      this.tags.push([\"r\", relay, READ_MARKER]);\n    }\n  }\n  get writeRelayUrls() {\n    return this.tags.filter((tag) => tag[0] === \"r\" || tag[0] === \"relay\").filter((tag) => !tag[2] || tag[2] && tag[2] === WRITE_MARKER).map((tag) => tryNormalizeRelayUrl(tag[1])).filter((url) => !!url);\n  }\n  set writeRelayUrls(relays) {\n    for (const relay of relays) {\n      this.tags.push([\"r\", relay, WRITE_MARKER]);\n    }\n  }\n  get bothRelayUrls() {\n    return this.tags.filter((tag) => tag[0] === \"r\" || tag[0] === \"relay\").filter((tag) => !tag[2]).map((tag) => tag[1]);\n  }\n  set bothRelayUrls(relays) {\n    for (const relay of relays) {\n      this.tags.push([\"r\", relay]);\n    }\n  }\n  get relays() {\n    return this.tags.filter((tag) => tag[0] === \"r\" || tag[0] === \"relay\").map((tag) => tag[1]);\n  }\n  /**\n   * Provides a relaySet for the relays in this list.\n   */\n  get relaySet() {\n    if (!this.ndk) throw new Error(\"NDKRelayList has no NDK instance\");\n    return new NDKRelaySet(\n      new Set(this.relays.map((u) => this.ndk.pool.getRelay(u))),\n      this.ndk\n    );\n  }\n};\nfunction relayListFromKind3(ndk, contactList) {\n  try {\n    const content = JSON.parse(contactList.content);\n    const relayList = new NDKRelayList(ndk);\n    const readRelays = /* @__PURE__ */ new Set();\n    const writeRelays = /* @__PURE__ */ new Set();\n    for (let [key, config] of Object.entries(content)) {\n      try {\n        key = normalizeRelayUrl(key);\n      } catch {\n        continue;\n      }\n      if (!config) {\n        readRelays.add(key);\n        writeRelays.add(key);\n      } else {\n        const relayConfig = config;\n        if (relayConfig.write) writeRelays.add(key);\n        if (relayConfig.read) readRelays.add(key);\n      }\n    }\n    relayList.readRelayUrls = Array.from(readRelays);\n    relayList.writeRelayUrls = Array.from(writeRelays);\n    return relayList;\n  } catch {\n  }\n  return void 0;\n}\n\n// src/events/kinds/drafts.ts\nvar NDKDraft = class _NDKDraft extends NDKEvent {\n  _event;\n  constructor(ndk, rawEvent) {\n    super(ndk, rawEvent);\n    this.kind ??= 31234 /* Draft */;\n  }\n  static from(event) {\n    return new _NDKDraft(event.ndk, event);\n  }\n  /**\n   * Sets an identifier (i.e. d-tag)\n   */\n  set identifier(id) {\n    this.removeTag(\"d\");\n    this.tags.push([\"d\", id]);\n  }\n  get identifier() {\n    return this.dTag;\n  }\n  /**\n   * Event that is to be saved.\n   */\n  set event(e) {\n    if (e instanceof NDKEvent) this._event = e.rawEvent();\n    else this._event = e;\n    this.prepareEvent();\n  }\n  /**\n   * Gets the event.\n   * @param param0\n   * @returns NDKEvent of the draft event or null if the draft event has been deleted (emptied).\n   */\n  async getEvent(signer) {\n    if (this._event) return new NDKEvent(this.ndk, this._event);\n    signer ??= this.ndk?.signer;\n    if (!signer) throw new Error(\"No signer available\");\n    const user = await signer.user();\n    if (this.content && this.content.length > 0) {\n      try {\n        await this.decrypt(user, signer);\n        const payload = JSON.parse(this.content);\n        this._event = payload;\n        return new NDKEvent(this.ndk, payload);\n      } catch (e) {\n        console.error(e);\n        return void 0;\n      }\n    } else {\n      return null;\n    }\n  }\n  prepareEvent() {\n    if (!this._event) throw new Error(\"No event has been provided\");\n    this.removeTag(\"k\");\n    if (this._event.kind) this.tags.push([\"k\", this._event.kind.toString()]);\n    this.content = JSON.stringify(this._event);\n  }\n  /**\n   * Generates draft event.\n   *\n   * @param signer: Optional signer to encrypt with\n   * @param publish: Whether to publish, optionally specifying relaySet to publish to\n   */\n  async save({\n    signer,\n    publish,\n    relaySet\n  }) {\n    signer ??= this.ndk?.signer;\n    if (!signer) throw new Error(\"No signer available\");\n    const user = await signer.user();\n    await this.encrypt(user, signer);\n    if (publish === false) return;\n    return this.publish(relaySet);\n  }\n};\n\n// src/events/kinds/repost.ts\nvar NDKRepost = class _NDKRepost extends NDKEvent {\n  _repostedEvents;\n  constructor(ndk, rawEvent) {\n    super(ndk, rawEvent);\n  }\n  static from(event) {\n    return new _NDKRepost(event.ndk, event.rawEvent());\n  }\n  /**\n   * Returns all reposted events by the current event.\n   *\n   * @param klass Optional class to convert the events to.\n   * @returns\n   */\n  async repostedEvents(klass, opts) {\n    const items = [];\n    if (!this.ndk) throw new Error(\"NDK instance not set\");\n    if (this._repostedEvents !== void 0) return this._repostedEvents;\n    for (const eventId of this.repostedEventIds()) {\n      const filter = filterForId(eventId);\n      const event = await this.ndk.fetchEvent(filter, opts);\n      if (event) {\n        items.push(klass ? klass.from(event) : event);\n      }\n    }\n    return items;\n  }\n  /**\n   * Returns the reposted event IDs.\n   */\n  repostedEventIds() {\n    return this.tags.filter((t) => t[0] === \"e\" || t[0] === \"a\").map((t) => t[1]);\n  }\n};\nfunction filterForId(id) {\n  if (id.match(/:/)) {\n    const [kind, pubkey, identifier] = id.split(\":\");\n    return {\n      kinds: [parseInt(kind)],\n      authors: [pubkey],\n      \"#d\": [identifier]\n    };\n  } else {\n    return { ids: [id] };\n  }\n}\n\n// src/events/kinds/nip89/NDKAppHandler.ts\nvar NDKAppHandlerEvent = class _NDKAppHandlerEvent extends NDKEvent {\n  profile;\n  constructor(ndk, rawEvent) {\n    super(ndk, rawEvent);\n    this.kind ??= 31990 /* AppHandler */;\n  }\n  static from(ndkEvent) {\n    return new _NDKAppHandlerEvent(ndkEvent.ndk, ndkEvent.rawEvent());\n  }\n  /**\n   * Fetches app handler information\n   * If no app information is available on the kind:31990,\n   * we fetch the event's author's profile and return that instead.\n   */\n  async fetchProfile() {\n    if (this.profile === void 0 && this.content.length > 0) {\n      try {\n        const profile = JSON.parse(this.content);\n        if (profile && profile.name) {\n          return profile;\n        } else {\n          this.profile = null;\n        }\n      } catch (e) {\n        this.profile = null;\n      }\n    }\n    return new Promise((resolve, reject) => {\n      const author = this.author;\n      author.fetchProfile().then(() => {\n        resolve(author.profile);\n      }).catch(reject);\n    });\n  }\n};\n\n// src/events/kinds/subscriptions/amount.ts\nvar possibleIntervalFrequencies = [\n  \"daily\",\n  \"weekly\",\n  \"monthly\",\n  \"quarterly\",\n  \"yearly\"\n];\nfunction calculateTermDurationInSeconds(term) {\n  switch (term) {\n    case \"daily\":\n      return 24 * 60 * 60;\n    case \"weekly\":\n      return 7 * 24 * 60 * 60;\n    case \"monthly\":\n      return 30 * 24 * 60 * 60;\n    case \"quarterly\":\n      return 3 * 30 * 24 * 60 * 60;\n    case \"yearly\":\n      return 365 * 24 * 60 * 60;\n  }\n}\nfunction newAmount(amount, currency, term) {\n  return [\"amount\", amount.toString(), currency, term];\n}\nfunction parseTagToSubscriptionAmount(tag) {\n  const amount = parseInt(tag[1]);\n  if (isNaN(amount) || amount === void 0 || amount === null || amount <= 0) return void 0;\n  const currency = tag[2];\n  if (currency === void 0 || currency === \"\") return void 0;\n  const term = tag[3];\n  if (term === void 0) return void 0;\n  if (!possibleIntervalFrequencies.includes(term)) return void 0;\n  return {\n    amount,\n    currency,\n    term\n  };\n}\n\n// src/events/kinds/subscriptions/tier.ts\nvar NDKSubscriptionTier = class _NDKSubscriptionTier extends NDKArticle {\n  static kind = 37001 /* SubscriptionTier */;\n  static kinds = [37001 /* SubscriptionTier */];\n  constructor(ndk, rawEvent) {\n    const k = rawEvent?.kind ?? 37001 /* SubscriptionTier */;\n    super(ndk, rawEvent);\n    this.kind = k;\n  }\n  /**\n   * Creates a new NDKSubscriptionTier from an event\n   * @param event\n   * @returns NDKSubscriptionTier\n   */\n  static from(event) {\n    return new _NDKSubscriptionTier(event.ndk, event);\n  }\n  /**\n   * Returns perks for this tier\n   */\n  get perks() {\n    return this.getMatchingTags(\"perk\").map((tag) => tag[1]).filter((perk) => perk !== void 0);\n  }\n  /**\n   * Adds a perk to this tier\n   */\n  addPerk(perk) {\n    this.tags.push([\"perk\", perk]);\n  }\n  /**\n   * Returns the amount for this tier\n   */\n  get amounts() {\n    return this.getMatchingTags(\"amount\").map((tag) => parseTagToSubscriptionAmount(tag)).filter((a) => a !== void 0);\n  }\n  /**\n   * Adds an amount to this tier\n   * @param amount Amount in the smallest unit of the currency (e.g. cents, msats)\n   * @param currency Currency code. Use msat for millisatoshis\n   * @param term One of daily, weekly, monthly, quarterly, yearly\n   */\n  addAmount(amount, currency, term) {\n    this.tags.push(newAmount(amount, currency, term));\n  }\n  /**\n   * Sets a relay where content related to this tier can be found\n   * @param relayUrl URL of the relay\n   */\n  set relayUrl(relayUrl) {\n    this.tags.push([\"r\", relayUrl]);\n  }\n  /**\n   * Returns the relay URLs for this tier\n   */\n  get relayUrls() {\n    return this.getMatchingTags(\"r\").map((tag) => tag[1]).filter((relay) => relay !== void 0);\n  }\n  /**\n   * Gets the verifier pubkey for this tier. This is the pubkey that will generate\n   * subscription payment receipts\n   */\n  get verifierPubkey() {\n    return this.tagValue(\"p\");\n  }\n  /**\n   * Sets the verifier pubkey for this tier.\n   */\n  set verifierPubkey(pubkey) {\n    this.removeTag(\"p\");\n    if (pubkey) this.tags.push([\"p\", pubkey]);\n  }\n  /**\n   * Checks if this tier is valid\n   */\n  get isValid() {\n    return this.title !== void 0 && // Must have a title\n    this.amounts.length > 0;\n  }\n};\n\n// src/events/kinds/subscriptions/subscription-start.ts\nimport debug2 from \"debug\";\nvar NDKSubscriptionStart = class _NDKSubscriptionStart extends NDKEvent {\n  debug;\n  constructor(ndk, rawEvent) {\n    super(ndk, rawEvent);\n    this.kind ??= 7001 /* Subscribe */;\n    this.debug = ndk?.debug.extend(\"subscription-start\") ?? debug2(\"ndk:subscription-start\");\n  }\n  static from(event) {\n    return new _NDKSubscriptionStart(event.ndk, event.rawEvent());\n  }\n  /**\n   * Recipient of the subscription. I.e. The author of this event subscribes to this user.\n   */\n  get recipient() {\n    const pTag = this.getMatchingTags(\"p\")?.[0];\n    if (!pTag) return void 0;\n    const user = new NDKUser({ pubkey: pTag[1] });\n    return user;\n  }\n  set recipient(user) {\n    this.removeTag(\"p\");\n    if (!user) return;\n    this.tags.push([\"p\", user.pubkey]);\n  }\n  /**\n   * The amount of the subscription.\n   */\n  get amount() {\n    const amountTag = this.getMatchingTags(\"amount\")?.[0];\n    if (!amountTag) return void 0;\n    return parseTagToSubscriptionAmount(amountTag);\n  }\n  set amount(amount) {\n    this.removeTag(\"amount\");\n    if (!amount) return;\n    this.tags.push(newAmount(amount.amount, amount.currency, amount.term));\n  }\n  /**\n   * The event id or NIP-33 tag id of the tier that the user is subscribing to.\n   */\n  get tierId() {\n    const eTag = this.getMatchingTags(\"e\")?.[0];\n    const aTag = this.getMatchingTags(\"a\")?.[0];\n    if (!eTag || !aTag) return void 0;\n    return eTag[1] ?? aTag[1];\n  }\n  set tier(tier) {\n    this.removeTag(\"e\");\n    this.removeTag(\"a\");\n    this.removeTag(\"event\");\n    if (!tier) return;\n    this.tag(tier);\n    this.removeTag(\"p\");\n    this.tags.push([\"p\", tier.pubkey]);\n    this.tags.push([\"event\", JSON.stringify(tier.rawEvent())]);\n  }\n  /**\n   * Fetches the tier that the user is subscribing to.\n   */\n  async fetchTier() {\n    const eventTag = this.tagValue(\"event\");\n    if (eventTag) {\n      try {\n        const parsedEvent = JSON.parse(eventTag);\n        return new NDKSubscriptionTier(this.ndk, parsedEvent);\n      } catch {\n        this.debug(\"Failed to parse event tag\");\n      }\n    }\n    const tierId = this.tierId;\n    if (!tierId) return void 0;\n    const e = await this.ndk?.fetchEvent(tierId);\n    if (!e) return void 0;\n    return NDKSubscriptionTier.from(e);\n  }\n  get isValid() {\n    if (this.getMatchingTags(\"amount\").length !== 1) {\n      this.debug(\"Invalid # of amount tag\");\n      return false;\n    }\n    if (!this.amount) {\n      this.debug(\"Invalid amount tag\");\n      return false;\n    }\n    if (this.getMatchingTags(\"p\").length !== 1) {\n      this.debug(\"Invalid # of p tag\");\n      return false;\n    }\n    if (!this.recipient) {\n      this.debug(\"Invalid p tag\");\n      return false;\n    }\n    return true;\n  }\n};\n\n// src/events/kinds/subscriptions/receipt.ts\nimport debug3 from \"debug\";\nvar NDKSubscriptionReceipt = class _NDKSubscriptionReceipt extends NDKEvent {\n  debug;\n  constructor(ndk, rawEvent) {\n    super(ndk, rawEvent);\n    this.kind ??= 7003 /* SubscriptionReceipt */;\n    this.debug = ndk?.debug.extend(\"subscription-start\") ?? debug3(\"ndk:subscription-start\");\n  }\n  static from(event) {\n    return new _NDKSubscriptionReceipt(event.ndk, event.rawEvent());\n  }\n  /**\n   * This is the person being subscribed to\n   */\n  get recipient() {\n    const pTag = this.getMatchingTags(\"p\")?.[0];\n    if (!pTag) return void 0;\n    const user = new NDKUser({ pubkey: pTag[1] });\n    return user;\n  }\n  set recipient(user) {\n    this.removeTag(\"p\");\n    if (!user) return;\n    this.tags.push([\"p\", user.pubkey]);\n  }\n  /**\n   * This is the person subscribing\n   */\n  get subscriber() {\n    const PTag = this.getMatchingTags(\"P\")?.[0];\n    if (!PTag) return void 0;\n    const user = new NDKUser({ pubkey: PTag[1] });\n    return user;\n  }\n  set subscriber(user) {\n    this.removeTag(\"P\");\n    if (!user) return;\n    this.tags.push([\"P\", user.pubkey]);\n  }\n  set subscriptionStart(event) {\n    this.debug(`before setting subscription start: ${this.rawEvent}`);\n    this.removeTag(\"e\");\n    this.tag(event, \"subscription\", true);\n    this.debug(`after setting subscription start: ${this.rawEvent}`);\n  }\n  get tierName() {\n    const tag = this.getMatchingTags(\"tier\")?.[0];\n    return tag?.[1];\n  }\n  get isValid() {\n    const period = this.validPeriod;\n    if (!period) {\n      return false;\n    }\n    if (period.start > period.end) {\n      return false;\n    }\n    const pTags = this.getMatchingTags(\"p\");\n    const PTags = this.getMatchingTags(\"P\");\n    if (pTags.length !== 1 || PTags.length !== 1) {\n      return false;\n    }\n    return true;\n  }\n  get validPeriod() {\n    const tag = this.getMatchingTags(\"valid\")?.[0];\n    if (!tag) return void 0;\n    try {\n      return {\n        start: new Date(parseInt(tag[1]) * 1e3),\n        end: new Date(parseInt(tag[2]) * 1e3)\n      };\n    } catch {\n      return void 0;\n    }\n  }\n  set validPeriod(period) {\n    this.removeTag(\"valid\");\n    if (!period) return;\n    this.tags.push([\n      \"valid\",\n      Math.floor(period.start.getTime() / 1e3).toString(),\n      Math.floor(period.end.getTime() / 1e3).toString()\n    ]);\n  }\n  get startPeriod() {\n    return this.validPeriod?.start;\n  }\n  get endPeriod() {\n    return this.validPeriod?.end;\n  }\n  /**\n   * Whether the subscription is currently active\n   */\n  isActive(time) {\n    time ??= /* @__PURE__ */ new Date();\n    const period = this.validPeriod;\n    if (!period) return false;\n    if (time < period.start) return false;\n    if (time > period.end) return false;\n    return true;\n  }\n};\n\n// src/events/kinds/dvm/feedback.ts\nvar NDKDvmJobFeedbackStatus = /* @__PURE__ */ ((NDKDvmJobFeedbackStatus2) => {\n  NDKDvmJobFeedbackStatus2[\"Processing\"] = \"processing\";\n  NDKDvmJobFeedbackStatus2[\"Success\"] = \"success\";\n  NDKDvmJobFeedbackStatus2[\"Scheduled\"] = \"scheduled\";\n  NDKDvmJobFeedbackStatus2[\"PayReq\"] = \"payment_required\";\n  return NDKDvmJobFeedbackStatus2;\n})(NDKDvmJobFeedbackStatus || {});\nvar NDKDVMJobFeedback = class _NDKDVMJobFeedback extends NDKEvent {\n  constructor(ndk, event) {\n    super(ndk, event);\n    this.kind ??= 7e3 /* DVMJobFeedback */;\n  }\n  static async from(event) {\n    const e = new _NDKDVMJobFeedback(event.ndk, event.rawEvent());\n    if (e.encrypted) await e.dvmDecrypt();\n    return e;\n  }\n  get status() {\n    return this.tagValue(\"status\");\n  }\n  set status(status) {\n    this.removeTag(\"status\");\n    if (status !== void 0) {\n      this.tags.push([\"status\", status]);\n    }\n  }\n  get encrypted() {\n    return !!this.getMatchingTags(\"encrypted\")[0];\n  }\n  async dvmDecrypt() {\n    await this.decrypt();\n    const decryptedContent = JSON.parse(this.content);\n    this.tags.push(...decryptedContent);\n  }\n};\n\n// src/events/kinds/dvm/request.ts\nvar NDKDVMRequest = class _NDKDVMRequest extends NDKEvent {\n  constructor(ndk, event) {\n    super(ndk, event);\n  }\n  static from(event) {\n    return new _NDKDVMRequest(event.ndk, event.rawEvent());\n  }\n  set bid(msatAmount) {\n    if (msatAmount === void 0) {\n      this.removeTag(\"bid\");\n    } else {\n      this.tags.push([\"bid\", msatAmount.toString()]);\n    }\n  }\n  get bid() {\n    const v = this.tagValue(\"bid\");\n    if (v === void 0) return void 0;\n    return parseInt(v);\n  }\n  /**\n   * Adds a new input to the job\n   * @param args The arguments to the input\n   */\n  addInput(...args) {\n    this.tags.push([\"i\", ...args]);\n  }\n  /**\n   * Adds a new parameter to the job\n   */\n  addParam(...args) {\n    this.tags.push([\"param\", ...args]);\n  }\n  set output(output) {\n    if (output === void 0) {\n      this.removeTag(\"output\");\n    } else {\n      if (typeof output === \"string\") output = [output];\n      this.tags.push([\"output\", ...output]);\n    }\n  }\n  get output() {\n    const outputTag = this.getMatchingTags(\"output\")[0];\n    return outputTag ? outputTag.slice(1) : void 0;\n  }\n  get params() {\n    const paramTags = this.getMatchingTags(\"param\");\n    return paramTags.map((t) => t.slice(1));\n  }\n  getParam(name) {\n    const paramTag = this.getMatchingTags(\"param\").find((t) => t[1] === name);\n    return paramTag ? paramTag[2] : void 0;\n  }\n  createFeedback(status) {\n    const feedback = new NDKDVMJobFeedback(this.ndk);\n    feedback.tag(this, \"job\");\n    feedback.status = status;\n    return feedback;\n  }\n  /**\n   * Enables job encryption for this event\n   * @param dvm DVM that will receive the event\n   * @param signer Signer to use for encryption\n   */\n  async encryption(dvm, signer) {\n    const dvmTags = [\"i\", \"param\", \"output\", \"relays\", \"bid\"];\n    const tags = this.tags.filter((t) => dvmTags.includes(t[0]));\n    this.tags = this.tags.filter((t) => !dvmTags.includes(t[0]));\n    this.content = JSON.stringify(tags);\n    this.tag(dvm);\n    this.tags.push([\"encrypted\"]);\n    await this.encrypt(dvm, signer);\n  }\n  /**\n   * Sets the DVM that will receive the event\n   */\n  set dvm(dvm) {\n    this.removeTag(\"p\");\n    if (dvm) this.tag(dvm);\n  }\n};\n\n// src/events/kinds/dvm/NDKTranscriptionDVM.ts\nvar NDKTranscriptionDVM = class _NDKTranscriptionDVM extends NDKDVMRequest {\n  constructor(ndk, event) {\n    super(ndk, event);\n    this.kind = 5e3 /* DVMReqTextExtraction */;\n  }\n  static from(event) {\n    return new _NDKTranscriptionDVM(event.ndk, event.rawEvent());\n  }\n  /**\n   * Returns the original source of the transcription\n   */\n  get url() {\n    const inputTags = this.getMatchingTags(\"i\");\n    if (inputTags.length !== 1) {\n      return void 0;\n    }\n    return inputTags[0][1];\n  }\n  /**\n   * Getter for the title tag\n   */\n  get title() {\n    return this.tagValue(\"title\");\n  }\n  /**\n   * Setter for the title tag\n   */\n  set title(value) {\n    this.removeTag(\"title\");\n    if (value) {\n      this.tags.push([\"title\", value]);\n    }\n  }\n  /**\n   * Getter for the image tag\n   */\n  get image() {\n    return this.tagValue(\"image\");\n  }\n  /**\n   * Setter for the image tag\n   */\n  set image(value) {\n    this.removeTag(\"image\");\n    if (value) {\n      this.tags.push([\"image\", value]);\n    }\n  }\n};\n\n// src/events/kinds/dvm/result.ts\nvar NDKDVMJobResult = class _NDKDVMJobResult extends NDKEvent {\n  constructor(ndk, event) {\n    super(ndk, event);\n  }\n  static from(event) {\n    return new _NDKDVMJobResult(event.ndk, event.rawEvent());\n  }\n  setAmount(msat, invoice) {\n    this.removeTag(\"amount\");\n    const tag = [\"amount\", msat.toString()];\n    if (invoice) tag.push(invoice);\n    this.tags.push(tag);\n  }\n  set result(result) {\n    if (result === void 0) {\n      this.content = \"\";\n    } else {\n      this.content = result;\n    }\n  }\n  get result() {\n    if (this.content === \"\") {\n      return void 0;\n    }\n    return this.content;\n  }\n  set status(status) {\n    this.removeTag(\"status\");\n    if (status !== void 0) {\n      this.tags.push([\"status\", status]);\n    }\n  }\n  get status() {\n    return this.tagValue(\"status\");\n  }\n  get jobRequestId() {\n    for (const eTag of this.getMatchingTags(\"e\")) {\n      if (eTag[2] === \"job\") return eTag[1];\n    }\n    if (this.jobRequest) return this.jobRequest.id;\n    return this.tagValue(\"e\");\n  }\n  set jobRequest(event) {\n    this.removeTag(\"request\");\n    if (event) {\n      this.kind = event.kind + 1e3;\n      this.tags.push([\"request\", JSON.stringify(event.rawEvent())]);\n      this.tag(event);\n    }\n  }\n  get jobRequest() {\n    const tag = this.tagValue(\"request\");\n    if (tag === void 0) {\n      return void 0;\n    }\n    return new NDKEvent(this.ndk, JSON.parse(tag));\n  }\n};\n\n// src/events/kinds/nutzap/index.ts\nimport debug4 from \"debug\";\nvar NDKNutzap = class _NDKNutzap extends NDKEvent {\n  debug;\n  _proofs = [];\n  static kind = 9321 /* Nutzap */;\n  static kinds = [_NDKNutzap.kind];\n  constructor(ndk, event) {\n    super(ndk, event);\n    this.kind ??= 9321 /* Nutzap */;\n    this.debug = ndk?.debug.extend(\"nutzap\") ?? debug4(\"ndk:nutzap\");\n    if (!this.alt) this.alt = \"This is a nutzap\";\n  }\n  static from(event) {\n    const e = new this(event.ndk, event);\n    try {\n      const proofTags = e.getMatchingTags(\"proof\");\n      if (proofTags.length) {\n        e._proofs = proofTags.map((tag) => JSON.parse(tag[1]));\n      } else {\n        e._proofs = JSON.parse(e.content);\n      }\n    } catch {\n      return;\n    }\n    if (!e._proofs || !e._proofs.length) return;\n    return e;\n  }\n  set comment(comment) {\n    this.content = comment ?? \"\";\n  }\n  get comment() {\n    const c = this.tagValue(\"comment\");\n    if (c) return c;\n    return this.content;\n  }\n  set proofs(proofs) {\n    this._proofs = proofs;\n    this.tags = this.tags.filter((tag) => tag[0] !== \"proof\");\n    for (const proof of proofs) {\n      this.tags.push([\"proof\", JSON.stringify(proof)]);\n    }\n    this.removeTag(\"amount\");\n    this.tags.push([\"amount\", this.amount.toString()]);\n  }\n  get proofs() {\n    return this._proofs;\n  }\n  /**\n   * Gets the p2pk pubkey that is embedded in the first proof\n   */\n  get p2pk() {\n    const firstProof = this.proofs[0];\n    try {\n      const secret = JSON.parse(firstProof.secret);\n      let payload = {};\n      if (typeof secret === \"string\") {\n        payload = JSON.parse(secret);\n        this.debug(\"stringified payload\", firstProof.secret);\n      } else if (typeof secret === \"object\") {\n        payload = secret;\n      }\n      const isP2PKLocked = payload[0] === \"P2PK\" && payload[1]?.data;\n      if (isP2PKLocked) {\n        const paddedp2pk = payload[1].data;\n        const p2pk = paddedp2pk.slice(2, -1);\n        if (p2pk) return p2pk;\n      }\n    } catch (e) {\n      this.debug(\"error parsing p2pk pubkey\", e, this.proofs[0]);\n    }\n  }\n  /**\n   * Get the mint where this nutzap proofs exist\n   */\n  get mint() {\n    return this.tagValue(\"u\");\n  }\n  set mint(value) {\n    this.removeTag(\"u\");\n    this.tag([\"u\", value]);\n  }\n  get unit() {\n    return this.tagValue(\"unit\") ?? \"msat\";\n  }\n  set unit(value) {\n    this.removeTag(\"unit\");\n    if (value) this.tag([\"unit\", value]);\n  }\n  get amount() {\n    const count = this.proofs.reduce((total, proof) => total + proof.amount, 0);\n    return count * 1e3;\n  }\n  sender = this.author;\n  /**\n   * Set the target of the nutzap\n   * @param target The target of the nutzap (a user or an event)\n   */\n  set target(target) {\n    this.tags = this.tags.filter((t) => t[0] !== \"p\");\n    if (target instanceof NDKEvent) {\n      this.tags.push(target.tagReference());\n    }\n  }\n  set recipientPubkey(pubkey) {\n    this.removeTag(\"p\");\n    this.tag([\"p\", pubkey]);\n  }\n  get recipientPubkey() {\n    return this.tagValue(\"p\");\n  }\n  get recipient() {\n    const pubkey = this.recipientPubkey;\n    if (this.ndk) return this.ndk.getUser({ pubkey });\n    return new NDKUser({ pubkey });\n  }\n  /**\n   * Validates that the nutzap conforms to NIP-61\n   */\n  get isValid() {\n    let pTagCount = 0;\n    let mintTagCount = 0;\n    for (const tag of this.tags) {\n      if (tag[0] === \"p\") pTagCount++;\n      if (tag[0] === \"u\") mintTagCount++;\n    }\n    return (\n      // exactly one recipient and mint\n      pTagCount === 1 && mintTagCount === 1 && // must have at least one proof\n      this.proofs.length > 0\n    );\n  }\n};\n\n// src/events/kinds/simple-group/member-list.ts\nvar NDKSimpleGroupMemberList = class _NDKSimpleGroupMemberList extends NDKEvent {\n  relaySet;\n  memberSet = /* @__PURE__ */ new Set();\n  static kind = 39002 /* GroupMembers */;\n  static kinds = [39002 /* GroupMembers */];\n  constructor(ndk, rawEvent) {\n    super(ndk, rawEvent);\n    this.kind ??= 39002 /* GroupMembers */;\n    this.memberSet = new Set(this.members);\n  }\n  static from(event) {\n    return new _NDKSimpleGroupMemberList(event.ndk, event);\n  }\n  get members() {\n    return this.getMatchingTags(\"p\").map((tag) => tag[1]);\n  }\n  hasMember(member) {\n    return this.memberSet.has(member);\n  }\n  async publish(relaySet, timeoutMs, requiredRelayCount) {\n    relaySet ??= this.relaySet;\n    return super.publishReplaceable(relaySet, timeoutMs, requiredRelayCount);\n  }\n};\n\n// src/events/kinds/simple-group/metadata.ts\nvar NDKSimpleGroupMetadata = class _NDKSimpleGroupMetadata extends NDKEvent {\n  static kind = 39e3 /* GroupMetadata */;\n  static kinds = [39e3 /* GroupMetadata */];\n  constructor(ndk, rawEvent) {\n    super(ndk, rawEvent);\n    this.kind ??= 39e3 /* GroupMetadata */;\n  }\n  static from(event) {\n    return new _NDKSimpleGroupMetadata(event.ndk, event);\n  }\n  get name() {\n    return this.tagValue(\"name\");\n  }\n  get picture() {\n    return this.tagValue(\"picture\");\n  }\n  get about() {\n    return this.tagValue(\"about\");\n  }\n  get scope() {\n    if (this.getMatchingTags(\"public\").length > 0) return \"public\";\n    if (this.getMatchingTags(\"public\").length > 0) return \"private\";\n  }\n  set scope(scope) {\n    this.removeTag(\"public\");\n    this.removeTag(\"private\");\n    if (scope === \"public\") {\n      this.tags.push([\"public\", \"\"]);\n    } else if (scope === \"private\") {\n      this.tags.push([\"private\", \"\"]);\n    }\n  }\n  get access() {\n    if (this.getMatchingTags(\"open\").length > 0) return \"open\";\n    if (this.getMatchingTags(\"closed\").length > 0) return \"closed\";\n  }\n  set access(access) {\n    this.removeTag(\"open\");\n    this.removeTag(\"closed\");\n    if (access === \"open\") {\n      this.tags.push([\"open\", \"\"]);\n    } else if (access === \"closed\") {\n      this.tags.push([\"closed\", \"\"]);\n    }\n  }\n};\n\n// src/events/kinds/simple-group/index.ts\nvar NDKSimpleGroup = class _NDKSimpleGroup {\n  ndk;\n  groupId;\n  relaySet;\n  fetchingMetadata;\n  metadata;\n  memberList;\n  adminList;\n  constructor(ndk, relaySet, groupId) {\n    this.ndk = ndk;\n    this.groupId = groupId ?? randomId(24);\n    this.relaySet = relaySet;\n  }\n  get id() {\n    return this.groupId;\n  }\n  relayUrls() {\n    return this.relaySet.relayUrls;\n  }\n  get name() {\n    return this.metadata?.name;\n  }\n  get about() {\n    return this.metadata?.about;\n  }\n  get picture() {\n    return this.metadata?.picture;\n  }\n  get members() {\n    return this.memberList?.members ?? [];\n  }\n  get admins() {\n    return this.adminList?.members ?? [];\n  }\n  async getMetadata() {\n    await this.ensureMetadataEvent();\n    return this.metadata;\n  }\n  /**\n   * Creates the group by publishing a kind:9007 event.\n   * @param signer\n   * @returns\n   */\n  async createGroup(signer) {\n    signer ??= this.ndk.signer;\n    if (!signer) throw new Error(\"No signer available\");\n    const user = await signer.user();\n    if (!user) throw new Error(\"No user available\");\n    const event = new NDKEvent(this.ndk);\n    event.kind = 9007 /* GroupAdminCreateGroup */;\n    event.tags.push([\"h\", this.groupId]);\n    await event.sign(signer);\n    return event.publish(this.relaySet);\n  }\n  async setMetadata({\n    name,\n    about,\n    picture\n  }) {\n    const event = new NDKEvent(this.ndk);\n    event.kind = 9002 /* GroupAdminEditMetadata */;\n    event.tags.push([\"h\", this.groupId]);\n    if (name) event.tags.push([\"name\", name]);\n    if (about) event.tags.push([\"about\", about]);\n    if (picture) event.tags.push([\"picture\", picture]);\n    await event.sign();\n    return event.publish(this.relaySet);\n  }\n  /**\n   * Adds a user to the group using a kind:9000 event\n   * @param user user to add\n   * @param opts options\n   */\n  async addUser(user) {\n    const addUserEvent = _NDKSimpleGroup.generateAddUserEvent(user.pubkey, this.groupId);\n    addUserEvent.ndk = this.ndk;\n    return addUserEvent;\n  }\n  async getMemberListEvent() {\n    const memberList = await this.ndk.fetchEvent(\n      {\n        kinds: [39002 /* GroupMembers */],\n        \"#d\": [this.groupId]\n      },\n      void 0,\n      this.relaySet\n    );\n    if (!memberList) return null;\n    return NDKSimpleGroupMemberList.from(memberList);\n  }\n  /**\n   * Gets a list of users that belong to this group\n   */\n  async getMembers() {\n    const members = [];\n    const memberPubkeys = /* @__PURE__ */ new Set();\n    const memberListEvent = await this.getMemberListEvent();\n    if (!memberListEvent) return [];\n    for (const pTag of memberListEvent.getMatchingTags(\"p\")) {\n      const pubkey = pTag[1];\n      if (memberPubkeys.has(pubkey)) continue;\n      memberPubkeys.add(pubkey);\n      try {\n        members.push(this.ndk.getUser({ pubkey }));\n      } catch {\n      }\n    }\n    return members;\n  }\n  /**\n   * Generates an event that lists the members of a group.\n   * @param groupId\n   * @returns\n   */\n  static generateUserListEvent(groupId) {\n    const event = new NDKEvent(void 0, {\n      kind: 39002 /* GroupMembers */,\n      tags: [\n        [\"h\", groupId],\n        [\"alt\", \"Group Member List\"]\n      ]\n    });\n    return event;\n  }\n  /**\n   * Generates an event that adds a user to a group.\n   * @param userPubkey pubkey of the user to add\n   * @param groupId group to add the user to\n   * @returns\n   */\n  static generateAddUserEvent(userPubkey, groupId) {\n    const event = new NDKEvent(void 0, {\n      kind: 9e3 /* GroupAdminAddUser */,\n      tags: [[\"h\", groupId]]\n    });\n    event.tags.push([\"p\", userPubkey]);\n    return event;\n  }\n  async requestToJoin(pubkey, content) {\n    const event = new NDKEvent(this.ndk, {\n      kind: 9021 /* GroupAdminRequestJoin */,\n      content: content ?? \"\",\n      tags: [[\"h\", this.groupId]]\n    });\n    return event.publish(this.relaySet);\n  }\n  /**\n   * Makes sure that a metadata event exists locally\n   */\n  async ensureMetadataEvent() {\n    if (this.metadata) return;\n    if (this.fetchingMetadata) return this.fetchingMetadata;\n    this.fetchingMetadata = this.ndk.fetchEvent(\n      {\n        kinds: [39e3 /* GroupMetadata */],\n        \"#d\": [this.groupId]\n      },\n      void 0,\n      this.relaySet\n    ).then((event) => {\n      if (event) {\n        this.metadata = NDKSimpleGroupMetadata.from(event);\n      } else {\n        this.metadata = new NDKSimpleGroupMetadata(this.ndk);\n        this.metadata.dTag = this.groupId;\n      }\n    }).finally(() => {\n      this.fetchingMetadata = void 0;\n    }).catch(() => {\n      throw new Error(\"Failed to fetch metadata for group \" + this.groupId);\n    });\n    return this.fetchingMetadata;\n  }\n};\nfunction randomId(length) {\n  const chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  const charsLength = chars.length;\n  let result = \"\";\n  for (let i = 0; i < length; i++) {\n    result += chars.charAt(Math.floor(Math.random() * charsLength));\n  }\n  return result;\n}\n\n// src/app-settings/index.ts\nvar NDKAppSettings = class _NDKAppSettings extends NDKEvent {\n  appName;\n  settings = {};\n  constructor(ndk, rawEvent) {\n    super(ndk, rawEvent);\n    this.kind ??= 30078 /* AppSpecificData */;\n    this.dTag ??= this.appName;\n    if (this.content.length > 0) {\n      try {\n        this.settings = JSON.parse(this.content);\n      } catch (error) {\n        console.error(\"Error parsing app settings\", error);\n      }\n    }\n  }\n  static from(event) {\n    return new _NDKAppSettings(event.ndk, event);\n  }\n  /**\n   * Set a value for a given key.\n   *\n   * @param key\n   * @param value\n   */\n  set(key, value) {\n    this.settings[key] = value;\n  }\n  /**\n   * Get a value for a given key.\n   *\n   * @param key\n   * @returns\n   */\n  get(key) {\n    return this.settings[key];\n  }\n  async publishReplaceable(relaySet, timeoutMs, requiredRelayCount) {\n    this.content = JSON.stringify(this.settings);\n    return super.publishReplaceable(relaySet, timeoutMs, requiredRelayCount);\n  }\n};\n\n// src/relay/auth-policies.ts\nimport createDebug3 from \"debug\";\nfunction disconnect(pool, debug8) {\n  debug8 ??= createDebug3(\"ndk:relay:auth-policies:disconnect\");\n  return async (relay) => {\n    debug8(`Relay ${relay.url} requested authentication, disconnecting`);\n    pool.removeRelay(relay.url);\n  };\n}\nasync function signAndAuth(event, relay, signer, debug8, resolve, reject) {\n  try {\n    await event.sign(signer);\n    resolve(event);\n  } catch (e) {\n    debug8(`Failed to publish auth event to relay ${relay.url}`, e);\n    reject(event);\n  }\n}\nfunction signIn({ ndk, signer, debug: debug8 } = {}) {\n  debug8 ??= createDebug3(\"ndk:auth-policies:signIn\");\n  return async (relay, challenge) => {\n    debug8(`Relay ${relay.url} requested authentication, signing in`);\n    const event = new NDKEvent(ndk);\n    event.kind = 22242 /* ClientAuth */;\n    event.tags = [\n      [\"relay\", relay.url],\n      [\"challenge\", challenge]\n    ];\n    signer ??= ndk?.signer;\n    return new Promise(async (resolve, reject) => {\n      if (signer) {\n        await signAndAuth(event, relay, signer, debug8, resolve, reject);\n      } else {\n        ndk?.once(\"signer:ready\", async (signer2) => {\n          await signAndAuth(event, relay, signer2, debug8, resolve, reject);\n        });\n      }\n    });\n  };\n}\nvar NDKRelayAuthPolicies = {\n  disconnect,\n  signIn\n};\n\n// src/signers/nip07/index.ts\nimport debug5 from \"debug\";\nvar NDKNip07Signer = class {\n  _userPromise;\n  nip04Queue = [];\n  nip04Processing = false;\n  debug;\n  waitTimeout;\n  /**\n   * @param waitTimeout - The timeout in milliseconds to wait for the NIP-07 to become available\n   */\n  constructor(waitTimeout = 1e3) {\n    this.debug = debug5(\"ndk:nip07\");\n    this.waitTimeout = waitTimeout;\n  }\n  async blockUntilReady() {\n    await this.waitForExtension();\n    const pubkey = await window.nostr.getPublicKey();\n    if (!pubkey) {\n      throw new Error(\"User rejected access\");\n    }\n    return new NDKUser({ pubkey });\n  }\n  /**\n   * Getter for the user property.\n   * @returns The NDKUser instance.\n   */\n  async user() {\n    if (!this._userPromise) {\n      this._userPromise = this.blockUntilReady();\n    }\n    return this._userPromise;\n  }\n  /**\n   * Signs the given Nostr event.\n   * @param event - The Nostr event to be signed.\n   * @returns The signature of the signed event.\n   * @throws Error if the NIP-07 is not available on the window object.\n   */\n  async sign(event) {\n    await this.waitForExtension();\n    const signedEvent = await window.nostr.signEvent(event);\n    return signedEvent.sig;\n  }\n  async relays(ndk) {\n    await this.waitForExtension();\n    const relays = await window.nostr.getRelays?.() || {};\n    const activeRelays = [];\n    for (const url of Object.keys(relays)) {\n      if (relays[url].read && relays[url].write) {\n        activeRelays.push(url);\n      }\n    }\n    return activeRelays.map((url) => new NDKRelay(url, ndk?.relayAuthDefaultPolicy, ndk));\n  }\n  async encrypt(recipient, value, type = DEFAULT_ENCRYPTION_SCHEME) {\n    if (type === \"nip44\") {\n      return this.nip44Encrypt(recipient, value);\n    } else {\n      return this.nip04Encrypt(recipient, value);\n    }\n  }\n  async decrypt(sender, value, type = DEFAULT_ENCRYPTION_SCHEME) {\n    if (type === \"nip44\") {\n      return this.nip44Decrypt(sender, value);\n    } else {\n      return this.nip04Decrypt(sender, value);\n    }\n  }\n  async nip44Encrypt(recipient, value) {\n    await this.waitForExtension();\n    return await this.nip44.encrypt(recipient.pubkey, value);\n  }\n  get nip44() {\n    if (!window.nostr?.nip44) {\n      throw new Error(\"NIP-44 not supported by your browser extension\");\n    }\n    return window.nostr.nip44;\n  }\n  async nip44Decrypt(sender, value) {\n    await this.waitForExtension();\n    return await this.nip44.decrypt(sender.pubkey, value);\n  }\n  async nip04Encrypt(recipient, value) {\n    await this.waitForExtension();\n    const recipientHexPubKey = recipient.pubkey;\n    return this.queueNip04(\"encrypt\", recipientHexPubKey, value);\n  }\n  async nip04Decrypt(sender, value) {\n    await this.waitForExtension();\n    const senderHexPubKey = sender.pubkey;\n    return this.queueNip04(\"decrypt\", senderHexPubKey, value);\n  }\n  async queueNip04(type, counterpartyHexpubkey, value) {\n    return new Promise((resolve, reject) => {\n      this.nip04Queue.push({\n        type,\n        counterpartyHexpubkey,\n        value,\n        resolve,\n        reject\n      });\n      if (!this.nip04Processing) {\n        this.processNip04Queue();\n      }\n    });\n  }\n  async processNip04Queue(item, retries = 0) {\n    if (!item && this.nip04Queue.length === 0) {\n      this.nip04Processing = false;\n      return;\n    }\n    this.nip04Processing = true;\n    const { type, counterpartyHexpubkey, value, resolve, reject } = item || this.nip04Queue.shift();\n    try {\n      let result;\n      if (type === \"encrypt\") {\n        result = await window.nostr.nip04.encrypt(counterpartyHexpubkey, value);\n      } else {\n        result = await window.nostr.nip04.decrypt(counterpartyHexpubkey, value);\n      }\n      resolve(result);\n    } catch (error) {\n      if (error.message && error.message.includes(\"call already executing\")) {\n        if (retries < 5) {\n          this.debug(\"Retrying encryption queue item\", {\n            type,\n            counterpartyHexpubkey,\n            value,\n            retries\n          });\n          setTimeout(() => {\n            this.processNip04Queue(item, retries + 1);\n          }, 50 * retries);\n          return;\n        }\n      }\n      reject(error);\n    }\n    this.processNip04Queue();\n  }\n  waitForExtension() {\n    return new Promise((resolve, reject) => {\n      if (window.nostr) {\n        resolve();\n        return;\n      }\n      let timerId;\n      const intervalId = setInterval(() => {\n        if (window.nostr) {\n          clearTimeout(timerId);\n          clearInterval(intervalId);\n          resolve();\n        }\n      }, 100);\n      timerId = setTimeout(() => {\n        clearInterval(intervalId);\n        reject(new Error(\"NIP-07 extension not available\"));\n      }, this.waitTimeout);\n    });\n  }\n};\n\n// src/signers/private-key/index.ts\nimport { generateSecretKey, getPublicKey, finalizeEvent, nip04, nip44 } from \"nostr-tools\";\nimport { bytesToHex as bytesToHex2, hexToBytes } from \"@noble/hashes/utils\";\nimport { nip19 as nip196 } from \"nostr-tools\";\nvar NDKPrivateKeySigner = class _NDKPrivateKeySigner {\n  _user;\n  _privateKey;\n  constructor(privateKey) {\n    if (privateKey) {\n      if (typeof privateKey === \"string\") {\n        if (privateKey.startsWith(\"nsec1\")) {\n          const { type, data } = nip196.decode(privateKey);\n          if (type === \"nsec\") this._privateKey = data;\n        } else if (privateKey.length === 64) {\n          this._privateKey = hexToBytes(privateKey);\n        } else {\n          throw new Error(\"Invalid private key provided.\");\n        }\n      } else {\n        this._privateKey = privateKey;\n      }\n      if (this._privateKey) {\n        this._user = new NDKUser({\n          pubkey: getPublicKey(this._privateKey)\n        });\n      }\n    }\n  }\n  get privateKey() {\n    if (!this._privateKey) return void 0;\n    return bytesToHex2(this._privateKey);\n  }\n  static generate() {\n    const privateKey = generateSecretKey();\n    return new _NDKPrivateKeySigner(privateKey);\n  }\n  async blockUntilReady() {\n    if (!this._user) {\n      throw new Error(\"NDKUser not initialized\");\n    }\n    return this._user;\n  }\n  async user() {\n    await this.blockUntilReady();\n    return this._user;\n  }\n  async sign(event) {\n    if (!this._privateKey) {\n      throw Error(\"Attempted to sign without a private key\");\n    }\n    return finalizeEvent(event, this._privateKey).sig;\n  }\n  getConversationKey(recipient) {\n    if (!this._privateKey) {\n      throw Error(\"Attempted to get conversation key without a private key\");\n    }\n    const recipientHexPubKey = recipient.pubkey;\n    return nip44.getConversationKey(this._privateKey, recipientHexPubKey);\n  }\n  async nip44Encrypt(recipient, value) {\n    const conversationKey = this.getConversationKey(recipient);\n    return await nip44.encrypt(value, conversationKey);\n  }\n  async nip44Decrypt(sender, value) {\n    const conversationKey = this.getConversationKey(sender);\n    return await nip44.decrypt(value, conversationKey);\n  }\n  /**\n   * This method is deprecated and will be removed in a future release, for compatibility\n   * this function calls nip04Encrypt.\n   */\n  async encrypt(recipient, value, type = DEFAULT_ENCRYPTION_SCHEME) {\n    if (type === \"nip44\") {\n      return this.nip44Encrypt(recipient, value);\n    } else {\n      return this.nip04Encrypt(recipient, value);\n    }\n  }\n  /**\n   * This method is deprecated and will be removed in a future release, for compatibility\n   * this function calls nip04Decrypt.\n   */\n  async decrypt(sender, value, type = DEFAULT_ENCRYPTION_SCHEME) {\n    if (type === \"nip44\") {\n      return this.nip44Decrypt(sender, value);\n    } else {\n      return this.nip04Decrypt(sender, value);\n    }\n  }\n  async nip04Encrypt(recipient, value) {\n    if (!this._privateKey) {\n      throw Error(\"Attempted to encrypt without a private key\");\n    }\n    const recipientHexPubKey = recipient.pubkey;\n    return await nip04.encrypt(this._privateKey, recipientHexPubKey, value);\n  }\n  async nip04Decrypt(sender, value) {\n    if (!this._privateKey) {\n      throw Error(\"Attempted to decrypt without a private key\");\n    }\n    const senderHexPubKey = sender.pubkey;\n    return await nip04.decrypt(this._privateKey, senderHexPubKey, value);\n  }\n};\n\n// src/signers/nip46/rpc.ts\nimport { EventEmitter as EventEmitter5 } from \"tseep\";\nvar NDKNostrRpc = class extends EventEmitter5 {\n  ndk;\n  signer;\n  relaySet;\n  debug;\n  encryptionType = \"nip04\";\n  pool;\n  constructor(ndk, signer, debug8, relayUrls) {\n    super();\n    this.ndk = ndk;\n    this.signer = signer;\n    if (relayUrls) {\n      this.pool = new NDKPool(\n        relayUrls,\n        Array.from(ndk.pool.blacklistRelayUrls),\n        ndk,\n        debug8.extend(\"rpc-pool\")\n      );\n      this.pool.name = \"nostr-rpc\";\n      this.relaySet = new NDKRelaySet(/* @__PURE__ */ new Set(), ndk, this.pool);\n      for (const url of relayUrls) {\n        const relay = this.pool.getRelay(url, false, false);\n        relay.authPolicy = NDKRelayAuthPolicies.signIn({ ndk, signer, debug: debug8 });\n        this.relaySet.addRelay(relay);\n        relay.connect();\n      }\n    }\n    this.debug = debug8.extend(\"rpc\");\n  }\n  /**\n   * Subscribe to a filter. This function will resolve once the subscription is ready.\n   */\n  subscribe(filter) {\n    const sub = this.ndk.subscribe(\n      filter,\n      {\n        closeOnEose: false,\n        groupable: false,\n        cacheUsage: \"ONLY_RELAY\" /* ONLY_RELAY */,\n        pool: this.pool\n      },\n      this.relaySet,\n      false\n    );\n    sub.on(\"event\", async (event) => {\n      try {\n        const parsedEvent = await this.parseEvent(event);\n        if (parsedEvent.method) {\n          this.emit(\"request\", parsedEvent);\n        } else {\n          this.emit(`response-${parsedEvent.id}`, parsedEvent);\n        }\n      } catch (e) {\n        this.debug(\"error parsing event\", e, event.rawEvent());\n      }\n    });\n    return new Promise((resolve) => {\n      sub.on(\"eose\", () => {\n        this.debug(\"eosed\");\n        resolve(sub);\n      });\n      sub.start();\n    });\n  }\n  async parseEvent(event) {\n    if (this.encryptionType === \"nip44\" && event.content.includes(\"?iv=\")) {\n      this.encryptionType = \"nip04\";\n    } else if (this.encryptionType === \"nip04\" && !event.content.includes(\"?iv=\")) {\n      this.encryptionType = \"nip44\";\n    }\n    const remoteUser = this.ndk.getUser({ pubkey: event.pubkey });\n    remoteUser.ndk = this.ndk;\n    let decryptedContent;\n    try {\n      decryptedContent = await this.signer.decrypt(\n        remoteUser,\n        event.content,\n        this.encryptionType\n      );\n    } catch (e) {\n      const otherEncryptionType = this.encryptionType === \"nip04\" ? \"nip44\" : \"nip04\";\n      decryptedContent = await this.signer.decrypt(remoteUser, event.content, otherEncryptionType);\n      this.encryptionType = otherEncryptionType;\n    }\n    const parsedContent = JSON.parse(decryptedContent);\n    const { id, method, params, result, error } = parsedContent;\n    if (method) {\n      return { id, pubkey: event.pubkey, method, params, event };\n    } else {\n      return { id, result, error, event };\n    }\n  }\n  async sendResponse(id, remotePubkey, result, kind = 24133 /* NostrConnect */, error) {\n    const res = { id, result };\n    if (error) {\n      res.error = error;\n    }\n    const localUser = await this.signer.user();\n    const remoteUser = this.ndk.getUser({ pubkey: remotePubkey });\n    const event = new NDKEvent(this.ndk, {\n      kind,\n      content: JSON.stringify(res),\n      tags: [[\"p\", remotePubkey]],\n      pubkey: localUser.pubkey\n    });\n    event.content = await this.signer.encrypt(remoteUser, event.content, this.encryptionType);\n    await event.sign(this.signer);\n    await event.publish(this.relaySet);\n  }\n  /**\n   * Sends a request.\n   * @param remotePubkey\n   * @param method\n   * @param params\n   * @param kind\n   * @param id\n   */\n  async sendRequest(remotePubkey, method, params = [], kind = 24133, cb) {\n    const id = Math.random().toString(36).substring(7);\n    const localUser = await this.signer.user();\n    const remoteUser = this.ndk.getUser({ pubkey: remotePubkey });\n    const request = { id, method, params };\n    const promise = new Promise(() => {\n      const responseHandler = (response) => {\n        if (response.result === \"auth_url\") {\n          this.once(`response-${id}`, responseHandler);\n          this.emit(\"authUrl\", response.error);\n        } else if (cb) {\n          cb(response);\n        }\n      };\n      this.once(`response-${id}`, responseHandler);\n    });\n    const event = new NDKEvent(this.ndk, {\n      kind,\n      content: JSON.stringify(request),\n      tags: [[\"p\", remotePubkey]],\n      pubkey: localUser.pubkey\n    });\n    event.content = await this.signer.encrypt(remoteUser, event.content, this.encryptionType);\n    await event.sign(this.signer);\n    await event.publish(this.relaySet);\n    return promise;\n  }\n};\n\n// src/signers/nip46/backend/ping.ts\nvar PingEventHandlingStrategy = class {\n  async handle(backend, id, remotePubkey, params) {\n    const debug8 = backend.debug.extend(\"ping\");\n    debug8(`ping request from ${remotePubkey}`);\n    if (await backend.pubkeyAllowed({ id, pubkey: remotePubkey, method: \"ping\" })) {\n      debug8(`connection request from ${remotePubkey} allowed`);\n      return \"pong\";\n    } else {\n      debug8(`connection request from ${remotePubkey} rejected`);\n    }\n    return void 0;\n  }\n};\n\n// src/signers/nip46/backend/connect.ts\nvar ConnectEventHandlingStrategy = class {\n  async handle(backend, id, remotePubkey, params) {\n    const [_, token] = params;\n    const debug8 = backend.debug.extend(\"connect\");\n    debug8(`connection request from ${remotePubkey}`);\n    if (token && backend.applyToken) {\n      debug8(`applying token`);\n      await backend.applyToken(remotePubkey, token);\n    }\n    if (await backend.pubkeyAllowed({\n      id,\n      pubkey: remotePubkey,\n      method: \"connect\",\n      params: token\n    })) {\n      debug8(`connection request from ${remotePubkey} allowed`);\n      return \"ack\";\n    } else {\n      debug8(`connection request from ${remotePubkey} rejected`);\n    }\n    return void 0;\n  }\n};\n\n// src/signers/nip46/backend/get-public-key.ts\nvar GetPublicKeyHandlingStrategy = class {\n  async handle(backend, id, remotePubkey, params) {\n    return backend.localUser?.pubkey;\n  }\n};\n\n// src/signers/nip46/backend/nip04-decrypt.ts\nvar Nip04DecryptHandlingStrategy = class {\n  async handle(backend, id, remotePubkey, params) {\n    const [senderPubkey, payload] = params;\n    const senderUser = new NDKUser({ pubkey: senderPubkey });\n    const decryptedPayload = await decrypt2(backend, id, remotePubkey, senderUser, payload);\n    return decryptedPayload;\n  }\n};\nasync function decrypt2(backend, id, remotePubkey, senderUser, payload) {\n  if (!await backend.pubkeyAllowed({\n    id,\n    pubkey: remotePubkey,\n    method: \"nip04_decrypt\",\n    params: payload\n  })) {\n    backend.debug(`decrypt request from ${remotePubkey} rejected`);\n    return void 0;\n  }\n  return await backend.signer.decrypt(senderUser, payload, \"nip04\");\n}\n\n// src/signers/nip46/backend/nip04-encrypt.ts\nvar Nip04EncryptHandlingStrategy = class {\n  async handle(backend, id, remotePubkey, params) {\n    const [recipientPubkey, payload] = params;\n    const recipientUser = new NDKUser({ pubkey: recipientPubkey });\n    const encryptedPayload = await encrypt2(backend, id, remotePubkey, recipientUser, payload);\n    return encryptedPayload;\n  }\n};\nasync function encrypt2(backend, id, remotePubkey, recipientUser, payload) {\n  if (!await backend.pubkeyAllowed({\n    id,\n    pubkey: remotePubkey,\n    method: \"nip04_encrypt\",\n    params: payload\n  })) {\n    backend.debug(`encrypt request from ${remotePubkey} rejected`);\n    return void 0;\n  }\n  return await backend.signer.encrypt(recipientUser, payload, \"nip04\");\n}\n\n// src/signers/nip46/backend/sign-event.ts\nvar SignEventHandlingStrategy = class {\n  async handle(backend, id, remotePubkey, params) {\n    const event = await signEvent(backend, id, remotePubkey, params);\n    if (!event) return void 0;\n    return JSON.stringify(await event.toNostrEvent());\n  }\n};\nasync function signEvent(backend, id, remotePubkey, params) {\n  const [eventString] = params;\n  backend.debug(`sign event request from ${remotePubkey}`);\n  const event = new NDKEvent(backend.ndk, JSON.parse(eventString));\n  backend.debug(\"event to sign\", event.rawEvent());\n  if (!await backend.pubkeyAllowed({\n    id,\n    pubkey: remotePubkey,\n    method: \"sign_event\",\n    params: event\n  })) {\n    backend.debug(`sign event request from ${remotePubkey} rejected`);\n    return void 0;\n  }\n  backend.debug(`sign event request from ${remotePubkey} allowed`);\n  await event.sign(backend.signer);\n  return event;\n}\n\n// src/signers/nip46/backend/nip44-encrypt.ts\nvar Nip04EncryptHandlingStrategy2 = class {\n  async handle(backend, id, remotePubkey, params) {\n    const [recipientPubkey, payload] = params;\n    const recipientUser = new NDKUser({ pubkey: recipientPubkey });\n    const encryptedPayload = await encrypt3(backend, id, remotePubkey, recipientUser, payload);\n    return encryptedPayload;\n  }\n};\nasync function encrypt3(backend, id, remotePubkey, recipientUser, payload) {\n  if (!await backend.pubkeyAllowed({\n    id,\n    pubkey: remotePubkey,\n    method: \"nip44_encrypt\",\n    params: payload\n  })) {\n    backend.debug(`encrypt request from ${remotePubkey} rejected`);\n    return void 0;\n  }\n  return await backend.signer.encrypt(recipientUser, payload, \"nip44\");\n}\n\n// src/signers/nip46/backend/nip44-decrypt.ts\nvar Nip04DecryptHandlingStrategy2 = class {\n  async handle(backend, id, remotePubkey, params) {\n    const [senderPubkey, payload] = params;\n    const senderUser = new NDKUser({ pubkey: senderPubkey });\n    const decryptedPayload = await decrypt3(backend, id, remotePubkey, senderUser, payload);\n    return decryptedPayload;\n  }\n};\nasync function decrypt3(backend, id, remotePubkey, senderUser, payload) {\n  if (!await backend.pubkeyAllowed({\n    id,\n    pubkey: remotePubkey,\n    method: \"nip44_decrypt\",\n    params: payload\n  })) {\n    backend.debug(`decrypt request from ${remotePubkey} rejected`);\n    return void 0;\n  }\n  return await backend.signer.decrypt(senderUser, payload, \"nip44\");\n}\n\n// src/signers/nip46/backend/index.ts\nimport { hexToBytes as hexToBytes2 } from \"@noble/hashes/utils\";\nvar NDKNip46Backend = class {\n  ndk;\n  signer;\n  localUser;\n  debug;\n  rpc;\n  permitCallback;\n  relayUrls;\n  /**\n   * @param ndk The NDK instance to use\n   * @param privateKeyOrSigner The private key or signer of the npub that wants to be published as\n   * @param permitCallback Callback executed when permission is requested\n   */\n  constructor(ndk, privateKeyOrSigner, permitCallback, relayUrls) {\n    this.ndk = ndk;\n    if (privateKeyOrSigner instanceof Uint8Array) {\n      this.signer = new NDKPrivateKeySigner(privateKeyOrSigner);\n    } else if (privateKeyOrSigner instanceof String) {\n      this.signer = new NDKPrivateKeySigner(hexToBytes2(privateKeyOrSigner));\n    } else if (privateKeyOrSigner instanceof NDKPrivateKeySigner) {\n      this.signer = privateKeyOrSigner;\n    } else {\n      throw new Error(\"Invalid signer\");\n    }\n    this.debug = ndk.debug.extend(\"nip46:backend\");\n    this.relayUrls = relayUrls ?? Array.from(ndk.pool.relays.keys());\n    this.rpc = new NDKNostrRpc(ndk, this.signer, this.debug, this.relayUrls);\n    this.permitCallback = permitCallback;\n  }\n  /**\n   * This method starts the backend, which will start listening for incoming\n   * requests.\n   */\n  async start() {\n    this.localUser = await this.signer.user();\n    const sub = this.ndk.subscribe(\n      {\n        kinds: [24133],\n        \"#p\": [this.localUser.pubkey]\n      },\n      { closeOnEose: false }\n    );\n    sub.on(\"event\", (e) => this.handleIncomingEvent(e));\n  }\n  handlers = {\n    connect: new ConnectEventHandlingStrategy(),\n    sign_event: new SignEventHandlingStrategy(),\n    nip04_encrypt: new Nip04EncryptHandlingStrategy(),\n    nip04_decrypt: new Nip04DecryptHandlingStrategy(),\n    nip44_encrypt: new Nip04EncryptHandlingStrategy2(),\n    nip44_decrypt: new Nip04DecryptHandlingStrategy2(),\n    get_public_key: new GetPublicKeyHandlingStrategy(),\n    ping: new PingEventHandlingStrategy()\n  };\n  /**\n   * Enables the user to set a custom strategy for handling incoming events.\n   * @param method - The method to set the strategy for\n   * @param strategy - The strategy to set\n   */\n  setStrategy(method, strategy) {\n    this.handlers[method] = strategy;\n  }\n  /**\n   * Overload this method to apply tokens, which can\n   * wrap permission sets to be applied to a pubkey.\n   * @param pubkey public key to apply token to\n   * @param token token to apply\n   */\n  async applyToken(pubkey, token) {\n    throw new Error(\"connection token not supported\");\n  }\n  async handleIncomingEvent(event) {\n    const { id, method, params } = await this.rpc.parseEvent(event);\n    const remotePubkey = event.pubkey;\n    let response;\n    this.debug(\"incoming event\", { id, method, params });\n    if (!event.verifySignature(false)) {\n      this.debug(\"invalid signature\", event.rawEvent());\n      return;\n    }\n    const strategy = this.handlers[method];\n    if (strategy) {\n      try {\n        response = await strategy.handle(this, id, remotePubkey, params);\n      } catch (e) {\n        this.debug(\"error handling event\", e, { id, method, params });\n        this.rpc.sendResponse(id, remotePubkey, \"error\", void 0, e.message);\n      }\n    } else {\n      this.debug(\"unsupported method\", { method, params });\n    }\n    if (response) {\n      this.debug(`sending response to ${remotePubkey}`, response);\n      this.rpc.sendResponse(id, remotePubkey, response);\n    } else {\n      this.rpc.sendResponse(id, remotePubkey, \"error\", void 0, \"Not authorized\");\n    }\n  }\n  /**\n   * This method should be overriden by the user to allow or reject incoming\n   * connections.\n   */\n  async pubkeyAllowed(params) {\n    return this.permitCallback(params);\n  }\n};\n\n// src/signers/nip46/index.ts\nimport { EventEmitter as EventEmitter6 } from \"tseep\";\nvar NDKNip46Signer = class extends EventEmitter6 {\n  ndk;\n  _user;\n  /**\n   * The pubkey of the bunker that will be providing signatures\n   */\n  bunkerPubkey;\n  /**\n   * The pubkey of the user that events will be published as\n   */\n  userPubkey;\n  /**\n   * An optional secret value provided to connect to the bunker\n   */\n  secret;\n  localSigner;\n  nip05;\n  rpc;\n  debug;\n  relayUrls;\n  subscription;\n  /**\n   * @param ndk - The NDK instance to use\n   * @param userOrConnectionToken - The public key, or a connection token, of the npub that wants to be published as\n   * @param localSigner - The signer that will be used to request events to be signed\n   */\n  constructor(ndk, userOrConnectionToken, localSigner) {\n    super();\n    this.ndk = ndk;\n    this.debug = ndk.debug.extend(\"nip46:signer\");\n    if (userOrConnectionToken.startsWith(\"bunker://\")) {\n      this.connectionTokenInit(userOrConnectionToken);\n    } else {\n      this.nip05Init(userOrConnectionToken);\n    }\n    if (!localSigner) {\n      this.localSigner = NDKPrivateKeySigner.generate();\n    } else {\n      this.localSigner = localSigner;\n    }\n    this.rpc = new NDKNostrRpc(this.ndk, this.localSigner, this.debug, this.relayUrls);\n  }\n  connectionTokenInit(connectionToken) {\n    const bunkerUrl = new URL(connectionToken);\n    const bunkerPubkey = bunkerUrl.hostname || bunkerUrl.pathname.replace(/^\\/\\//, \"\");\n    const userPubkey = bunkerUrl.searchParams.get(\"pubkey\");\n    const relayUrls = bunkerUrl.searchParams.getAll(\"relay\");\n    const secret = bunkerUrl.searchParams.get(\"secret\");\n    this.bunkerPubkey = bunkerPubkey;\n    this.userPubkey = userPubkey;\n    this.relayUrls = relayUrls;\n    this.secret = secret;\n  }\n  nip05Init(nip05) {\n    this.nip05 = nip05;\n  }\n  /**\n   * @deprecated Use userPubkey instead\n   */\n  get remotePubkey() {\n    return this.userPubkey;\n  }\n  /**\n   * We start listening for events from the bunker\n   */\n  async startListening() {\n    if (this.subscription) return;\n    const localUser = await this.localSigner.user();\n    if (!localUser) throw new Error(\"Local signer not ready\");\n    this.subscription = await this.rpc.subscribe({\n      kinds: [24133 /* NostrConnect */],\n      \"#p\": [localUser.pubkey]\n    });\n  }\n  /**\n   * Get the user that is being published as\n   */\n  async user() {\n    if (!this._user && !this.userPubkey) throw new Error(\"Remote user not ready\");\n    this._user ??= new NDKUser({ pubkey: this.userPubkey });\n    return this._user;\n  }\n  async blockUntilReady() {\n    if (this.nip05 && !this.userPubkey) {\n      const user = await NDKUser.fromNip05(this.nip05, this.ndk);\n      if (user) {\n        this._user = user;\n        this.userPubkey = user.pubkey;\n        this.relayUrls = user.nip46Urls;\n        this.rpc = new NDKNostrRpc(this.ndk, this.localSigner, this.debug, this.relayUrls);\n      }\n    }\n    if (!this.bunkerPubkey && this.userPubkey) {\n      this.bunkerPubkey = this.userPubkey;\n    } else if (!this.bunkerPubkey) {\n      throw new Error(\"Bunker pubkey not set\");\n    }\n    await this.startListening();\n    this.rpc.on(\"authUrl\", (...props) => {\n      this.emit(\"authUrl\", ...props);\n    });\n    return new Promise((resolve, reject) => {\n      const connectParams = [this.userPubkey ?? \"\"];\n      if (this.secret) connectParams.push(this.secret);\n      if (!this.bunkerPubkey) throw new Error(\"Bunker pubkey not set\");\n      this.rpc.sendRequest(\n        this.bunkerPubkey,\n        \"connect\",\n        connectParams,\n        24133,\n        (response) => {\n          if (response.result === \"ack\") {\n            this.getPublicKey().then((pubkey) => {\n              this.userPubkey = pubkey;\n              this._user = new NDKUser({ pubkey });\n              resolve(this._user);\n            });\n          } else {\n            reject(response.error);\n          }\n        }\n      );\n    });\n  }\n  async getPublicKey() {\n    if (this.userPubkey) return this.userPubkey;\n    return new Promise((resolve, reject) => {\n      if (!this.bunkerPubkey) throw new Error(\"Bunker pubkey not set\");\n      this.rpc.sendRequest(\n        this.bunkerPubkey,\n        \"get_public_key\",\n        [],\n        24133,\n        (response) => {\n          resolve(response.result);\n        }\n      );\n    });\n  }\n  async encrypt(recipient, value) {\n    return this.nip04Encrypt(recipient, value);\n  }\n  async decrypt(sender, value) {\n    return this.nip04Decrypt(sender, value);\n  }\n  async nip04Encrypt(recipient, value) {\n    return this._encrypt(recipient, value, \"nip04\");\n  }\n  async nip04Decrypt(sender, value) {\n    return this._decrypt(sender, value, \"nip04\");\n  }\n  async nip44Encrypt(recipient, value) {\n    return this._encrypt(recipient, value, \"nip44\");\n  }\n  async nip44Decrypt(sender, value) {\n    return this._decrypt(sender, value, \"nip44\");\n  }\n  async _encrypt(recipient, value, method) {\n    const promise = new Promise((resolve, reject) => {\n      if (!this.bunkerPubkey) throw new Error(\"Bunker pubkey not set\");\n      this.rpc.sendRequest(\n        this.bunkerPubkey,\n        method + \"_encrypt\",\n        [recipient.pubkey, value],\n        24133,\n        (response) => {\n          if (!response.error) {\n            resolve(response.result);\n          } else {\n            reject(response.error);\n          }\n        }\n      );\n    });\n    return promise;\n  }\n  async _decrypt(sender, value, method) {\n    const promise = new Promise((resolve, reject) => {\n      if (!this.bunkerPubkey) throw new Error(\"Bunker pubkey not set\");\n      this.rpc.sendRequest(\n        this.bunkerPubkey,\n        method + \"_decrypt\",\n        [sender.pubkey, value],\n        24133,\n        (response) => {\n          if (!response.error) {\n            resolve(response.result);\n          } else {\n            reject(response.error);\n          }\n        }\n      );\n    });\n    return promise;\n  }\n  async sign(event) {\n    const promise = new Promise((resolve, reject) => {\n      if (!this.bunkerPubkey) throw new Error(\"Bunker pubkey not set\");\n      this.rpc.sendRequest(\n        this.bunkerPubkey,\n        \"sign_event\",\n        [JSON.stringify(event)],\n        24133,\n        (response) => {\n          if (!response.error) {\n            const json = JSON.parse(response.result);\n            resolve(json.sig);\n          } else {\n            reject(response.error);\n          }\n        }\n      );\n    });\n    return promise;\n  }\n  /**\n   * Allows creating a new account on the remote server.\n   * @param username Desired username for the NIP-05\n   * @param domain Desired domain for the NIP-05\n   * @param email Email address to associate with this account -- Remote servers may use this for recovery\n   * @returns The public key of the newly created account\n   */\n  async createAccount(username, domain, email) {\n    await this.startListening();\n    const req = [];\n    if (username) req.push(username);\n    if (domain) req.push(domain);\n    if (email) req.push(email);\n    return new Promise((resolve, reject) => {\n      if (!this.bunkerPubkey) throw new Error(\"Bunker pubkey not set\");\n      this.rpc.sendRequest(\n        this.bunkerPubkey,\n        \"create_account\",\n        req,\n        24133 /* NostrConnect */,\n        (response) => {\n          if (!response.error) {\n            const pubkey = response.result;\n            resolve(pubkey);\n          } else {\n            reject(response.error);\n          }\n        }\n      );\n    });\n  }\n};\n\n// src/dvm/schedule.ts\nfunction addRelays(event, relays) {\n  const tags = [];\n  if (!relays || relays.length === 0) {\n    const poolRelays = event.ndk?.pool.relays;\n    relays = poolRelays ? Object.keys(poolRelays) : void 0;\n  }\n  if (relays && relays.length > 0) tags.push([\"relays\", ...relays]);\n  return tags;\n}\nasync function dvmSchedule(events, dvm, relays, encrypted = true, waitForConfirmationForMs) {\n  if (!(events instanceof Array)) {\n    events = [events];\n  }\n  const ndk = events[0].ndk;\n  if (!ndk) throw new Error(\"NDK not set\");\n  for (const event of events) {\n    if (!event.sig) throw new Error(\"Event not signed\");\n    if (!event.created_at) throw new Error(\"Event has no date\");\n    if (!dvm) throw new Error(\"No DVM specified\");\n    if (event.created_at <= Date.now() / 1e3)\n      throw new Error(\"Event needs to be in the future\");\n  }\n  const scheduleEvent = new NDKDVMRequest(ndk, {\n    kind: 5905 /* DVMEventSchedule */\n  });\n  for (const event of events) {\n    scheduleEvent.addInput(JSON.stringify(event.rawEvent()), \"text\");\n  }\n  scheduleEvent.tags.push(...addRelays(events[0], relays));\n  if (encrypted) {\n    await scheduleEvent.encryption(dvm);\n  } else {\n    scheduleEvent.dvm = dvm;\n  }\n  await scheduleEvent.sign();\n  let res;\n  if (waitForConfirmationForMs) {\n    res = ndk.subscribe(\n      {\n        kinds: [5905 /* DVMEventSchedule */ + 1e3, 7e3 /* DVMJobFeedback */],\n        ...scheduleEvent.filter()\n      },\n      { groupable: false, closeOnEose: false }\n    );\n  }\n  const timeoutPromise = new Promise((reject) => {\n    setTimeout(() => {\n      res?.stop();\n      reject(\"Timeout waiting for an answer from the DVM\");\n    }, waitForConfirmationForMs);\n  });\n  const schedulePromise = new Promise(\n    (resolve, reject) => {\n      if (waitForConfirmationForMs) {\n        res?.on(\"event\", async (e) => {\n          res?.stop();\n          if (e.kind === 7e3 /* DVMJobFeedback */) {\n            const feedback = await NDKDVMJobFeedback.from(e);\n            if (feedback.status === \"error\") {\n              const statusTag = feedback.getMatchingTags(\"status\");\n              reject(statusTag?.[2] ?? feedback);\n            } else {\n              resolve(feedback);\n            }\n          }\n          resolve(e);\n        });\n      }\n      scheduleEvent.publish().then(() => {\n        if (!waitForConfirmationForMs) resolve();\n      });\n    }\n  );\n  return new Promise((resolve, reject) => {\n    if (waitForConfirmationForMs) {\n      Promise.race([timeoutPromise, schedulePromise]).then((e) => {\n        resolve(e);\n      }).catch(reject);\n    } else {\n      schedulePromise.then(resolve);\n    }\n  });\n}\n\n// src/ndk/index.ts\nimport debug7 from \"debug\";\nimport { EventEmitter as EventEmitter8 } from \"tseep\";\n\n// src/events/dedup.ts\nfunction dedup(event1, event2) {\n  if (event1.created_at > event2.created_at) {\n    return event1;\n  }\n  return event2;\n}\n\n// src/outbox/tracker.ts\nimport { EventEmitter as EventEmitter7 } from \"tseep\";\nimport { LRUCache as LRUCache2 } from \"typescript-lru-cache\";\n\n// src/utils/get-users-relay-list.ts\nasync function getRelayListForUser(pubkey, ndk) {\n  const list = await getRelayListForUsers([pubkey], ndk);\n  return list.get(pubkey);\n}\nasync function getRelayListForUsers(pubkeys, ndk, skipCache = false) {\n  const pool = ndk.outboxPool || ndk.pool;\n  const set = /* @__PURE__ */ new Set();\n  for (const relay of pool.relays.values()) set.add(relay);\n  const relayLists = /* @__PURE__ */ new Map();\n  const fromContactList = /* @__PURE__ */ new Map();\n  const relaySet = new NDKRelaySet(set, ndk);\n  if (ndk.cacheAdapter?.locking && !skipCache) {\n    const cachedList = await ndk.fetchEvents(\n      { kinds: [3, 10002], authors: pubkeys },\n      { cacheUsage: \"ONLY_CACHE\" /* ONLY_CACHE */ }\n    );\n    for (const relayList of cachedList) {\n      if (relayList.kind === 10002)\n        relayLists.set(relayList.pubkey, NDKRelayList.from(relayList));\n    }\n    for (const relayList of cachedList) {\n      if (relayList.kind === 3) {\n        if (relayLists.has(relayList.pubkey)) continue;\n        const list = relayListFromKind3(ndk, relayList);\n        if (list) fromContactList.set(relayList.pubkey, list);\n      }\n    }\n    pubkeys = pubkeys.filter(\n      (pubkey) => !relayLists.has(pubkey) && !fromContactList.has(pubkey)\n    );\n  }\n  if (pubkeys.length === 0) return relayLists;\n  const relayListEvents = /* @__PURE__ */ new Map();\n  const contactListEvents = /* @__PURE__ */ new Map();\n  return new Promise(async (resolve) => {\n    const sub = ndk.subscribe(\n      { kinds: [3, 10002], authors: pubkeys },\n      {\n        closeOnEose: true,\n        pool,\n        groupable: true,\n        cacheUsage: \"ONLY_RELAY\" /* ONLY_RELAY */,\n        subId: \"ndk-relay-list-fetch\"\n      },\n      relaySet,\n      false\n    );\n    sub.on(\"event\", (event) => {\n      if (event.kind === 10002 /* RelayList */) {\n        const existingEvent = relayListEvents.get(event.pubkey);\n        if (existingEvent && existingEvent.created_at > event.created_at) return;\n        relayListEvents.set(event.pubkey, event);\n      } else if (event.kind === 3 /* Contacts */) {\n        const existingEvent = contactListEvents.get(event.pubkey);\n        if (existingEvent && existingEvent.created_at > event.created_at) return;\n        contactListEvents.set(event.pubkey, event);\n      }\n    });\n    sub.on(\"eose\", () => {\n      for (const event of relayListEvents.values()) {\n        relayLists.set(event.pubkey, NDKRelayList.from(event));\n      }\n      for (const pubkey of pubkeys) {\n        if (relayLists.has(pubkey)) continue;\n        const contactList = contactListEvents.get(pubkey);\n        if (!contactList) continue;\n        const list = relayListFromKind3(ndk, contactList);\n        if (list) relayLists.set(pubkey, list);\n      }\n      resolve(relayLists);\n    });\n    sub.start();\n  });\n}\n\n// src/outbox/tracker.ts\nvar OutboxItem = class {\n  /**\n   * Type of item\n   */\n  type;\n  /**\n   * The relay URLs that are of interest to this item\n   */\n  relayUrlScores;\n  readRelays;\n  writeRelays;\n  constructor(type) {\n    this.type = type;\n    this.relayUrlScores = /* @__PURE__ */ new Map();\n    this.readRelays = /* @__PURE__ */ new Set();\n    this.writeRelays = /* @__PURE__ */ new Set();\n  }\n};\nvar OutboxTracker = class extends EventEmitter7 {\n  data;\n  ndk;\n  debug;\n  constructor(ndk) {\n    super();\n    this.ndk = ndk;\n    this.debug = ndk.debug.extend(\"outbox-tracker\");\n    this.data = new LRUCache2({\n      maxSize: 1e5,\n      entryExpirationTimeInMS: 2 * 60 * 1e3\n    });\n  }\n  /**\n   * Adds a list of users to the tracker.\n   * @param items\n   * @param skipCache\n   */\n  async trackUsers(items, skipCache = false) {\n    const promises = [];\n    for (let i = 0; i < items.length; i += 400) {\n      const slice = items.slice(i, i + 400);\n      const pubkeys = slice.map((item) => getKeyFromItem(item)).filter((pubkey) => !this.data.has(pubkey));\n      if (pubkeys.length === 0) continue;\n      for (const pubkey of pubkeys) {\n        this.data.set(pubkey, new OutboxItem(\"user\"));\n      }\n      promises.push(\n        new Promise((resolve) => {\n          getRelayListForUsers(pubkeys, this.ndk, skipCache).then((relayLists) => {\n            for (const [pubkey, relayList] of relayLists) {\n              let outboxItem = this.data.get(pubkey);\n              outboxItem ??= new OutboxItem(\"user\");\n              if (relayList) {\n                outboxItem.readRelays = new Set(\n                  normalize(relayList.readRelayUrls)\n                );\n                outboxItem.writeRelays = new Set(\n                  normalize(relayList.writeRelayUrls)\n                );\n                for (const relayUrl of outboxItem.readRelays) {\n                  if (this.ndk.pool.blacklistRelayUrls.has(relayUrl)) {\n                    outboxItem.readRelays.delete(relayUrl);\n                  }\n                }\n                for (const relayUrl of outboxItem.writeRelays) {\n                  if (this.ndk.pool.blacklistRelayUrls.has(relayUrl)) {\n                    outboxItem.writeRelays.delete(relayUrl);\n                  }\n                }\n                this.data.set(pubkey, outboxItem);\n              }\n            }\n          }).finally(resolve);\n        })\n      );\n    }\n    return Promise.all(promises);\n  }\n  /**\n   *\n   * @param key\n   * @param score\n   */\n  track(item, type, skipCache = true) {\n    const key = getKeyFromItem(item);\n    type ??= getTypeFromItem(item);\n    let outboxItem = this.data.get(key);\n    if (!outboxItem) {\n      outboxItem = new OutboxItem(type);\n      if (item instanceof NDKUser) {\n        this.trackUsers([item]);\n      }\n    }\n    return outboxItem;\n  }\n};\nfunction getKeyFromItem(item) {\n  if (item instanceof NDKUser) {\n    return item.pubkey;\n  } else {\n    return item;\n  }\n}\nfunction getTypeFromItem(item) {\n  if (item instanceof NDKUser) {\n    return \"user\";\n  } else {\n    return \"kind\";\n  }\n}\n\n// src/relay/sets/utils.ts\nfunction correctRelaySet(relaySet, pool) {\n  const connectedRelays = pool.connectedRelays();\n  const includesConnectedRelay = Array.from(relaySet.relays).some((relay) => {\n    return connectedRelays.map((r) => r.url).includes(relay.url);\n  });\n  if (!includesConnectedRelay) {\n    for (const relay of connectedRelays) {\n      relaySet.addRelay(relay);\n    }\n  }\n  if (connectedRelays.length === 0) {\n    for (const relay of pool.relays.values()) {\n      relaySet.addRelay(relay);\n    }\n  }\n  return relaySet;\n}\n\n// src/ndk/fetch-event-from-tag.ts\nfunction isValidHint(hint) {\n  if (!hint || hint === \"\") return false;\n  try {\n    new URL(hint);\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nasync function fetchEventFromTag(tag, originalEvent, subOpts, fallback = {\n  type: \"timeout\"\n}) {\n  const d4 = this.debug.extend(\"fetch-event-from-tag\");\n  const [_, id, hint] = tag;\n  subOpts = {};\n  d4(\"fetching event from tag\", tag, subOpts, fallback);\n  const authorRelays = getRelaysForSync(this, originalEvent.pubkey);\n  if (authorRelays && authorRelays.size > 0) {\n    d4(\"fetching event from author relays %o\", Array.from(authorRelays));\n    const relaySet2 = NDKRelaySet.fromRelayUrls(Array.from(authorRelays), this);\n    const event2 = await this.fetchEvent(id, subOpts, relaySet2);\n    if (event2) return event2;\n  } else {\n    d4(\"no author relays found for %s\", originalEvent.pubkey, originalEvent);\n  }\n  const relaySet = calculateRelaySetsFromFilters(this, [{ ids: [id] }], this.pool);\n  d4(\"fetching event without relay hint\", relaySet);\n  const event = await this.fetchEvent(id, subOpts);\n  if (event) return event;\n  if (hint && hint !== \"\") {\n    const event2 = await this.fetchEvent(\n      id,\n      subOpts,\n      this.pool.getRelay(hint, true, true, [{ ids: [id] }])\n    );\n    if (event2) return event2;\n  }\n  let result = void 0;\n  const relay = isValidHint(hint) ? this.pool.getRelay(hint, false, true, [{ ids: [id] }]) : void 0;\n  const fetchMaybeWithRelayHint = new Promise((resolve) => {\n    this.fetchEvent(id, subOpts, relay).then(resolve);\n  });\n  if (!isValidHint(hint) || fallback.type === \"none\") {\n    return fetchMaybeWithRelayHint;\n  }\n  const fallbackFetchPromise = new Promise(async (resolve) => {\n    const fallbackRelaySet = fallback.relaySet;\n    const timeout = fallback.timeout ?? 1500;\n    const timeoutPromise = new Promise((resolve2) => setTimeout(resolve2, timeout));\n    if (fallback.type === \"timeout\") await timeoutPromise;\n    if (result) {\n      resolve(result);\n    } else {\n      d4(\"fallback fetch triggered\");\n      const fallbackEvent = await this.fetchEvent(id, subOpts, fallbackRelaySet);\n      resolve(fallbackEvent);\n    }\n  });\n  switch (fallback.type) {\n    case \"timeout\":\n      return Promise.race([fetchMaybeWithRelayHint, fallbackFetchPromise]);\n    case \"eose\":\n      result = await fetchMaybeWithRelayHint;\n      if (result) return result;\n      return fallbackFetchPromise;\n  }\n}\n\n// src/media/index.ts\nvar SPEC_PATH = \"/.well-known/nostr/nip96.json\";\nvar Nip96 = class {\n  ndk;\n  spec;\n  url;\n  nip98Required = false;\n  /**\n   * @param domain domain of the NIP96 service\n   */\n  constructor(domain, ndk) {\n    this.url = `https://${domain}${SPEC_PATH}`;\n    this.ndk = ndk;\n  }\n  async prepareUpload(blob, httpVerb = \"POST\") {\n    this.validateHttpFetch();\n    if (!this.spec) await this.fetchSpec();\n    if (!this.spec) throw new Error(\"Failed to fetch NIP96 spec\");\n    let headers = {};\n    if (this.nip98Required) {\n      const authorizationHeader = await this.generateNip98Header(\n        this.spec.api_url,\n        httpVerb,\n        blob\n      );\n      headers = { Authorization: authorizationHeader };\n    }\n    return {\n      url: this.spec.api_url,\n      headers\n    };\n  }\n  /**\n   * Provides an XMLHttpRequest-based upload method for browsers.\n   * @example\n   * const xhr = new XMLHttpRequest();\n   * xhr.upload.addEventListener(\"progress\", function(e) {\n   *    const percentComplete = e.loaded / e.total;\n   *    console.log(percentComplete);\n   * });\n   * const nip96 = ndk.getNip96(\"nostrcheck.me\");\n   * const blob = new Blob([\"Hello, world!\"], { type: \"text/plain\" });\n   * const response = await nip96.xhrUpload(xhr, blob);\n   * console.log(response);\n   * @returns Promise that resolves to the upload response\n   */\n  async xhrUpload(xhr, blob) {\n    const httpVerb = \"POST\";\n    const { url, headers } = await this.prepareUpload(blob, httpVerb);\n    xhr.open(httpVerb, url, true);\n    if (headers[\"Authorization\"]) {\n      xhr.setRequestHeader(\"Authorization\", headers[\"Authorization\"]);\n    }\n    const formData = new FormData();\n    formData.append(\"file\", blob);\n    return new Promise((resolve, reject) => {\n      xhr.onload = function() {\n        if (xhr.status >= 200 && xhr.status < 300) {\n          resolve(JSON.parse(xhr.responseText));\n        } else {\n          reject(new Error(xhr.statusText));\n        }\n      };\n      xhr.onerror = function() {\n        reject(new Error(\"Network Error\"));\n      };\n      xhr.send(formData);\n    });\n  }\n  /**\n   * Fetch-based upload method. Note that this will use NDK's httpFetch\n   * @param blob\n   * @returns Promise that resolves to the upload response\n   *\n   * @example\n   * const nip96 = ndk.getNip96(\"nostrcheck.me\");\n   * const blob = new Blob([\"Hello, world!\"], { type: \"text/plain\" });\n   * const response = await nip96.upload(blob);\n   * console.log(response);\n   */\n  async upload(blob) {\n    const httpVerb = \"POST\";\n    const { url, headers } = await this.prepareUpload(blob, httpVerb);\n    const formData = new FormData();\n    formData.append(\"file\", blob);\n    const res = await this.ndk.httpFetch(this.spec.api_url, {\n      method: httpVerb,\n      headers,\n      body: formData\n    });\n    if (res.status !== 200) throw new Error(`Failed to upload file to ${url}`);\n    const json = await res.json();\n    if (json.status !== \"success\") throw new Error(json.message);\n    return json;\n  }\n  validateHttpFetch() {\n    if (!this.ndk) throw new Error(\"NDK is required to fetch NIP96 spec\");\n    if (!this.ndk.httpFetch)\n      throw new Error(\"NDK must have an httpFetch method to fetch NIP96 spec\");\n  }\n  async fetchSpec() {\n    this.validateHttpFetch();\n    const res = await this.ndk.httpFetch(this.url);\n    if (res.status !== 200) throw new Error(`Failed to fetch NIP96 spec from ${this.url}`);\n    const spec = await res.json();\n    if (!spec) throw new Error(`Failed to parse NIP96 spec from ${this.url}`);\n    this.spec = spec;\n    this.nip98Required = this.spec.plans.free.is_nip98_required;\n  }\n  async generateNip98Header(requestUrl, httpMethod, blob) {\n    const event = new NDKEvent(this.ndk, {\n      kind: 27235 /* HttpAuth */,\n      tags: [\n        [\"u\", requestUrl],\n        [\"method\", httpMethod]\n      ]\n    });\n    if ([\"POST\", \"PUT\", \"PATCH\"].includes(httpMethod)) {\n      const sha256Hash = await this.calculateSha256(blob);\n      event.tags.push([\"payload\", sha256Hash]);\n    }\n    await event.sign();\n    const encodedEvent = btoa(JSON.stringify(event.rawEvent()));\n    return `Nostr ${encodedEvent}`;\n  }\n  async calculateSha256(blob) {\n    const buffer = await blob.arrayBuffer();\n    const hashBuffer = await crypto.subtle.digest(\"SHA-256\", buffer);\n    const hashArray = Array.from(new Uint8Array(hashBuffer));\n    const hashHex = hashArray.map((b) => b.toString(16).padStart(2, \"0\")).join(\"\");\n    return hashHex;\n  }\n};\n\n// src/ndk/queue/index.ts\nvar Queue = class {\n  queue = [];\n  maxConcurrency;\n  processing = /* @__PURE__ */ new Set();\n  promises = /* @__PURE__ */ new Map();\n  constructor(name, maxConcurrency) {\n    this.maxConcurrency = maxConcurrency;\n  }\n  add(item) {\n    if (this.promises.has(item.id)) {\n      return this.promises.get(item.id);\n    } else {\n    }\n    const promise = new Promise((resolve, reject) => {\n      this.queue.push({\n        ...item,\n        func: () => item.func().then(\n          (result) => {\n            resolve(result);\n            return result;\n          },\n          (error) => {\n            reject(error);\n            throw error;\n          }\n        )\n      });\n      this.process();\n    });\n    this.promises.set(item.id, promise);\n    promise.finally(() => {\n      this.promises.delete(item.id);\n      this.processing.delete(item.id);\n      this.process();\n    });\n    return promise;\n  }\n  process() {\n    if (this.processing.size >= this.maxConcurrency || this.queue.length === 0) {\n      return;\n    }\n    const item = this.queue.shift();\n    if (!item || this.processing.has(item.id)) {\n      return;\n    }\n    this.processing.add(item.id);\n    item.func();\n  }\n  clear() {\n    this.queue = [];\n  }\n  clearProcessing() {\n    this.processing.clear();\n  }\n  clearAll() {\n    this.clear();\n    this.clearProcessing();\n  }\n  length() {\n    return this.queue.length;\n  }\n};\n\n// src/subscription/manager.ts\nimport { matchFilters } from \"nostr-tools\";\nvar NDKSubscriptionManager = class {\n  subscriptions;\n  seenEvents = /* @__PURE__ */ new Map();\n  debug;\n  constructor(debug8) {\n    this.subscriptions = /* @__PURE__ */ new Map();\n    this.debug = debug8.extend(\"sub-manager\");\n  }\n  add(sub) {\n    this.subscriptions.set(sub.internalId, sub);\n    if (sub.onStopped) {\n      console.log(\"SUB-MANAGER BUG: Subscription already had onStopped! \\u{1F914}\", sub.internalId);\n    }\n    sub.onStopped = () => {\n      this.subscriptions.delete(sub.internalId);\n    };\n    sub.on(\"close\", () => {\n      this.subscriptions.delete(sub.internalId);\n    });\n  }\n  seenEvent(eventId, relay) {\n    const current = this.seenEvents.get(eventId) || [];\n    current.push(relay);\n    this.seenEvents.set(eventId, current);\n  }\n  /**\n   * Whenever an event comes in, this function is called.\n   * This function matches the received event against all the\n   * known (i.e. active) NDKSubscriptions, and if it matches,\n   * it sends the event to the subscription.\n   * \n   * This is the single place in the codebase that matches\n   * incoming events with parties interested in the event.\n   * \n   * This is also what allows for reactivity in NDK apps, such that\n   * whenever an active subscription receives an event that some\n   * other active subscription would want to receive, both receive it.\n   * \n   * TODO This also allows for subscriptions that overlap in meaning\n   * to be collapsed into one.\n   * \n   * I.e. if a subscription with filter: kinds: [1], authors: [alice]\n   * is created and EOSEs, and then a subsequent subscription with\n   * kinds: [1], authors: [alice] is created, once the second subscription\n   * EOSEs we can safely close it, increment its refCount and close it,\n   * and when the first subscription receives a new event from Alice this\n   * code will make the second subscription receive the event even though\n   * it has no active subscription on a relay.\n   * @param event Raw event received from a relay\n   * @param relay Relay that sent the event\n   * @param optimisticPublish Whether the event is coming from an optimistic publish\n   */\n  filterMatchingTime = 0;\n  filterMatchingCount = 0;\n  dispatchEvent(event, relay, optimisticPublish = false) {\n    if (relay) this.seenEvent(event.id, relay);\n    const subscriptions = this.subscriptions.values();\n    const matchingSubs = [];\n    const start = Date.now();\n    for (const sub of subscriptions) {\n      if (matchFilters(sub.filters, event)) {\n        matchingSubs.push(sub);\n      }\n    }\n    this.filterMatchingTime += Date.now() - start;\n    this.filterMatchingCount += matchingSubs.length;\n    for (const sub of matchingSubs) {\n      sub.eventReceived(event, void 0, false, optimisticPublish);\n    }\n  }\n};\n\n// src/ndk/active-user.ts\nimport createDebug4 from \"debug\";\nvar debug6 = createDebug4(\"ndk:active-user\");\nasync function getUserRelayList(user) {\n  if (!this.autoConnectUserRelays) return;\n  const userRelays = await getRelayListForUser(user.pubkey, this);\n  if (!userRelays) return;\n  for (const url of userRelays.relays) {\n    let relay = this.pool.relays.get(url);\n    if (!relay) {\n      relay = new NDKRelay(url, this.relayAuthDefaultPolicy, this);\n      this.pool.addRelay(relay);\n    }\n  }\n  return userRelays;\n}\nasync function setActiveUser(user) {\n  const pool = this.outboxPool || this.pool;\n  if (pool.connectedRelays.length > 0) {\n    setActiveUserConnected.call(this, user);\n  } else {\n    pool.once(\"connect\", () => {\n      setActiveUserConnected.call(this, user);\n    });\n  }\n}\nasync function setActiveUserConnected(user) {\n  const userRelays = await getUserRelayList.call(this, user);\n  const filters = [\n    {\n      kinds: [10006 /* BlockRelayList */],\n      authors: [user.pubkey]\n    }\n  ];\n  if (this.autoFetchUserMutelist) {\n    filters[0].kinds.push(1e4 /* MuteList */);\n  }\n  const relaySet = userRelays ? userRelays.relaySet : void 0;\n  const sub = this.subscribe(\n    filters,\n    { subId: \"active-user-settings\", closeOnEose: true },\n    relaySet,\n    false\n  );\n  const events = /* @__PURE__ */ new Map();\n  sub.on(\"event\", (event) => {\n    const prevEvent = events.get(event.kind);\n    if (prevEvent && prevEvent.created_at >= event.created_at) return;\n    events.set(event.kind, event);\n  });\n  sub.on(\"eose\", () => {\n    for (const event of events.values()) {\n      processEvent.call(this, event);\n    }\n  });\n  sub.start();\n}\nasync function processEvent(event) {\n  if (event.kind === 10006 /* BlockRelayList */) {\n    processBlockRelayList.call(this, event);\n  } else if (event.kind === 1e4 /* MuteList */) {\n    processMuteList.call(this, event);\n  }\n}\nfunction processBlockRelayList(event) {\n  const list = lists_default.from(event);\n  for (const item of list.items) {\n    this.pool.blacklistRelayUrls.add(item[0]);\n  }\n  debug6(\"Added %d relays to relay blacklist\", list.items.length);\n}\nfunction processMuteList(muteList) {\n  const list = lists_default.from(muteList);\n  for (const item of list.items) {\n    this.mutedIds.set(item[1], item[0]);\n  }\n  debug6(\"Added %d users to mute list\", list.items.length);\n}\n\n// src/ndk/index.ts\nvar DEFAULT_OUTBOX_RELAYS = [\"wss://purplepag.es/\", \"wss://nos.lol/\"];\nvar DEFAULT_BLACKLISTED_RELAYS = [\n  \"wss://brb.io/\",\n  // BRB\n  \"wss://nostr.mutinywallet.com/\"\n  // Don't try to read from this relay since it's a write-only relay\n  // \"wss://purplepag.es/\", // This is a hack, since this is a mostly read-only relay, but not fully. Once we have relay routing this can be removed so it only receives the supported kinds\n];\nvar NDK = class extends EventEmitter8 {\n  _explicitRelayUrls;\n  pool;\n  outboxPool;\n  _signer;\n  _activeUser;\n  cacheAdapter;\n  debug;\n  devWriteRelaySet;\n  outboxTracker;\n  mutedIds;\n  clientName;\n  clientNip89;\n  queuesZapConfig;\n  queuesNip05;\n  asyncSigVerification = false;\n  initialValidationRatio = 1;\n  lowestValidationRatio = 1;\n  validationRatioFn;\n  subManager;\n  publishingFailureHandled = false;\n  /**\n   * Default relay-auth policy that will be used when a relay requests authentication,\n   * if no other policy is specified for that relay.\n   *\n   * @example Disconnect from relays that request authentication:\n   * ```typescript\n   * ndk.relayAuthDefaultPolicy = NDKAuthPolicies.disconnect(ndk.pool);\n   * ```\n   *\n   * @example Sign in to relays that request authentication:\n   * ```typescript\n   * ndk.relayAuthDefaultPolicy = NDKAuthPolicies.signIn({ndk})\n   * ```\n   *\n   * @example Sign in to relays that request authentication, asking the user for confirmation:\n   * ```typescript\n   * ndk.relayAuthDefaultPolicy = (relay: NDKRelay) => {\n   *     const signIn = NDKAuthPolicies.signIn({ndk});\n   *     if (confirm(`Relay ${relay.url} is requesting authentication, do you want to sign in?`)) {\n   *        signIn(relay);\n   *     }\n   * }\n   * ```\n   */\n  relayAuthDefaultPolicy;\n  /**\n   * Fetch function to use for HTTP requests.\n   *\n   * @example\n   * ```typescript\n   * import fetch from \"node-fetch\";\n   *\n   * ndk.httpFetch = fetch;\n   * ```\n   */\n  httpFetch;\n  /**\n   * Provide a caller function to receive all networking traffic from relays\n   */\n  netDebug;\n  autoConnectUserRelays = true;\n  autoFetchUserMutelist = true;\n  walletConfig;\n  constructor(opts = {}) {\n    super();\n    this.debug = opts.debug || debug7(\"ndk\");\n    this.netDebug = opts.netDebug;\n    this._explicitRelayUrls = opts.explicitRelayUrls || [];\n    this.subManager = new NDKSubscriptionManager(this.debug);\n    this.pool = new NDKPool(\n      opts.explicitRelayUrls || [],\n      opts.blacklistRelayUrls || DEFAULT_BLACKLISTED_RELAYS,\n      this\n    );\n    this.pool.name = \"main\";\n    this.pool.on(\"relay:auth\", async (relay, challenge) => {\n      if (this.relayAuthDefaultPolicy) {\n        await this.relayAuthDefaultPolicy(relay, challenge);\n      }\n    });\n    this.autoConnectUserRelays = opts.autoConnectUserRelays ?? true;\n    this.autoFetchUserMutelist = opts.autoFetchUserMutelist ?? true;\n    this.clientName = opts.clientName;\n    this.clientNip89 = opts.clientNip89;\n    this.relayAuthDefaultPolicy = opts.relayAuthDefaultPolicy;\n    if (opts.enableOutboxModel) {\n      this.outboxPool = new NDKPool(\n        opts.outboxRelayUrls || DEFAULT_OUTBOX_RELAYS,\n        opts.blacklistRelayUrls || DEFAULT_BLACKLISTED_RELAYS,\n        this,\n        this.debug.extend(\"outbox-pool\")\n      );\n      this.outboxPool.name = \"outbox\";\n      this.outboxTracker = new OutboxTracker(this);\n    }\n    this.signer = opts.signer;\n    this.cacheAdapter = opts.cacheAdapter;\n    this.mutedIds = opts.mutedIds || /* @__PURE__ */ new Map();\n    if (opts.devWriteRelayUrls) {\n      this.devWriteRelaySet = NDKRelaySet.fromRelayUrls(opts.devWriteRelayUrls, this);\n    }\n    this.queuesZapConfig = new Queue(\"zaps\", 3);\n    this.queuesNip05 = new Queue(\"nip05\", 10);\n    this.signatureVerificationWorker = opts.signatureVerificationWorker;\n    this.initialValidationRatio = opts.initialValidationRatio || 1;\n    this.lowestValidationRatio = opts.lowestValidationRatio || 1;\n    try {\n      this.httpFetch = fetch;\n    } catch {\n    }\n  }\n  set explicitRelayUrls(urls) {\n    this._explicitRelayUrls = urls;\n    this.pool.relayUrls = urls;\n  }\n  get explicitRelayUrls() {\n    return this._explicitRelayUrls || [];\n  }\n  set signatureVerificationWorker(worker2) {\n    this.asyncSigVerification = !!worker2;\n    if (worker2) {\n      signatureVerificationInit(worker2);\n    }\n  }\n  /**\n   * Adds an explicit relay to the pool.\n   * @param url\n   * @param relayAuthPolicy Authentication policy to use if different from the default\n   * @param connect Whether to connect to the relay automatically\n   * @returns\n   */\n  addExplicitRelay(urlOrRelay, relayAuthPolicy, connect = true) {\n    let relay;\n    if (typeof urlOrRelay === \"string\") {\n      relay = new NDKRelay(urlOrRelay, relayAuthPolicy, this);\n    } else {\n      relay = urlOrRelay;\n    }\n    this.pool.addRelay(relay, connect);\n    this.explicitRelayUrls.push(relay.url);\n    return relay;\n  }\n  toJSON() {\n    return { relayCount: this.pool.relays.size }.toString();\n  }\n  get activeUser() {\n    return this._activeUser;\n  }\n  /**\n   * Sets the active user for this NDK instance, typically this will be\n   * called when assigning a signer to the NDK instance.\n   *\n   * This function will automatically connect to the user's relays if\n   * `autoConnectUserRelays` is set to true.\n   *\n   * It will also fetch the user's mutelist if `autoFetchUserMutelist` is set to true.\n   */\n  set activeUser(user) {\n    const differentUser = this._activeUser?.pubkey !== user?.pubkey;\n    this._activeUser = user;\n    if (user && differentUser) {\n      setActiveUser.call(this, user);\n    } else if (!user) {\n      this.mutedIds = /* @__PURE__ */ new Map();\n    }\n  }\n  get signer() {\n    return this._signer;\n  }\n  set signer(newSigner) {\n    this._signer = newSigner;\n    if (newSigner) this.emit(\"signer:ready\", newSigner);\n    newSigner?.user().then((user) => {\n      user.ndk = this;\n      this.activeUser = user;\n    });\n  }\n  /**\n   * Connect to relays with optional timeout.\n   * If the timeout is reached, the connection will be continued to be established in the background.\n   */\n  async connect(timeoutMs) {\n    if (this._signer && this.autoConnectUserRelays) {\n      this.debug(\n        \"Attempting to connect to user relays specified by signer %o\",\n        await this._signer.relays?.(this)\n      );\n      if (this._signer.relays) {\n        const relays = await this._signer.relays(this);\n        relays.forEach((relay) => this.pool.addRelay(relay));\n      }\n    }\n    const connections = [this.pool.connect(timeoutMs)];\n    if (this.outboxPool) {\n      connections.push(this.outboxPool.connect(timeoutMs));\n    }\n    this.debug(\"Connecting to relays %o\", { timeoutMs });\n    return Promise.allSettled(connections).then(() => {\n    });\n  }\n  /**\n   * Get a NDKUser object\n   *\n   * @param opts\n   * @returns\n   */\n  getUser(opts) {\n    const user = new NDKUser(opts);\n    user.ndk = this;\n    return user;\n  }\n  /**\n   * Get a NDKUser from a NIP05\n   * @param nip05 NIP-05 ID\n   * @param skipCache Skip cache\n   * @returns\n   */\n  async getUserFromNip05(nip05, skipCache = false) {\n    return NDKUser.fromNip05(nip05, this, skipCache);\n  }\n  /**\n   * Create a new subscription. Subscriptions automatically start, you can make them automatically close when all relays send back an EOSE by setting `opts.closeOnEose` to `true`)\n   *\n   * @param filters\n   * @param opts\n   * @param relaySet explicit relay set to use\n   * @param autoStart automatically start the subscription\n   * @returns NDKSubscription\n   */\n  subscribe(filters, opts, relaySet, autoStart = true) {\n    const subscription = new NDKSubscription(this, filters, opts, relaySet);\n    this.subManager.add(subscription);\n    const pool = opts?.pool ?? this.pool;\n    if (relaySet) {\n      for (const relay of relaySet.relays) {\n        pool.useTemporaryRelay(relay, void 0, subscription.filters);\n      }\n    }\n    if (this.outboxPool && subscription.hasAuthorsFilter()) {\n      const authors = subscription.filters.filter((filter) => filter.authors && filter.authors?.length > 0).map((filter) => filter.authors).flat();\n      this.outboxTracker?.trackUsers(authors);\n    }\n    if (autoStart) {\n      setTimeout(() => subscription.start(), 0);\n    }\n    return subscription;\n  }\n  /**\n   * Publish an event to a relay\n   * @param event event to publish\n   * @param relaySet explicit relay set to use\n   * @param timeoutMs timeout in milliseconds to wait for the event to be published\n   * @returns The relays the event was published to\n   *\n   * @deprecated Use `event.publish()` instead\n   */\n  async publish(event, relaySet, timeoutMs) {\n    this.debug(\"Deprecated: Use `event.publish()` instead\");\n    return event.publish(relaySet, timeoutMs);\n  }\n  /**\n   * Attempts to fetch an event from a tag, following relay hints and\n   * other best practices.\n   * @param tag Tag to fetch the event from\n   * @param originalEvent Event where the tag came from\n   * @param subOpts Subscription options to use when fetching the event\n   * @param fallback Fallback options to use when the hint relay doesn't respond\n   * @returns\n   */\n  fetchEventFromTag = fetchEventFromTag.bind(this);\n  /**\n   * Fetch a single event.\n   *\n   * @param idOrFilter event id in bech32 format or filter\n   * @param opts subscription options\n   * @param relaySetOrRelay explicit relay set to use\n   */\n  async fetchEvent(idOrFilter, opts, relaySetOrRelay) {\n    let filters;\n    let relaySet;\n    if (relaySetOrRelay instanceof NDKRelay) {\n      relaySet = new NDKRelaySet(/* @__PURE__ */ new Set([relaySetOrRelay]), this);\n    } else if (relaySetOrRelay instanceof NDKRelaySet) {\n      relaySet = relaySetOrRelay;\n    }\n    if (!relaySetOrRelay && typeof idOrFilter === \"string\") {\n      if (!isNip33AValue(idOrFilter)) {\n        const relays = relaysFromBech32(idOrFilter, this);\n        if (relays.length > 0) {\n          relaySet = new NDKRelaySet(new Set(relays), this);\n          relaySet = correctRelaySet(relaySet, this.pool);\n        }\n      }\n    }\n    if (typeof idOrFilter === \"string\") {\n      filters = [filterFromId(idOrFilter)];\n    } else if (Array.isArray(idOrFilter)) {\n      filters = idOrFilter;\n    } else {\n      filters = [idOrFilter];\n    }\n    if (filters.length === 0) {\n      throw new Error(`Invalid filter: ${JSON.stringify(idOrFilter)}`);\n    }\n    return new Promise((resolve) => {\n      let fetchedEvent = null;\n      const s = this.subscribe(\n        filters,\n        { ...opts || {}, closeOnEose: true },\n        relaySet,\n        false\n      );\n      const t2 = setTimeout(() => {\n        s.stop();\n        resolve(fetchedEvent);\n      }, 1e4);\n      s.on(\"event\", (event) => {\n        event.ndk = this;\n        if (!event.isReplaceable()) {\n          clearTimeout(t2);\n          resolve(event);\n        } else if (!fetchedEvent || fetchedEvent.created_at < event.created_at) {\n          fetchedEvent = event;\n        }\n      });\n      s.on(\"eose\", () => {\n        clearTimeout(t2);\n        resolve(fetchedEvent);\n      });\n      s.start();\n    });\n  }\n  /**\n   * Fetch events\n   */\n  async fetchEvents(filters, opts, relaySet) {\n    return new Promise((resolve) => {\n      const events = /* @__PURE__ */ new Map();\n      const relaySetSubscription = this.subscribe(\n        filters,\n        { ...opts || {}, closeOnEose: true },\n        relaySet,\n        false\n      );\n      const onEvent = (event) => {\n        if (!(event instanceof NDKEvent)) event = new NDKEvent(void 0, event);\n        const dedupKey = event.deduplicationKey();\n        const existingEvent = events.get(dedupKey);\n        if (existingEvent) {\n          event = dedup(existingEvent, event);\n        }\n        event.ndk = this;\n        events.set(dedupKey, event);\n      };\n      relaySetSubscription.on(\"event\", onEvent);\n      relaySetSubscription.on(\"eose\", () => {\n        resolve(new Set(events.values()));\n      });\n      relaySetSubscription.start();\n    });\n  }\n  /**\n   * Ensures that a signer is available to sign an event.\n   */\n  assertSigner() {\n    if (!this.signer) {\n      this.emit(\"signer:required\");\n      throw new Error(\"Signer required\");\n    }\n  }\n  /**\n   * Creates a new Nip96 instance for the given domain.\n   * @param domain Domain to use for nip96 uploads\n   * @example Upload a file to a NIP-96 enabled domain:\n   *\n   * ```typescript\n   * const blob = new Blob([\"Hello, world!\"], { type: \"text/plain\" });\n   * const nip96 = ndk.getNip96(\"nostrcheck.me\");\n   * await nip96.upload(blob);\n   * ```\n   */\n  getNip96(domain) {\n    return new Nip96(domain, this);\n  }\n  set wallet(wallet) {\n    console.log(\"setting wallet\", {\n      lnPay: wallet?.lnPay,\n      cashuPay: wallet?.cashuPay\n    });\n    if (!wallet) {\n      this.walletConfig = void 0;\n      return;\n    }\n    this.walletConfig ??= {};\n    this.walletConfig.lnPay = wallet?.lnPay?.bind(wallet);\n    this.walletConfig.cashuPay = wallet?.cashuPay?.bind(wallet);\n  }\n};\n\n// src/zap/invoice.ts\nimport { decode } from \"light-bolt11-decoder\";\nfunction zapInvoiceFromEvent(event) {\n  const description = event.getMatchingTags(\"description\")[0];\n  const bolt11 = event.getMatchingTags(\"bolt11\")[0];\n  let decodedInvoice;\n  let zapRequest;\n  if (!description || !bolt11 || !bolt11[1]) {\n    return null;\n  }\n  try {\n    let zapRequestPayload = description[1];\n    if (zapRequestPayload.startsWith(\"%\")) {\n      zapRequestPayload = decodeURIComponent(zapRequestPayload);\n    }\n    if (zapRequestPayload === \"\") {\n      return null;\n    }\n    zapRequest = JSON.parse(zapRequestPayload);\n    decodedInvoice = decode(bolt11[1]);\n  } catch (e) {\n    return null;\n  }\n  const amountSection = decodedInvoice.sections.find((s) => s.name === \"amount\");\n  if (!amountSection) {\n    return null;\n  }\n  const amount = parseInt(amountSection.value);\n  if (!amount) {\n    return null;\n  }\n  const content = zapRequest.content;\n  const sender = zapRequest.pubkey;\n  const recipientTag = event.getMatchingTags(\"p\")[0];\n  const recipient = recipientTag[1];\n  let zappedEvent = event.getMatchingTags(\"e\")[0];\n  if (!zappedEvent) {\n    zappedEvent = event.getMatchingTags(\"a\")[0];\n  }\n  const zappedEventId = zappedEvent ? zappedEvent[1] : void 0;\n  const zapInvoice = {\n    id: event.id,\n    zapper: event.pubkey,\n    zappee: sender,\n    zapped: recipient,\n    zappedEvent: zappedEventId,\n    amount,\n    comment: content\n  };\n  return zapInvoice;\n}\n\n// src/zapper/index.ts\nimport createDebug5 from \"debug\";\nimport { EventEmitter as EventEmitter9 } from \"tseep\";\n\n// src/zapper/nip57.ts\nimport { nip57 } from \"nostr-tools\";\nasync function generateZapRequest(target, ndk, data, pubkey, amount, relays, comment, tags, signer) {\n  const zapEndpoint = data.callback;\n  const zapRequest = nip57.makeZapRequest({\n    profile: pubkey,\n    // set the event to null since nostr-tools doesn't support nip-33 zaps\n    event: null,\n    amount,\n    comment: comment || \"\",\n    relays: relays.slice(0, 4)\n  });\n  if (target instanceof NDKEvent) {\n    const tags2 = target.referenceTags();\n    const nonPTags = tags2.filter((tag) => tag[0] !== \"p\");\n    zapRequest.tags.push(...nonPTags);\n  }\n  zapRequest.tags.push([\"lnurl\", zapEndpoint]);\n  const event = new NDKEvent(ndk, zapRequest);\n  if (tags) {\n    event.tags = event.tags.concat(tags);\n  }\n  if (event.hasTag(\"a\")) {\n    event.tags = event.tags.filter((tag) => tag[0] !== \"e\");\n  }\n  event.tags = event.tags.filter((tag) => tag[0] !== \"p\");\n  event.tags.push([\"p\", pubkey]);\n  await event.sign(signer);\n  return event;\n}\n\n// src/zapper/index.ts\nvar d3 = createDebug5(\"ndk:zapper\");\nvar NDKZapper = class extends EventEmitter9 {\n  target;\n  ndk;\n  comment;\n  amount;\n  unit;\n  tags;\n  signer;\n  zapMethod;\n  lnPay;\n  /**\n   * Called when a cashu payment is to be made.\n   * This function should swap/mint proofs for the required amount, in the required unit,\n   * in any of the provided mints and return the proofs and mint used.\n   */\n  cashuPay;\n  onComplete;\n  maxRelays = 3;\n  /**\n   * \n   * @param target The target of the zap\n   * @param amount The amount to send indicated in the unit\n   * @param unit The unit of the amount\n   * @param opts Options for the zap\n   */\n  constructor(target, amount, unit = \"msat\", opts = {}) {\n    super();\n    this.target = target;\n    this.ndk = opts.ndk || target.ndk;\n    if (!this.ndk) {\n      throw new Error(\"No NDK instance provided\");\n    }\n    this.amount = amount;\n    this.comment = opts.comment;\n    this.unit = unit;\n    this.tags = opts.tags;\n    this.signer = opts.signer;\n    this.lnPay = opts.lnPay || this.ndk.walletConfig?.lnPay;\n    this.cashuPay = opts.cashuPay || this.ndk.walletConfig?.cashuPay;\n    this.onComplete = opts.onComplete || this.ndk.walletConfig?.onPaymentComplete;\n  }\n  /**\n   * Initiate zapping process\n   * \n   * This function will calculate the splits for this zap and initiate each zap split.\n   */\n  async zap() {\n    const splits = this.getZapSplits();\n    const results = /* @__PURE__ */ new Map();\n    await Promise.all(\n      splits.map(async (split) => {\n        let result;\n        try {\n          result = await this.zapSplit(split);\n        } catch (e) {\n          result = e;\n        }\n        this.emit(\"split:complete\", split, result);\n        results.set(split, result);\n      })\n    );\n    this.emit(\"complete\", results);\n    if (this.onComplete) this.onComplete(results);\n    return results;\n  }\n  async zapNip57(split, data) {\n    if (!this.lnPay) throw new Error(\"No lnPay function available\");\n    const relays = await this.relays(split.pubkey);\n    const zapRequest = await generateZapRequest(\n      this.target,\n      this.ndk,\n      data,\n      split.pubkey,\n      split.amount,\n      relays,\n      this.comment,\n      this.tags,\n      this.signer\n    );\n    if (!zapRequest) {\n      d3(\"Unable to generate zap request\");\n      throw new Error(\"Unable to generate zap request\");\n    }\n    const pr = await this.getLnInvoice(zapRequest, split.amount, data);\n    if (!pr) {\n      d3(\"Unable to get payment request\");\n      throw new Error(\"Unable to get payment request\");\n    }\n    return await this.lnPay(\n      {\n        target: this.target,\n        recipientPubkey: split.pubkey,\n        paymentDescription: \"NIP-57 Zap\",\n        pr,\n        amount: split.amount,\n        unit: this.unit\n      }\n    );\n  }\n  /**\n   * Fetches information about a NIP-61 zap and asks the caller to create cashu proofs for the zap.\n   * \n   * (note that the cashuPay function can use any method to create the proofs, including using lightning\n   * to mint proofs in the specified mint, the responsibility of minting the proofs is delegated to the caller (e.g. ndk-wallet))\n   */\n  async zapNip61(split, data) {\n    if (!this.cashuPay) throw new Error(\"No cashuPay function available\");\n    let ret;\n    ret = await this.cashuPay({\n      target: this.target,\n      recipientPubkey: split.pubkey,\n      paymentDescription: \"NIP-61 Zap\",\n      amount: split.amount,\n      unit: this.unit,\n      ...data\n    });\n    d3(\"NIP-61 Zap result: %o\", ret);\n    if (ret instanceof Error) {\n      return ret;\n    } else if (ret) {\n      const { proofs, mint } = ret;\n      if (!proofs || !mint)\n        throw new Error(\n          \"Invalid zap confirmation: missing proofs or mint: \" + ret\n        );\n      const relays = await this.relays(split.pubkey);\n      const relaySet = NDKRelaySet.fromRelayUrls(relays, this.ndk);\n      const nutzap = new NDKNutzap(this.ndk);\n      nutzap.tags = [...nutzap.tags, ...this.tags || []];\n      nutzap.proofs = proofs;\n      nutzap.mint = mint;\n      nutzap.target = this.target;\n      nutzap.comment = this.comment;\n      nutzap.unit = this.unit;\n      nutzap.recipientPubkey = split.pubkey;\n      await nutzap.sign(this.signer);\n      nutzap.publish(relaySet);\n      return nutzap;\n    }\n  }\n  /**\n   * Get the zap methods available for the recipient and initiates the zap\n   * in the desired method.\n   * @param split \n   * @returns \n   */\n  async zapSplit(split) {\n    const zapped = false;\n    let zapMethods = await this.getZapMethods(this.ndk, split.pubkey);\n    let retVal;\n    if (zapMethods.length === 0) throw new Error(\"No zap method available for recipient\");\n    zapMethods = zapMethods.sort((a, b) => {\n      if (a.type === \"nip61\") return -1;\n      if (b.type === \"nip61\") return 1;\n      return 0;\n    });\n    for (const zapMethod of zapMethods) {\n      if (zapped) break;\n      d3(\n        \"Zapping to %s with %d %s using %s\",\n        split.pubkey,\n        split.amount,\n        this.unit,\n        zapMethod.type\n      );\n      try {\n        if (zapMethod.type === \"nip61\") {\n          retVal = await this.zapNip61(split, zapMethod.data);\n        } else if (zapMethod.type === \"nip57\") {\n          retVal = await this.zapNip57(split, zapMethod.data);\n        }\n        if (!(retVal instanceof Error)) {\n          break;\n        }\n      } catch (e) {\n        if (e instanceof Error) retVal = e;\n        else retVal = new Error(e);\n        d3(\n          \"Error zapping to %s with %d %s using %s: %o\",\n          split.pubkey,\n          split.amount,\n          this.unit,\n          zapMethod.type,\n          e\n        );\n      }\n    }\n    if (retVal instanceof Error) throw retVal;\n    return retVal;\n  }\n  /**\n   * Gets a bolt11 for a nip57 zap\n   * @param event\n   * @param amount\n   * @param zapEndpoint\n   * @returns\n   */\n  async getLnInvoice(zapRequest, amount, data) {\n    const zapEndpoint = data.callback;\n    const eventPayload = JSON.stringify(zapRequest.rawEvent());\n    d3(\n      `Fetching invoice from ${zapEndpoint}?` + new URLSearchParams({\n        amount: amount.toString(),\n        nostr: eventPayload\n      })\n    );\n    const url = new URL(zapEndpoint);\n    url.searchParams.append(\"amount\", amount.toString());\n    url.searchParams.append(\"nostr\", eventPayload);\n    d3(`Fetching invoice from ${url.toString()}`);\n    const response = await fetch(url.toString());\n    d3(`Got response from zap endpoint: ${zapEndpoint}`, { status: response.status });\n    if (response.status !== 200) {\n      d3(`Received non-200 status from zap endpoint: ${zapEndpoint}`, {\n        status: response.status,\n        amount,\n        nostr: eventPayload\n      });\n      const text = await response.text();\n      throw new Error(`Unable to fetch zap endpoint ${zapEndpoint}: ${text}`);\n    }\n    const body = await response.json();\n    return body.pr;\n  }\n  getZapSplits() {\n    if (this.target instanceof NDKUser) {\n      return [\n        {\n          pubkey: this.target.pubkey,\n          amount: this.amount\n        }\n      ];\n    }\n    const zapTags = this.target.getMatchingTags(\"zap\");\n    if (zapTags.length === 0) {\n      return [\n        {\n          pubkey: this.target.pubkey,\n          amount: this.amount\n        }\n      ];\n    }\n    const splits = [];\n    const total = zapTags.reduce((acc, tag) => acc + parseInt(tag[2]), 0);\n    for (const tag of zapTags) {\n      const pubkey = tag[1];\n      const amount = Math.floor(parseInt(tag[2]) / total * this.amount);\n      splits.push({ pubkey, amount });\n    }\n    return splits;\n  }\n  /**\n   * Gets the zap method that should be used to zap a pubbkey\n   * @param ndk\n   * @param pubkey\n   * @returns\n   */\n  async getZapMethods(ndk, recipient) {\n    const methods = [];\n    if (this.cashuPay) methods.push(\"nip61\");\n    if (this.lnPay) methods.push(\"nip57\");\n    if (methods.length === 0) throw new Error(\"There are no payment methods available! Please set at least one of lnPay or cashuPay\");\n    const user = ndk.getUser({ pubkey: recipient });\n    const zapInfo = await user.getZapInfo(false, methods);\n    d3(\"Zap info for %s: %o\", user.npub, zapInfo);\n    return zapInfo;\n  }\n  /**\n   * @returns the relays to use for the zap request\n   */\n  async relays(pubkey) {\n    let r = [];\n    if (this.ndk?.activeUser) {\n      const relayLists = await getRelayListForUsers(\n        [this.ndk.activeUser.pubkey, pubkey],\n        this.ndk\n      );\n      const relayScores = /* @__PURE__ */ new Map();\n      for (const relayList of relayLists.values()) {\n        for (const url of relayList.readRelayUrls) {\n          const score = relayScores.get(url) || 0;\n          relayScores.set(url, score + 1);\n        }\n      }\n      r = Array.from(relayScores.entries()).sort((a, b) => b[1] - a[1]).map(([url]) => url).slice(0, this.maxRelays);\n    }\n    if (this.ndk?.pool?.permanentAndConnectedRelays().length) {\n      r = this.ndk.pool.permanentAndConnectedRelays().map((relay) => relay.url);\n    }\n    if (!r.length) {\n      r = [];\n    }\n    return r;\n  }\n};\nexport {\n  BECH32_REGEX,\n  DEFAULT_ENCRYPTION_SCHEME,\n  NDKAppHandlerEvent,\n  NDKAppSettings,\n  NDKArticle,\n  NDKCashuMintList,\n  NDKClassified,\n  NDKDVMJobFeedback,\n  NDKDVMJobResult,\n  NDKDVMRequest,\n  NDKDraft,\n  NDKDvmJobFeedbackStatus,\n  NDKEvent,\n  NDKHighlight,\n  NDKKind,\n  NDKList,\n  NDKListKinds,\n  NDKNip07Signer,\n  NDKNip46Backend,\n  NDKNip46Signer,\n  NDKNostrRpc,\n  NDKNutzap,\n  NDKPool,\n  NDKPrivateKeySigner,\n  NDKPublishError,\n  NDKRelay,\n  NDKRelayAuthPolicies,\n  NDKRelayList,\n  NDKRelaySet,\n  NDKRelayStatus,\n  NDKRepost,\n  NDKSimpleGroup,\n  NDKSimpleGroupMemberList,\n  NDKSimpleGroupMetadata,\n  NDKSubscription,\n  NDKSubscriptionCacheUsage,\n  NDKSubscriptionReceipt,\n  NDKSubscriptionStart,\n  NDKSubscriptionTier,\n  NDKTranscriptionDVM,\n  NDKUser,\n  NDKVideo,\n  NDKWiki,\n  NDKZapper,\n  NIP33_A_REGEX,\n  calculateRelaySetFromEvent,\n  calculateTermDurationInSeconds,\n  compareFilter,\n  NDK as default,\n  defaultOpts,\n  deserialize,\n  dvmSchedule,\n  eventHasETagMarkers,\n  eventIsPartOfThread,\n  eventIsReply,\n  eventReplies,\n  eventThreadIds,\n  eventThreads,\n  eventsBySameAuthor,\n  filterAndRelaySetFromBech32,\n  filterFingerprint,\n  filterForEventsTaggingId,\n  filterFromId,\n  generateSubId,\n  generateZapRequest,\n  getEventReplyIds,\n  getNip57ZapSpecFromLud,\n  getRelayListForUser,\n  getRelayListForUsers,\n  getReplyTag,\n  getRootEventId,\n  getRootTag,\n  isEventOriginalPost,\n  isNip33AValue,\n  mergeFilters,\n  newAmount,\n  normalize,\n  normalizeRelayUrl,\n  normalizeUrl,\n  parseTagToSubscriptionAmount,\n  pinEvent,\n  possibleIntervalFrequencies,\n  profileFromEvent,\n  queryFullyFilled,\n  relayListFromKind3,\n  relaysFromBech32,\n  serialize,\n  serializeProfile,\n  tryNormalizeRelayUrl,\n  zapInvoiceFromEvent\n};\n","const isBrowser = typeof window !== \"undefined\";\n\nexport enum LogLevel {\n    TRACE = 600,\n    DEBUG = 500,\n    INFO = 400,\n    WARN = 300,\n    ERROR = 200,\n    FATAL = 100,\n    OFF = 0,\n}\n\nexport interface LogAttachment {\n    log(logger: Logger, level: LogLevel, tags: string[], ...message: any[]): void;\n}\n\nexport class ConsoleLogAttachment implements LogAttachment {\n    private readonly level?: LogLevel;\n    constructor(level?: LogLevel) {\n        this.level = level;\n    }\n    public log(logger: Logger, level: LogLevel, tags: string[], ...message: any[]): void {\n        if (this.level && level > this.level) return;\n\n        let head = \"\";\n        if (!isBrowser) {\n            const date = new Date();\n            const year = date.getFullYear();\n            const month = (\"0\" + (date.getMonth() + 1)).slice(-2);\n            const day = (\"0\" + date.getDate()).slice(-2);\n            const hour = (\"0\" + date.getHours()).slice(-2);\n            const minute = (\"0\" + date.getMinutes()).slice(-2);\n            const second = (\"0\" + date.getSeconds()).slice(-2);\n            head += `[${year}-${month}-${day} ${hour}:${minute}:${second}] `;\n        }\n        head += `[${logger.name}] `;\n        if (!isBrowser) {\n            head += `[${LogLevel[level]}] `;\n        }\n\n        const tail = tags.length ? `   ${tags.join(\",\")}` : \"\";\n        if (level <= LogLevel.ERROR) {\n            console.error(head, ...message, tail);\n        } else if (level <= LogLevel.WARN) {\n            console.warn(head, ...message, tail);\n        } else if (level <= LogLevel.INFO) {\n            console.info(head, ...message, tail);\n        } else {\n            console.log(head, ...message, tail);\n        }\n    }\n}\n\nexport class JSONLogAttachment implements LogAttachment {\n    private readonly endpoint: string;\n    private readonly level?: LogLevel;\n    private readonly authKey?: string;\n    constructor(endpoint: string, authKey?: string, level?: LogLevel) {\n        this.endpoint = endpoint;\n        this.level = level;\n        this.authKey = authKey;\n    }\n\n    public log(logger: Logger, level: LogLevel, tags: string[], ...message: any[]): void {\n        if (this.level && level > this.level) return;\n\n        const serialize = (m: any, seen: Set<any> = new Set()): string => {\n            if (m) {\n                if (seen.has(m)) {\n                    return \"[Circular]\";\n                }\n                seen.add(m);\n            }\n\n            const type = typeof m;\n            if (type === \"function\") {\n                return m.toString() + \"\\n\" + new Error().stack;\n            } else if (type === \"undefined\") {\n                return \"undefined\";\n            } else if (m === null) {\n                return \"null\";\n            } else if (type === \"string\" || type === \"number\" || type === \"bigint\" || type === \"boolean\") {\n                return String(m);\n            } else if (m instanceof Error) {\n                return (m.message || m.toString()) + \"\\n\" + m.stack;\n            } else if (m instanceof ArrayBuffer || m instanceof Uint8Array) {\n                return \"Buffer:\" + Array.prototype.map.call(new Uint8Array(m), (x) => (\"00\" + x.toString(16)).slice(-2)).join(\"\");\n            } else if (type == \"object\" && Array.isArray(m)) {\n                return JSON.stringify(m.map((x) => serialize(x, seen)));\n            } else if (m instanceof Set) {\n                return JSON.stringify(Array.from(m).map((x) => serialize(x, seen)));\n            } else {\n                try {\n                    const str = m.toString();\n                    if (!(str.startsWith(\"[object\") && str.endsWith(\"]\"))) {\n                        return str;\n                    }\n                } catch (e) {\n                    console.error(e);\n                }\n                const serializedObject: any = {};\n                for (const key in m) {\n                    if (Object.prototype.hasOwnProperty.call(m, key)) {\n                        serializedObject[key] = serialize(m[key], seen);\n                    }\n                }\n                return JSON.stringify(serializedObject);\n            }\n        };\n\n        const logLevelStr: string = LogLevel[level];\n        let endPoint = new URL(this.endpoint);\n        if (this.authKey) {\n            endPoint.searchParams.append(\"authKey\", this.authKey);\n        }\n        fetch(endPoint.href, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                logger: logger.name,\n                tags,\n                level: logLevelStr,\n                message: message.map((m) => serialize(m)).join(\" \"),\n                createdAt: new Date().toISOString(),\n            }),\n        }).catch(() => {});\n    }\n}\n\n/**\n * A logger.\n * Use debug, trace, info, warn, error, fatal to log messages unless you need to do some expensive computation to get the message,\n * in that case do it in a function you pass to debugLazy, traceLazy, infoLazy, warnLazy, errorLazy, fatalLazy\n * that will be called only if the log level is enabled.\n */\nexport class Logger {\n    private readonly tags: string[] = [];\n    private globalTags: { [key: string]: string } = {};\n    private readonly attachments: LogAttachment[] = [];\n    public readonly name: string;\n    private readonly level: LogLevel;\n    private readonly groupTags: string[] = [];\n\n    constructor(name: string, level: LogLevel, tags: string[], globalTags?: { [key: string]: string }, groupTags?: string[]) {\n        this.name = name;\n        this.tags.push(...tags);\n        this.globalTags = globalTags || {};\n        this.level = level;\n        if (groupTags) this.groupTags.push(...groupTags);\n    }\n\n    public addAttachment(attachment: LogAttachment) {\n        this.attachments.push(attachment);\n    }\n\n    public group(label: string) {\n        this.groupTags.push(label);\n    }\n\n    public groupEnd() {\n        this.groupTags.pop();\n    }\n\n    public fork(label: string) {\n        const logger = new Logger(this.name, this.level, [...this.tags], this.globalTags, [...this.groupTags, label]);\n        for (const attachment of this.attachments) {\n            logger.addAttachment(attachment);\n        }\n        return logger;\n    }\n\n    public log(level: LogLevel, ...message: any[]) {\n        if (level > this.level) return;\n        for (const attachment of this.attachments) {\n            try {\n                attachment.log(this, level, [...this.tags, ...this.groupTags, ...Object.entries(this.globalTags).map(([k, v]) => `${k}:${v}`)], ...message);\n            } catch (e) {\n                console.error(\"Error in log attachment\", e);\n            }\n        }\n    }\n\n    public logLazy(level: LogLevel, func: () => any | Promise<any>) {\n        if (typeof func !== \"function\") {\n            throw new Error(\"lazy log needs a function to call\");\n        }\n\n        if (level > this.level) return;\n\n        try {\n            const res: any = func();\n\n            const _log = (message: any) => {\n                message = Array.isArray(message) ? message : [message];\n                this.log(level, ...message);\n            };\n\n            if (res instanceof Promise) {\n                res.then(_log)\n                    .catch((e) => this.error(\"Error in lazy log\", e))\n                    .catch((e) => console.error(\"Error in lazy log\", e));\n            } else {\n                _log(res);\n            }\n        } catch (e) {\n            this.error(\"Error in lazy log\", e);\n        }\n    }\n\n    public debug(...message: any) {\n        this.log(LogLevel.DEBUG, ...message);\n    }\n\n    public trace(...message: any) {\n        this.log(LogLevel.TRACE, ...message);\n    }\n\n    public info(...message: any) {\n        this.log(LogLevel.INFO, ...message);\n    }\n\n    public warn(...message: any) {\n        this.log(LogLevel.WARN, ...message);\n    }\n\n    public error(...message: any) {\n        this.log(LogLevel.ERROR, ...message);\n    }\n\n    public fatal(...message: any) {\n        this.log(LogLevel.FATAL, ...message);\n    }\n\n    public debugLazy(func: () => any | Promise<any>) {\n        this.logLazy(LogLevel.DEBUG, func);\n    }\n\n    public traceLazy(func: () => any | Promise<any>) {\n        this.logLazy(LogLevel.TRACE, func);\n    }\n\n    public infoLazy(func: () => any | Promise<any>) {\n        this.logLazy(LogLevel.INFO, func);\n    }\n\n    public warnLazy(func: () => any | Promise<any>) {\n        this.logLazy(LogLevel.WARN, func);\n    }\n\n    public errorLazy(func: () => any | Promise<any>) {\n        this.logLazy(LogLevel.ERROR, func);\n    }\n\n    public fatalLazy(func: () => any | Promise<any>) {\n        this.logLazy(LogLevel.FATAL, func);\n    }\n}\n\nlet globalLoggerTags: { [key: string]: string } = {};\nlet globalLoggerConfig: { [key: string]: any } = {};\n\nif (typeof window !== \"undefined\") {\n    globalLoggerTags = (window as any)?.globalLoggerTags as any;\n    globalLoggerConfig = (window as any)?.globalLoggerConfig as any;\n    if (!globalLoggerTags) {\n        (window as any).globalLoggerTags = globalLoggerTags = {};\n    }\n    if (!globalLoggerConfig) {\n        (window as any).globalLoggerConfig = globalLoggerConfig = {};\n    }\n}\n\nif (typeof global !== \"undefined\") {\n    globalLoggerTags = (global as any)?.globalLoggerTags as any;\n    if (!globalLoggerTags) {\n        (global as any).globalLoggerTags = globalLoggerTags = {};\n    }\n    globalLoggerConfig = (global as any)?.globalLoggerConfig as any;\n    if (!globalLoggerConfig) {\n        (global as any).globalLoggerConfig = globalLoggerConfig = {};\n    }\n}\n\nexport function setGlobalLoggerTag(key: string, value: string) {\n    if (value === undefined || value === null) {\n        delete globalLoggerTags[key];\n    } else {\n        globalLoggerTags[key] = value;\n    }\n}\n\nexport function setGlobalLoggerConfig(key: string, value: any) {\n    if (value === undefined || value === null) {\n        delete globalLoggerConfig[key];\n    } else {\n        globalLoggerConfig[key] = value;\n    }\n}\n\nexport function getLogger(name: string = \"default\", tags: string[] = [], level?: string): Logger {\n    let httpEndpoint = \"\";\n    let env = \"production\";\n    let authKey = \"\";\n\n    // load environment variables when possible\n    try {\n        if (typeof process.env.NODE_ENV !== \"undefined\") {\n            env = process.env.NODE_ENV || env;\n        }\n    } catch (e) {\n        console.log(e);\n    }\n\n    try {\n        if (typeof process.env.LOGPIPE_ENDPOINT !== \"undefined\") {\n            httpEndpoint = process.env.LOGPIPE_ENDPOINT + \"/write\" || httpEndpoint;\n        }\n    } catch (e) {\n        console.log(e);\n    }\n\n    try {\n        if (typeof process.env.LOG_LEVEL !== \"undefined\") {\n            level = level ?? process.env.LOG_LEVEL;\n        }\n    } catch (e) {\n        console.log(e);\n    }\n\n    try {\n        if (typeof process.env.LOGPIPE_AUTHKEY !== \"undefined\") {\n            authKey = process.env.LOGPIPE_AUTHKEY;\n        }\n    } catch (e) {\n        console.log(e);\n    }\n\n    httpEndpoint = globalLoggerConfig?.endpoint ?? httpEndpoint;\n    authKey = globalLoggerConfig?.authKey ?? authKey;\n    env = globalLoggerConfig?.env ?? env;\n    level = globalLoggerConfig?.level ?? level;\n    level = level ?? (env === \"development\" ? \"TRACE\" : \"INFO\");\n\n    if (!isBrowser) {\n        tags.push(\"backend\");\n    } else {\n        tags.push(\"frontend\");\n    }\n\n    const logger = new Logger(name, LogLevel[level as keyof typeof LogLevel], tags, globalLoggerTags);\n\n    if (globalLoggerConfig?.attachments) {\n        for (const attachment of globalLoggerConfig.attachments) {\n            logger.addAttachment(attachment);\n        }\n    } else {\n        if (env === \"development\") {\n            logger.addAttachment(new ConsoleLogAttachment());\n            if (httpEndpoint) logger.addAttachment(new JSONLogAttachment(httpEndpoint, authKey));\n        } else {\n            logger.addAttachment(new ConsoleLogAttachment());\n        }\n    }\n    return logger;\n}\n","import { NostrAdapter, NostrEvent, SignedNostrEvent, NostrFilter, NostrSubscription, NostrKeyPair } from \"./NostrAdapter\";\nimport NDK, { NDKRelaySet, NDKRelay, NDKSubscription, NDKEvent, NDKFilter, NDKPrivateKeySigner, NDKUser } from \"@nostr-dev-kit/ndk\";\nimport { getLogger } from \"./logger\";\n\nconst LOGGER = getLogger(\"nostrtc:NDKAdapter\");\n\nexport class NDKAdapter implements NostrAdapter {\n    private readonly ndk: NDK;\n    private signers: WeakMap<NostrKeyPair, NDKPrivateKeySigner> = new WeakMap();\n\n    constructor(ndk: NDK) {\n        this.ndk = ndk;\n    }\n\n    public async getInfo(relayUrl: string): Promise<{ [key: string]: string }> {\n        const httpRelayUrl = relayUrl.startsWith(\"wss://\") ? \"https://\" + relayUrl.substring(6) : relayUrl.startsWith(\"ws://\") ? \"http://\" + relayUrl.substring(5) : relayUrl;\n\n        const res = await fetch(httpRelayUrl + \"/\", {\n            headers: {\n                Accept: \"application/nostr+json\",\n            },\n        }).then((res) => res.json());\n        return res;\n    }\n\n    private async getSigner(keyPair: NostrKeyPair): Promise<NDKPrivateKeySigner> {\n        if (!this.signers.has(keyPair)) {\n            this.signers.set(keyPair, new NDKPrivateKeySigner(await keyPair.priv()));\n        }\n        return this.signers.get(keyPair)!;\n    }\n\n    public async publishToRelays(relays: string[], eventTemplate: NostrEvent, signerKeyPair: NostrKeyPair): Promise<SignedNostrEvent> {\n        const ndkEventTemplate: any = {\n            created_at: eventTemplate.created_at || Math.floor(Date.now() / 1000),\n            content: eventTemplate.content,\n            tags: eventTemplate.tags,\n            kind: eventTemplate.kind,\n            pubkey: eventTemplate.pubkey,\n        };\n        const signer = await this.getSigner(signerKeyPair);\n        const event = new NDKEvent(this.ndk, ndkEventTemplate);\n        await event.sign(signer);\n        if (!event.sig || !event.pubkey || !event.content || !event.created_at || !event.kind) throw new Error(\"Failed to sign event\");\n        const relaySet = NDKRelaySet.fromRelayUrls(relays, this.ndk);\n        const rs = await relaySet.publish(event);\n        const signedEvent: SignedNostrEvent = {\n            id: event.id,\n            sig: event.sig,\n            pubkey: event.pubkey,\n            signatureVerified: event.signatureVerified || false,\n            content: event.content,\n            created_at: event.created_at,\n            kind: event.kind,\n            tags: event.tags,\n            relays: relays ? new Set(Array.from(rs).map((r: NDKRelay) => r.url)) : new Set(),\n        };\n        return signedEvent;\n    }\n\n    public async subscribeToRelays(\n        relays: string[],\n        filters: NostrFilter[],\n        onEvent: (sub: NostrSubscription, event: SignedNostrEvent) => Promise<void>,\n        onClose?: (sub: NostrSubscription) => Promise<void>,\n        onEose?: (sub: NostrSubscription) => Promise<void>,\n    ): Promise<NostrSubscription> {\n        const relaySet = NDKRelaySet.fromRelayUrls(relays, this.ndk);\n\n        // workaround https://github.com/nostr-dev-kit/ndk/issues/303\n        for (const relay of relaySet.relays) {\n            await this.ndk.addExplicitRelay(relay);\n        }\n\n        const ndkFilters: NDKFilter[] = filters.map((f: NostrFilter) => {\n            const ndkFilter: NDKFilter = {\n                ids: f.ids,\n                kinds: f.kinds,\n                authors: f.authors,\n                since: f.since,\n                until: f.until,\n                limit: f.limit,\n                search: f.search,\n            };\n            for (const [key, value] of Object.entries(f)) {\n                if (key.startsWith(\"#\")) {\n                    ndkFilter[key as any] = value as any;\n                }\n            }\n            return ndkFilter;\n        });\n\n        const ndkSub: NDKSubscription = this.ndk.subscribe(ndkFilters, undefined, relaySet, false);\n        const sub: NostrSubscription = {\n            close: async () => {\n                await ndkSub.stop();\n            },\n        };\n        ndkSub.on(\"event\", async (ndkEvent: NDKEvent) => {\n            try {\n                if (onEvent) {\n                    if (!ndkEvent.sig || !ndkEvent.pubkey || !ndkEvent.content || !ndkEvent.created_at || !ndkEvent.kind) throw new Error(\"Invalid event\");\n                    const event: SignedNostrEvent = {\n                        id: ndkEvent.id,\n                        sig: ndkEvent.sig,\n                        pubkey: ndkEvent.pubkey,\n                        signatureVerified: ndkEvent.signatureVerified || false,\n                        content: ndkEvent.content,\n                        created_at: ndkEvent.created_at,\n                        kind: ndkEvent.kind,\n                        tags: ndkEvent.tags,\n                        relays: new Set(Array.from(relaySet?.relays ?? []).map((r: NDKRelay) => r.url)),\n                    };\n                    await onEvent(sub, event);\n                }\n            } catch (e) {\n                LOGGER.error(\"Invalid event\", e);\n            }\n        });\n        ndkSub.on(\"close\", async () => {\n            try {\n                if (onClose) await onClose(sub);\n            } catch (e) {\n                LOGGER.error(\"Invalid event\", e);\n            }\n        });\n        ndkSub.on(\"eose\", async () => {\n            try {\n                if (onEose) await onEose(sub);\n            } catch (e) {\n                LOGGER.error(\"Invalid event\", e);\n            }\n        });\n        await ndkSub.start();\n        return sub;\n    }\n\n    public async encrypt(recipient: string, data: string, senderKeyPair: NostrKeyPair): Promise<string> {\n        const signer = await this.getSigner(senderKeyPair);\n        const recipientUser: NDKUser = new NDKUser({\n            pubkey: recipient,\n        });\n        const res = await signer?.nip04Encrypt(recipientUser, data);\n        if (!res) throw new Error(\"Failed to encrypt\");\n        return res;\n    }\n\n    public async decrypt(sender: string, data: string, receiverKeyPair: NostrKeyPair): Promise<string> {\n        const signer = await this.getSigner(receiverKeyPair);\n        const senderUser: NDKUser = new NDKUser({\n            pubkey: sender,\n        });\n        const res = await signer?.nip04Decrypt(senderUser, data);\n        if (!res) throw new Error(\"Failed to decrypt\");\n        return res;\n    }\n\n    public newKeyPair(privKey?: string): NostrKeyPair {\n        const localUser: NDKPrivateKeySigner = privKey ? new NDKPrivateKeySigner(privKey) : NDKPrivateKeySigner.generate();\n        return {\n            getPubKey: async () => {\n                await localUser.blockUntilReady();\n                return (await localUser.user()).pubkey;\n            },\n            priv: async () => {\n                await localUser.blockUntilReady();\n                return localUser.privateKey || \"\";\n            },\n        };\n    }\n}\n","let getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n    if (!getRandomValues) {\n        if (typeof crypto === 'undefined' || !crypto.getRandomValues) {\n            throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n        }\n        getRandomValues = crypto.getRandomValues.bind(crypto);\n    }\n    return getRandomValues(rnds8);\n}\n","import validate from './validate.js';\nconst byteToHex = [];\nfor (let i = 0; i < 256; ++i) {\n    byteToHex.push((i + 0x100).toString(16).slice(1));\n}\nexport function unsafeStringify(arr, offset = 0) {\n    return (byteToHex[arr[offset + 0]] +\n        byteToHex[arr[offset + 1]] +\n        byteToHex[arr[offset + 2]] +\n        byteToHex[arr[offset + 3]] +\n        '-' +\n        byteToHex[arr[offset + 4]] +\n        byteToHex[arr[offset + 5]] +\n        '-' +\n        byteToHex[arr[offset + 6]] +\n        byteToHex[arr[offset + 7]] +\n        '-' +\n        byteToHex[arr[offset + 8]] +\n        byteToHex[arr[offset + 9]] +\n        '-' +\n        byteToHex[arr[offset + 10]] +\n        byteToHex[arr[offset + 11]] +\n        byteToHex[arr[offset + 12]] +\n        byteToHex[arr[offset + 13]] +\n        byteToHex[arr[offset + 14]] +\n        byteToHex[arr[offset + 15]]).toLowerCase();\n}\nfunction stringify(arr, offset = 0) {\n    const uuid = unsafeStringify(arr, offset);\n    if (!validate(uuid)) {\n        throw TypeError('Stringified UUID is invalid');\n    }\n    return uuid;\n}\nexport default stringify;\n","import rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\nconst _state = {};\nfunction v7(options, buf, offset) {\n    let bytes;\n    if (options) {\n        bytes = v7Bytes(options.random ?? options.rng?.() ?? rng(), options.msecs, options.seq, buf, offset);\n    }\n    else {\n        const now = Date.now();\n        const rnds = rng();\n        updateV7State(_state, now, rnds);\n        bytes = v7Bytes(rnds, _state.msecs, _state.seq, buf, offset);\n    }\n    return buf ? bytes : unsafeStringify(bytes);\n}\nexport function updateV7State(state, now, rnds) {\n    state.msecs ??= -Infinity;\n    state.seq ??= 0;\n    if (now > state.msecs) {\n        state.seq = (rnds[6] << 23) | (rnds[7] << 16) | (rnds[8] << 8) | rnds[9];\n        state.msecs = now;\n    }\n    else {\n        state.seq = (state.seq + 1) | 0;\n        if (state.seq === 0) {\n            state.msecs++;\n        }\n    }\n    return state;\n}\nfunction v7Bytes(rnds, msecs, seq, buf, offset = 0) {\n    if (rnds.length < 16) {\n        throw new Error('Random bytes length must be >= 16');\n    }\n    if (!buf) {\n        buf = new Uint8Array(16);\n        offset = 0;\n    }\n    else {\n        if (offset < 0 || offset + 16 > buf.length) {\n            throw new RangeError(`UUID byte range ${offset}:${offset + 15} is out of buffer bounds`);\n        }\n    }\n    msecs ??= Date.now();\n    seq ??= ((rnds[6] * 0x7f) << 24) | (rnds[7] << 16) | (rnds[8] << 8) | rnds[9];\n    buf[offset++] = (msecs / 0x10000000000) & 0xff;\n    buf[offset++] = (msecs / 0x100000000) & 0xff;\n    buf[offset++] = (msecs / 0x1000000) & 0xff;\n    buf[offset++] = (msecs / 0x10000) & 0xff;\n    buf[offset++] = (msecs / 0x100) & 0xff;\n    buf[offset++] = msecs & 0xff;\n    buf[offset++] = 0x70 | ((seq >>> 28) & 0x0f);\n    buf[offset++] = (seq >>> 20) & 0xff;\n    buf[offset++] = 0x80 | ((seq >>> 14) & 0x3f);\n    buf[offset++] = (seq >>> 6) & 0xff;\n    buf[offset++] = ((seq << 2) & 0xff) | (rnds[10] & 0x03);\n    buf[offset++] = rnds[11];\n    buf[offset++] = rnds[12];\n    buf[offset++] = rnds[13];\n    buf[offset++] = rnds[14];\n    buf[offset++] = rnds[15];\n    return buf;\n}\nexport default v7;\n","export const ANNOUNCE_INTERVAL = 10 * 1000;\nexport const PEER_EXPIRATION = 5 * 60 * 1000;\nexport const GC_INTERVAL = 60 * 1000;\nexport const KIND = 29999;\nexport const CONNECTING_TIMEOUT = 2 * 60 * 1000;\nexport const P2P_TIMEOUT = 60 * 1000;\nexport const PUBLIC_STUN_SERVERS = [\n    \"stun.cloudflare.com:3478\",\n    \"stun.l.google.com:19302\",\n    \"stun.l.google.com:5349\",\n    \"stun1.l.google.com:3478\",\n    \"stun1.l.google.com:5349\",\n    \"stun2.l.google.com:19302\",\n    \"stun2.l.google.com:5349\",\n    \"stun3.l.google.com:3478\",\n    \"stun3.l.google.com:5349\",\n    \"stun4.l.google.com:19302\",\n    \"stun4.l.google.com:5349\",\n    \"stunserver2024.stunprotocol.org:3478\",\n];\n\nexport type NostrRTCSettings = {\n    announceInterval: number;\n    peerExpiration: number;\n    gcInterval: number;\n    kind: number;\n    connectionAttemptTimeout: number;\n    p2pAttemptTimeout: number;\n};\n\nexport default {\n    announceInterval: ANNOUNCE_INTERVAL,\n    peerExpiration: PEER_EXPIRATION,\n    gcInterval: GC_INTERVAL,\n    kind: KIND,\n    connectionAttemptTimeout: CONNECTING_TIMEOUT,\n    p2pAttemptTimeout: P2P_TIMEOUT,\n} as NostrRTCSettings;\n","import { PeerInfo } from \"./NostrRTC\";\nimport { EventEmitter } from \"tseep\";\nimport { getLogger } from \"./logger\";\nimport { v7 as uuidv7 } from \"uuid\";\nimport { NostrTURN } from \"./NostrTURN\";\nimport DefaultNostrRTCSettings, { NostrRTCSettings } from \"./NostrRTCSettings\";\n\nconst LOGGER = getLogger(\"nostrtc:NostrRTCConnection\");\n\nexport enum ConnectionStatus {\n    disconnected = \"disconnected\",\n    connecting = \"connecting\",\n    connected = \"connected\",\n}\n\nexport class NostrRTCPeer extends EventEmitter<{\n    candidates: (conn: NostrRTCPeer, candidates: RTCIceCandidate[]) => void;\n\n    ready: (conn: NostrRTCPeer) => void;\n    close: (conn: NostrRTCPeer, msg?: string | Error) => void;\n    error: (conn: NostrRTCPeer, error: Error) => void;\n\n    data: (conn: NostrRTCPeer, data: Uint8Array) => void;\n\n    p2pState: (conn: NostrRTCPeer, isP2P: boolean) => void;\n}> {\n    private readonly localIceCandidates: RTCIceCandidate[] = [];\n    private readonly connectionId: string;\n    private readonly rtcConnection?: RTCPeerConnection;\n    private readonly info: PeerInfo;\n    private readonly settings: NostrRTCSettings;\n\n    private channel?: Promise<RTCDataChannel>;\n    private stopped?: boolean;\n\n    private status: ConnectionStatus;\n    private lastStatusUpdate: number = Date.now();\n\n    private candidateEmissionTimeout?: any;\n    private candidateEmissionLoop?: any;\n    private isChannelReady: boolean = false;\n    private _useTURN: boolean = false;\n    private ready: boolean = false;\n    private turn?: NostrTURN;\n\n    constructor(info: PeerInfo, stunServers: string[], connectionId?: string, settings: NostrRTCSettings = DefaultNostrRTCSettings) {\n        super();\n        this.connectionId = connectionId ?? uuidv7();\n        this.info = info;\n        this.settings = settings;\n        this.status = ConnectionStatus.connecting;\n\n        this.on(\"ready\", async () => {\n            this.setStatus(ConnectionStatus.connected);\n        });\n\n        if (typeof RTCPeerConnection === \"function\") {\n            const switchTOTurn = setTimeout(() => {\n                this.useTURN(true);\n            }, settings.p2pAttemptTimeout);\n\n            this.rtcConnection = new RTCPeerConnection({ iceServers: stunServers.map((s) => ({ urls: \"stun:\" + s })) });\n            this.channel = new Promise((resolve) => {\n                this.rtcConnection!.ondatachannel = (e) => {\n                    const channel = e.channel;\n                    this.initDataChannel(e.channel);\n                    clearTimeout(switchTOTurn);\n                    resolve(channel);\n                };\n            });\n\n            const emitCandidates = () => {\n                if (this.candidateEmissionTimeout) clearTimeout(this.candidateEmissionTimeout);\n\n                this.candidateEmissionTimeout = setTimeout(() => {\n                    this.emit(\"candidates\", this, this.localIceCandidates);\n                }, 1000);\n            };\n\n            this.rtcConnection.onicecandidate = (e) => {\n                let updated = false;\n                if (e.candidate) {\n                    if (!this.localIceCandidates.includes(e.candidate)) {\n                        this.localIceCandidates.push(e.candidate);\n                        updated = true;\n                    }\n                }\n                if (updated) {\n                    emitCandidates();\n                }\n            };\n\n            this.rtcConnection.oniceconnectionstatechange = () => {\n                const useTURN = this.rtcConnection!.iceConnectionState === \"failed\";\n                this.useTURN(useTURN);\n            };\n\n            this.candidateEmissionLoop = setInterval(() => {\n                emitCandidates();\n            }, 10000);\n        }\n    }\n\n    public useTURN(useTURN: boolean) {\n        if (this._useTURN !== useTURN) {\n            this.emit(\"p2pState\", this, !useTURN);\n        }\n        this._useTURN = useTURN;\n        if (useTURN) {\n            LOGGER.warn(\"Switching to TURN\");\n            this.markReady();\n        } else {\n            LOGGER.info(\"Switching to P2P\");\n        }\n    }\n\n    private markReady() {\n        if (this.ready) return;\n        this.ready = true;\n        this.emit(\"ready\", this);\n    }\n\n    public setStatus(status: ConnectionStatus) {\n        this.status = status;\n        this.lastStatusUpdate = Date.now();\n    }\n\n    public getStatus(): ConnectionStatus {\n        if (this.status === ConnectionStatus.connecting && Date.now() - this.lastStatusUpdate > this.settings.connectionAttemptTimeout) {\n            return ConnectionStatus.disconnected;\n        }\n        return this.status;\n    }\n\n    public getConnectionId(): string {\n        return this.connectionId;\n    }\n\n    public getInfo() {\n        return this.info;\n    }\n\n    public getLocalIceCandidates(): RTCIceCandidate[] {\n        return this.localIceCandidates;\n    }\n\n    private initDataChannel(channel: RTCDataChannel) {\n        const onOpen = () => {\n            channel.binaryType = \"arraybuffer\";\n            channel.addEventListener(\"message\", (e) => {\n                const data: Uint8Array = e.data;\n                this.emit(\"data\", this, data);\n            });\n            this.markReady();\n            channel.removeEventListener(\"open\", onOpen);\n        };\n\n        channel.addEventListener(\"close\", () => {\n            this.emit(\"close\", this);\n        });\n\n        channel.addEventListener(\"error\", (e: RTCErrorEvent) => {\n            this.emit(\"error\", this, e.error);\n        });\n\n        if (channel.readyState === \"open\") {\n            onOpen();\n        } else {\n            channel.addEventListener(\"open\", onOpen);\n        }\n    }\n\n    public async connect(): Promise<RTCSessionDescriptionInit | undefined> {\n        if (!this.rtcConnection) {\n            this.useTURN(true);\n            return undefined;\n        }\n        const channel = this.rtcConnection.createDataChannel(`nostr_rtc:${this.connectionId}`);\n        this.initDataChannel(channel);\n        this.channel = Promise.resolve(channel);\n\n        const offer = await this.rtcConnection.createOffer();\n        await this.rtcConnection?.setLocalDescription(offer);\n\n        return {\n            sdp: offer.sdp,\n            type: offer.type,\n        };\n    }\n\n    public async open(description: RTCSessionDescriptionInit): Promise<RTCSessionDescriptionInit | undefined> {\n        if (!this.rtcConnection || !description) {\n            this.useTURN(true);\n            return undefined;\n        }\n        await this.rtcConnection.setRemoteDescription(new RTCSessionDescription(description));\n        const answer = await this.rtcConnection.createAnswer();\n        if (!answer) throw new Error(\"No answer\");\n        await this.rtcConnection?.setLocalDescription(answer);\n        return {\n            sdp: answer.sdp,\n            type: answer.type,\n        };\n    }\n\n    public async setRemoteDescription(description: RTCSessionDescriptionInit | undefined) {\n        if (!this.rtcConnection || !description) {\n            this.useTURN(true);\n            return;\n        }\n        await this.rtcConnection.setRemoteDescription(new RTCSessionDescription(description));\n    }\n\n    public async addRemoteIceCandidates(candidates: RTCIceCandidate[]) {\n        if (!this.rtcConnection) return;\n        for (const candidate of candidates) {\n            await this.rtcConnection?.addIceCandidate(candidate);\n        }\n    }\n\n    public async close(msg?: Error | string) {\n        if (this.stopped) return;\n        const channel = await this.channel;\n        this.stopped = true;\n        if (channel) {\n            channel.close();\n        }\n        if (this.rtcConnection) {\n            this.rtcConnection.close();\n        }\n        this.setStatus(ConnectionStatus.disconnected);\n        if (msg && msg instanceof Error) {\n            this.emit(\"error\", this, msg);\n        }\n        this.emit(\"close\", this, msg);\n        if (this.candidateEmissionTimeout) clearTimeout(this.candidateEmissionTimeout);\n        if (this.candidateEmissionLoop) clearInterval(this.candidateEmissionLoop);\n        if (this.turn) {\n            await this.turn.close();\n        }\n    }\n\n    private async getChannel(): Promise<RTCDataChannel> {\n        if (!this.channel) throw new Error(\"No channel\");\n        const channel = await this.channel;\n\n        if (channel.readyState !== \"open\") {\n            await new Promise((resolve, reject) => {\n                const onOpen = () => {\n                    channel.removeEventListener(\"open\", onOpen);\n                    resolve(undefined);\n                };\n                channel.addEventListener(\"error\", (e) => {\n                    LOGGER.error(\"Channel error\", e);\n                    reject(e);\n                });\n                channel.addEventListener(\"close\", () => {\n                    reject(new Error(\"Channel closed\"));\n                });\n                channel.addEventListener(\"open\", onOpen);\n            });\n        }\n        if (!this.isChannelReady) {\n            channel.addEventListener(\"error\", (e) => {\n                this.emit(\"error\", this, e.error);\n            });\n            channel.addEventListener(\"close\", () => {\n                this.close(\"Channel closed\").catch((e) => {\n                    LOGGER.error(\"Failed to close connection\", e);\n                });\n            });\n            this.isChannelReady = true;\n        }\n        return channel;\n    }\n\n    public setTURN(turn: NostrTURN) {\n        this.turn = turn;\n        this.turn.on(\"data\", (peer: PeerInfo, data: Uint8Array) => {\n            this.emit(\"data\", this, data);\n        });\n    }\n\n    public isTURN(): boolean {\n        return !!this.turn && this._useTURN;\n    }\n\n    public async write(data: Uint8Array) {\n        const useTURN = this.isTURN();\n        if (useTURN) {\n            await this.turn?.write(data);\n        } else {\n            const channel = await this.getChannel();\n            channel.send(data);\n        }\n    }\n}\n","\n/*! pako 2.1.0 https://github.com/nodeca/pako @license (MIT AND Zlib) */\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n/* eslint-disable space-unary-ops */\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n//const Z_FILTERED          = 1;\n//const Z_HUFFMAN_ONLY      = 2;\n//const Z_RLE               = 3;\nconst Z_FIXED$1               = 4;\n//const Z_DEFAULT_STRATEGY  = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\nconst Z_BINARY              = 0;\nconst Z_TEXT                = 1;\n//const Z_ASCII             = 1; // = Z_TEXT\nconst Z_UNKNOWN$1             = 2;\n\n/*============================================================================*/\n\n\nfunction zero$1(buf) { let len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n// From zutil.h\n\nconst STORED_BLOCK = 0;\nconst STATIC_TREES = 1;\nconst DYN_TREES    = 2;\n/* The three kinds of block type */\n\nconst MIN_MATCH$1    = 3;\nconst MAX_MATCH$1    = 258;\n/* The minimum and maximum match lengths */\n\n// From deflate.h\n/* ===========================================================================\n * Internal compression state.\n */\n\nconst LENGTH_CODES$1  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\n\nconst LITERALS$1      = 256;\n/* number of literal bytes 0..255 */\n\nconst L_CODES$1       = LITERALS$1 + 1 + LENGTH_CODES$1;\n/* number of Literal or Length codes, including the END_BLOCK code */\n\nconst D_CODES$1       = 30;\n/* number of distance codes */\n\nconst BL_CODES$1      = 19;\n/* number of codes used to transfer the bit lengths */\n\nconst HEAP_SIZE$1     = 2 * L_CODES$1 + 1;\n/* maximum heap size */\n\nconst MAX_BITS$1      = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst Buf_size      = 16;\n/* size of bit buffer in bi_buf */\n\n\n/* ===========================================================================\n * Constants\n */\n\nconst MAX_BL_BITS = 7;\n/* Bit length codes must not exceed MAX_BL_BITS bits */\n\nconst END_BLOCK   = 256;\n/* end of block literal code */\n\nconst REP_3_6     = 16;\n/* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\nconst REPZ_3_10   = 17;\n/* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\nconst REPZ_11_138 = 18;\n/* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\n/* eslint-disable comma-spacing,array-bracket-spacing */\nconst extra_lbits =   /* extra bits for each length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0]);\n\nconst extra_dbits =   /* extra bits for each distance code */\n  new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]);\n\nconst extra_blbits =  /* extra bits for each bit length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7]);\n\nconst bl_order =\n  new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);\n/* eslint-enable comma-spacing,array-bracket-spacing */\n\n/* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */\n\n/* ===========================================================================\n * Local data. These are initialized only once.\n */\n\n// We pre-fill arrays with 0 to avoid uninitialized gaps\n\nconst DIST_CODE_LEN = 512; /* see definition of array dist_code below */\n\n// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1\nconst static_ltree  = new Array((L_CODES$1 + 2) * 2);\nzero$1(static_ltree);\n/* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */\n\nconst static_dtree  = new Array(D_CODES$1 * 2);\nzero$1(static_dtree);\n/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */\n\nconst _dist_code    = new Array(DIST_CODE_LEN);\nzero$1(_dist_code);\n/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */\n\nconst _length_code  = new Array(MAX_MATCH$1 - MIN_MATCH$1 + 1);\nzero$1(_length_code);\n/* length code for each normalized match length (0 == MIN_MATCH) */\n\nconst base_length   = new Array(LENGTH_CODES$1);\nzero$1(base_length);\n/* First normalized length for each code (0 = MIN_MATCH) */\n\nconst base_dist     = new Array(D_CODES$1);\nzero$1(base_dist);\n/* First normalized distance for each code (0 = distance of 1) */\n\n\nfunction StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {\n\n  this.static_tree  = static_tree;  /* static tree or NULL */\n  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */\n  this.extra_base   = extra_base;   /* base index for extra_bits */\n  this.elems        = elems;        /* max number of elements in the tree */\n  this.max_length   = max_length;   /* max bit length for the codes */\n\n  // show if `static_tree` has data or dummy - needed for monomorphic objects\n  this.has_stree    = static_tree && static_tree.length;\n}\n\n\nlet static_l_desc;\nlet static_d_desc;\nlet static_bl_desc;\n\n\nfunction TreeDesc(dyn_tree, stat_desc) {\n  this.dyn_tree = dyn_tree;     /* the dynamic tree */\n  this.max_code = 0;            /* largest code with non zero frequency */\n  this.stat_desc = stat_desc;   /* the corresponding static tree */\n}\n\n\n\nconst d_code = (dist) => {\n\n  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];\n};\n\n\n/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */\nconst put_short = (s, w) => {\n//    put_byte(s, (uch)((w) & 0xff));\n//    put_byte(s, (uch)((ush)(w) >> 8));\n  s.pending_buf[s.pending++] = (w) & 0xff;\n  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;\n};\n\n\n/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nconst send_bits = (s, value, length) => {\n\n  if (s.bi_valid > (Buf_size - length)) {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    put_short(s, s.bi_buf);\n    s.bi_buf = value >> (Buf_size - s.bi_valid);\n    s.bi_valid += length - Buf_size;\n  } else {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    s.bi_valid += length;\n  }\n};\n\n\nconst send_code = (s, c, tree) => {\n\n  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);\n};\n\n\n/* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nconst bi_reverse = (code, len) => {\n\n  let res = 0;\n  do {\n    res |= code & 1;\n    code >>>= 1;\n    res <<= 1;\n  } while (--len > 0);\n  return res >>> 1;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */\nconst bi_flush = (s) => {\n\n  if (s.bi_valid === 16) {\n    put_short(s, s.bi_buf);\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n\n  } else if (s.bi_valid >= 8) {\n    s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n    s.bi_buf >>= 8;\n    s.bi_valid -= 8;\n  }\n};\n\n\n/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nconst gen_bitlen = (s, desc) => {\n//    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n\n  const tree            = desc.dyn_tree;\n  const max_code        = desc.max_code;\n  const stree           = desc.stat_desc.static_tree;\n  const has_stree       = desc.stat_desc.has_stree;\n  const extra           = desc.stat_desc.extra_bits;\n  const base            = desc.stat_desc.extra_base;\n  const max_length      = desc.stat_desc.max_length;\n  let h;              /* heap index */\n  let n, m;           /* iterate over the tree elements */\n  let bits;           /* bit length */\n  let xbits;          /* extra bits */\n  let f;              /* frequency */\n  let overflow = 0;   /* number of elements with bit length too large */\n\n  for (bits = 0; bits <= MAX_BITS$1; bits++) {\n    s.bl_count[bits] = 0;\n  }\n\n  /* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\n  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */\n\n  for (h = s.heap_max + 1; h < HEAP_SIZE$1; h++) {\n    n = s.heap[h];\n    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;\n    if (bits > max_length) {\n      bits = max_length;\n      overflow++;\n    }\n    tree[n * 2 + 1]/*.Len*/ = bits;\n    /* We overwrite tree[n].Dad which is no longer needed */\n\n    if (n > max_code) { continue; } /* not a leaf node */\n\n    s.bl_count[bits]++;\n    xbits = 0;\n    if (n >= base) {\n      xbits = extra[n - base];\n    }\n    f = tree[n * 2]/*.Freq*/;\n    s.opt_len += f * (bits + xbits);\n    if (has_stree) {\n      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);\n    }\n  }\n  if (overflow === 0) { return; }\n\n  // Tracev((stderr,\"\\nbit length overflow\\n\"));\n  /* This happens for example on obj2 and pic of the Calgary corpus */\n\n  /* Find the first bit length which could increase: */\n  do {\n    bits = max_length - 1;\n    while (s.bl_count[bits] === 0) { bits--; }\n    s.bl_count[bits]--;      /* move one leaf down the tree */\n    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */\n    s.bl_count[max_length]--;\n    /* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */\n    overflow -= 2;\n  } while (overflow > 0);\n\n  /* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\n  for (bits = max_length; bits !== 0; bits--) {\n    n = s.bl_count[bits];\n    while (n !== 0) {\n      m = s.heap[--h];\n      if (m > max_code) { continue; }\n      if (tree[m * 2 + 1]/*.Len*/ !== bits) {\n        // Tracev((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;\n        tree[m * 2 + 1]/*.Len*/ = bits;\n      }\n      n--;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\nconst gen_codes = (tree, max_code, bl_count) => {\n//    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n\n  const next_code = new Array(MAX_BITS$1 + 1); /* next code value for each bit length */\n  let code = 0;              /* running code value */\n  let bits;                  /* bit index */\n  let n;                     /* code index */\n\n  /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\n  for (bits = 1; bits <= MAX_BITS$1; bits++) {\n    code = (code + bl_count[bits - 1]) << 1;\n    next_code[bits] = code;\n  }\n  /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n  //        \"inconsistent bit counts\");\n  //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n  for (n = 0;  n <= max_code; n++) {\n    let len = tree[n * 2 + 1]/*.Len*/;\n    if (len === 0) { continue; }\n    /* Now reverse the bits */\n    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);\n\n    //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n  }\n};\n\n\n/* ===========================================================================\n * Initialize the various 'constant' tables.\n */\nconst tr_static_init = () => {\n\n  let n;        /* iterates over tree elements */\n  let bits;     /* bit counter */\n  let length;   /* length value */\n  let code;     /* code value */\n  let dist;     /* distance index */\n  const bl_count = new Array(MAX_BITS$1 + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  // do check in _tr_init()\n  //if (static_init_done) return;\n\n  /* For some embedded targets, global variables are not initialized: */\n/*#ifdef NO_INIT_GLOBAL_POINTERS\n  static_l_desc.static_tree = static_ltree;\n  static_l_desc.extra_bits = extra_lbits;\n  static_d_desc.static_tree = static_dtree;\n  static_d_desc.extra_bits = extra_dbits;\n  static_bl_desc.extra_bits = extra_blbits;\n#endif*/\n\n  /* Initialize the mapping length (0..255) -> length code (0..28) */\n  length = 0;\n  for (code = 0; code < LENGTH_CODES$1 - 1; code++) {\n    base_length[code] = length;\n    for (n = 0; n < (1 << extra_lbits[code]); n++) {\n      _length_code[length++] = code;\n    }\n  }\n  //Assert (length == 256, \"tr_static_init: length != 256\");\n  /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n  _length_code[length - 1] = code;\n\n  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n  dist = 0;\n  for (code = 0; code < 16; code++) {\n    base_dist[code] = dist;\n    for (n = 0; n < (1 << extra_dbits[code]); n++) {\n      _dist_code[dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: dist != 256\");\n  dist >>= 7; /* from now on, all distances are divided by 128 */\n  for (; code < D_CODES$1; code++) {\n    base_dist[code] = dist << 7;\n    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {\n      _dist_code[256 + dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n\n  /* Construct the codes of the static literal tree */\n  for (bits = 0; bits <= MAX_BITS$1; bits++) {\n    bl_count[bits] = 0;\n  }\n\n  n = 0;\n  while (n <= 143) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  while (n <= 255) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 9;\n    n++;\n    bl_count[9]++;\n  }\n  while (n <= 279) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 7;\n    n++;\n    bl_count[7]++;\n  }\n  while (n <= 287) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  /* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\n  gen_codes(static_ltree, L_CODES$1 + 1, bl_count);\n\n  /* The static distance tree is trivial: */\n  for (n = 0; n < D_CODES$1; n++) {\n    static_dtree[n * 2 + 1]/*.Len*/ = 5;\n    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);\n  }\n\n  // Now data ready and we can init static trees\n  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS$1 + 1, L_CODES$1, MAX_BITS$1);\n  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES$1, MAX_BITS$1);\n  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES$1, MAX_BL_BITS);\n\n  //static_init_done = true;\n};\n\n\n/* ===========================================================================\n * Initialize a new block.\n */\nconst init_block = (s) => {\n\n  let n; /* iterates over tree elements */\n\n  /* Initialize the trees. */\n  for (n = 0; n < L_CODES$1;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < D_CODES$1;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < BL_CODES$1; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }\n\n  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;\n  s.opt_len = s.static_len = 0;\n  s.sym_next = s.matches = 0;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */\nconst bi_windup = (s) =>\n{\n  if (s.bi_valid > 8) {\n    put_short(s, s.bi_buf);\n  } else if (s.bi_valid > 0) {\n    //put_byte(s, (Byte)s->bi_buf);\n    s.pending_buf[s.pending++] = s.bi_buf;\n  }\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n};\n\n/* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nconst smaller = (tree, n, m, depth) => {\n\n  const _n2 = n * 2;\n  const _m2 = m * 2;\n  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||\n         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));\n};\n\n/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nconst pqdownheap = (s, tree, k) => {\n//    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n\n  const v = s.heap[k];\n  let j = k << 1;  /* left son of k */\n  while (j <= s.heap_len) {\n    /* Set j to the smallest of the two sons: */\n    if (j < s.heap_len &&\n      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {\n      j++;\n    }\n    /* Exit if v is smaller than both sons */\n    if (smaller(tree, v, s.heap[j], s.depth)) { break; }\n\n    /* Exchange v with the smallest son */\n    s.heap[k] = s.heap[j];\n    k = j;\n\n    /* And continue down the tree, setting j to the left son of k */\n    j <<= 1;\n  }\n  s.heap[k] = v;\n};\n\n\n// inlined manually\n// const SMALLEST = 1;\n\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */\nconst compress_block = (s, ltree, dtree) => {\n//    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n\n  let dist;           /* distance of matched string */\n  let lc;             /* match length or unmatched char (if dist == 0) */\n  let sx = 0;         /* running index in sym_buf */\n  let code;           /* the code to send */\n  let extra;          /* number of extra bits to send */\n\n  if (s.sym_next !== 0) {\n    do {\n      dist = s.pending_buf[s.sym_buf + sx++] & 0xff;\n      dist += (s.pending_buf[s.sym_buf + sx++] & 0xff) << 8;\n      lc = s.pending_buf[s.sym_buf + sx++];\n      if (dist === 0) {\n        send_code(s, lc, ltree); /* send a literal byte */\n        //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n      } else {\n        /* Here, lc is the match length - MIN_MATCH */\n        code = _length_code[lc];\n        send_code(s, code + LITERALS$1 + 1, ltree); /* send the length code */\n        extra = extra_lbits[code];\n        if (extra !== 0) {\n          lc -= base_length[code];\n          send_bits(s, lc, extra);       /* send the extra length bits */\n        }\n        dist--; /* dist is now the match distance - 1 */\n        code = d_code(dist);\n        //Assert (code < D_CODES, \"bad d_code\");\n\n        send_code(s, code, dtree);       /* send the distance code */\n        extra = extra_dbits[code];\n        if (extra !== 0) {\n          dist -= base_dist[code];\n          send_bits(s, dist, extra);   /* send the extra distance bits */\n        }\n      } /* literal or match pair ? */\n\n      /* Check that the overlay between pending_buf and sym_buf is ok: */\n      //Assert(s->pending < s->lit_bufsize + sx, \"pendingBuf overflow\");\n\n    } while (sx < s.sym_next);\n  }\n\n  send_code(s, END_BLOCK, ltree);\n};\n\n\n/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nconst build_tree = (s, desc) => {\n//    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n\n  const tree     = desc.dyn_tree;\n  const stree    = desc.stat_desc.static_tree;\n  const has_stree = desc.stat_desc.has_stree;\n  const elems    = desc.stat_desc.elems;\n  let n, m;          /* iterate over heap elements */\n  let max_code = -1; /* largest code with non zero frequency */\n  let node;          /* new node being created */\n\n  /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\n  s.heap_len = 0;\n  s.heap_max = HEAP_SIZE$1;\n\n  for (n = 0; n < elems; n++) {\n    if (tree[n * 2]/*.Freq*/ !== 0) {\n      s.heap[++s.heap_len] = max_code = n;\n      s.depth[n] = 0;\n\n    } else {\n      tree[n * 2 + 1]/*.Len*/ = 0;\n    }\n  }\n\n  /* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\n  while (s.heap_len < 2) {\n    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);\n    tree[node * 2]/*.Freq*/ = 1;\n    s.depth[node] = 0;\n    s.opt_len--;\n\n    if (has_stree) {\n      s.static_len -= stree[node * 2 + 1]/*.Len*/;\n    }\n    /* node is 0 or 1 so it does not have extra bits */\n  }\n  desc.max_code = max_code;\n\n  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */\n  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }\n\n  /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\n  node = elems;              /* next internal node of the tree */\n  do {\n    //pqremove(s, tree, n);  /* n = node of least frequency */\n    /*** pqremove ***/\n    n = s.heap[1/*SMALLEST*/];\n    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n    /***/\n\n    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */\n\n    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */\n    s.heap[--s.heap_max] = m;\n\n    /* Create a new node father of n and m */\n    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;\n    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;\n\n    /* and insert the new node in the heap */\n    s.heap[1/*SMALLEST*/] = node++;\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n\n  } while (s.heap_len >= 2);\n\n  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];\n\n  /* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\n  gen_bitlen(s, desc);\n\n  /* The field len is now set, we can generate the bit codes */\n  gen_codes(tree, max_code, s.bl_count);\n};\n\n\n/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */\nconst scan_tree = (s, tree, max_code) => {\n//    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      s.bl_tree[curlen * 2]/*.Freq*/ += count;\n\n    } else if (curlen !== 0) {\n\n      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }\n      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;\n\n    } else if (count <= 10) {\n      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;\n\n    } else {\n      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;\n    }\n\n    count = 0;\n    prevlen = curlen;\n\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */\nconst send_tree = (s, tree, max_code) => {\n//    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  /* tree[max_code+1].Len = -1; */  /* guard already set */\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);\n\n    } else if (curlen !== 0) {\n      if (curlen !== prevlen) {\n        send_code(s, curlen, s.bl_tree);\n        count--;\n      }\n      //Assert(count >= 3 && count <= 6, \" 3_6?\");\n      send_code(s, REP_3_6, s.bl_tree);\n      send_bits(s, count - 3, 2);\n\n    } else if (count <= 10) {\n      send_code(s, REPZ_3_10, s.bl_tree);\n      send_bits(s, count - 3, 3);\n\n    } else {\n      send_code(s, REPZ_11_138, s.bl_tree);\n      send_bits(s, count - 11, 7);\n    }\n\n    count = 0;\n    prevlen = curlen;\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nconst build_bl_tree = (s) => {\n\n  let max_blindex;  /* index of last bit length code of non zero freq */\n\n  /* Determine the bit length frequencies for literal and distance trees */\n  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);\n  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);\n\n  /* Build the bit length tree: */\n  build_tree(s, s.bl_desc);\n  /* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n  /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\n  for (max_blindex = BL_CODES$1 - 1; max_blindex >= 3; max_blindex--) {\n    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {\n      break;\n    }\n  }\n  /* Update opt_len to include the bit length tree and counts */\n  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\n  //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n  //        s->opt_len, s->static_len));\n\n  return max_blindex;\n};\n\n\n/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\nconst send_all_trees = (s, lcodes, dcodes, blcodes) => {\n//    deflate_state *s;\n//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n\n  let rank;                    /* index in bl_order */\n\n  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n  //        \"too many codes\");\n  //Tracev((stderr, \"\\nbl counts: \"));\n  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */\n  send_bits(s, dcodes - 1,   5);\n  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */\n  for (rank = 0; rank < blcodes; rank++) {\n    //Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);\n  }\n  //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */\n  //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */\n  //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n};\n\n\n/* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"block list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"allow list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */\nconst detect_data_type = (s) => {\n  /* block_mask is the bit mask of block-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */\n  let block_mask = 0xf3ffc07f;\n  let n;\n\n  /* Check for non-textual (\"block-listed\") bytes. */\n  for (n = 0; n <= 31; n++, block_mask >>>= 1) {\n    if ((block_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {\n      return Z_BINARY;\n    }\n  }\n\n  /* Check for textual (\"allow-listed\") bytes. */\n  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||\n      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {\n    return Z_TEXT;\n  }\n  for (n = 32; n < LITERALS$1; n++) {\n    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {\n      return Z_TEXT;\n    }\n  }\n\n  /* There are no \"block-listed\" or \"allow-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */\n  return Z_BINARY;\n};\n\n\nlet static_init_done = false;\n\n/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */\nconst _tr_init$1 = (s) =>\n{\n\n  if (!static_init_done) {\n    tr_static_init();\n    static_init_done = true;\n  }\n\n  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);\n  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);\n  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);\n\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n\n  /* Initialize the first block of the first file: */\n  init_block(s);\n};\n\n\n/* ===========================================================================\n * Send a stored block\n */\nconst _tr_stored_block$1 = (s, buf, stored_len, last) => {\n//DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n\n  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */\n  bi_windup(s);        /* align on byte boundary */\n  put_short(s, stored_len);\n  put_short(s, ~stored_len);\n  if (stored_len) {\n    s.pending_buf.set(s.window.subarray(buf, buf + stored_len), s.pending);\n  }\n  s.pending += stored_len;\n};\n\n\n/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */\nconst _tr_align$1 = (s) => {\n  send_bits(s, STATIC_TREES << 1, 3);\n  send_code(s, END_BLOCK, static_ltree);\n  bi_flush(s);\n};\n\n\n/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and write out the encoded block.\n */\nconst _tr_flush_block$1 = (s, buf, stored_len, last) => {\n//DeflateState *s;\n//charf *buf;       /* input block, or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n\n  let opt_lenb, static_lenb;  /* opt_len and static_len in bytes */\n  let max_blindex = 0;        /* index of last bit length code of non zero freq */\n\n  /* Build the Huffman trees unless a stored block is forced */\n  if (s.level > 0) {\n\n    /* Check if the file is binary or text */\n    if (s.strm.data_type === Z_UNKNOWN$1) {\n      s.strm.data_type = detect_data_type(s);\n    }\n\n    /* Construct the literal and distance trees */\n    build_tree(s, s.l_desc);\n    // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n\n    build_tree(s, s.d_desc);\n    // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n    /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n    /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\n    max_blindex = build_bl_tree(s);\n\n    /* Determine the best encoding. Compute the block lengths in bytes. */\n    opt_lenb = (s.opt_len + 3 + 7) >>> 3;\n    static_lenb = (s.static_len + 3 + 7) >>> 3;\n\n    // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n    //        s->sym_next / 3));\n\n    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }\n\n  } else {\n    // Assert(buf != (char*)0, \"lost buf\");\n    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */\n  }\n\n  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {\n    /* 4: two words for the lengths */\n\n    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */\n    _tr_stored_block$1(s, buf, stored_len, last);\n\n  } else if (s.strategy === Z_FIXED$1 || static_lenb === opt_lenb) {\n\n    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);\n    compress_block(s, static_ltree, static_dtree);\n\n  } else {\n    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);\n    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);\n    compress_block(s, s.dyn_ltree, s.dyn_dtree);\n  }\n  // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n  /* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */\n  init_block(s);\n\n  if (last) {\n    bi_windup(s);\n  }\n  // Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n  //       s->compressed_len-7*last));\n};\n\n/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nconst _tr_tally$1 = (s, dist, lc) => {\n//    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n\n  s.pending_buf[s.sym_buf + s.sym_next++] = dist;\n  s.pending_buf[s.sym_buf + s.sym_next++] = dist >> 8;\n  s.pending_buf[s.sym_buf + s.sym_next++] = lc;\n  if (dist === 0) {\n    /* lc is the unmatched char */\n    s.dyn_ltree[lc * 2]/*.Freq*/++;\n  } else {\n    s.matches++;\n    /* Here, lc is the match length - MIN_MATCH */\n    dist--;             /* dist = match distance - 1 */\n    //Assert((ush)dist < (ush)MAX_DIST(s) &&\n    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n    //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n\n    s.dyn_ltree[(_length_code[lc] + LITERALS$1 + 1) * 2]/*.Freq*/++;\n    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;\n  }\n\n  return (s.sym_next === s.sym_end);\n};\n\nvar _tr_init_1  = _tr_init$1;\nvar _tr_stored_block_1 = _tr_stored_block$1;\nvar _tr_flush_block_1  = _tr_flush_block$1;\nvar _tr_tally_1 = _tr_tally$1;\nvar _tr_align_1 = _tr_align$1;\n\nvar trees = {\n\t_tr_init: _tr_init_1,\n\t_tr_stored_block: _tr_stored_block_1,\n\t_tr_flush_block: _tr_flush_block_1,\n\t_tr_tally: _tr_tally_1,\n\t_tr_align: _tr_align_1\n};\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It isn't worth it to make additional optimizations as in original.\n// Small size is preferable.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst adler32 = (adler, buf, len, pos) => {\n  let s1 = (adler & 0xffff) |0,\n      s2 = ((adler >>> 16) & 0xffff) |0,\n      n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = (s1 + buf[pos++]) |0;\n      s2 = (s2 + s1) |0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return (s1 | (s2 << 16)) |0;\n};\n\n\nvar adler32_1 = adler32;\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// Use ordinary array, since untyped makes no boost here\nconst makeTable = () => {\n  let c, table = [];\n\n  for (var n = 0; n < 256; n++) {\n    c = n;\n    for (var k = 0; k < 8; k++) {\n      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n    }\n    table[n] = c;\n  }\n\n  return table;\n};\n\n// Create table on load. Just 255 signed longs. Not a problem.\nconst crcTable = new Uint32Array(makeTable());\n\n\nconst crc32 = (crc, buf, len, pos) => {\n  const t = crcTable;\n  const end = pos + len;\n\n  crc ^= -1;\n\n  for (let i = pos; i < end; i++) {\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return (crc ^ (-1)); // >>> 0;\n};\n\n\nvar crc32_1 = crc32;\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar messages = {\n  2:      'need dictionary',     /* Z_NEED_DICT       2  */\n  1:      'stream end',          /* Z_STREAM_END      1  */\n  0:      '',                    /* Z_OK              0  */\n  '-1':   'file error',          /* Z_ERRNO         (-1) */\n  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\n  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\n  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\n  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar constants$2 = {\n\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH:         0,\n  Z_PARTIAL_FLUSH:    1,\n  Z_SYNC_FLUSH:       2,\n  Z_FULL_FLUSH:       3,\n  Z_FINISH:           4,\n  Z_BLOCK:            5,\n  Z_TREES:            6,\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK:               0,\n  Z_STREAM_END:       1,\n  Z_NEED_DICT:        2,\n  Z_ERRNO:           -1,\n  Z_STREAM_ERROR:    -2,\n  Z_DATA_ERROR:      -3,\n  Z_MEM_ERROR:       -4,\n  Z_BUF_ERROR:       -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION:         0,\n  Z_BEST_SPEED:             1,\n  Z_BEST_COMPRESSION:       9,\n  Z_DEFAULT_COMPRESSION:   -1,\n\n\n  Z_FILTERED:               1,\n  Z_HUFFMAN_ONLY:           2,\n  Z_RLE:                    3,\n  Z_FIXED:                  4,\n  Z_DEFAULT_STRATEGY:       0,\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY:                 0,\n  Z_TEXT:                   1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN:                2,\n\n  /* The deflate compression method */\n  Z_DEFLATED:               8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst { _tr_init, _tr_stored_block, _tr_flush_block, _tr_tally, _tr_align } = trees;\n\n\n\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH: Z_NO_FLUSH$2, Z_PARTIAL_FLUSH, Z_FULL_FLUSH: Z_FULL_FLUSH$1, Z_FINISH: Z_FINISH$3, Z_BLOCK: Z_BLOCK$1,\n  Z_OK: Z_OK$3, Z_STREAM_END: Z_STREAM_END$3, Z_STREAM_ERROR: Z_STREAM_ERROR$2, Z_DATA_ERROR: Z_DATA_ERROR$2, Z_BUF_ERROR: Z_BUF_ERROR$1,\n  Z_DEFAULT_COMPRESSION: Z_DEFAULT_COMPRESSION$1,\n  Z_FILTERED, Z_HUFFMAN_ONLY, Z_RLE, Z_FIXED, Z_DEFAULT_STRATEGY: Z_DEFAULT_STRATEGY$1,\n  Z_UNKNOWN,\n  Z_DEFLATED: Z_DEFLATED$2\n} = constants$2;\n\n/*============================================================================*/\n\n\nconst MAX_MEM_LEVEL = 9;\n/* Maximum value for memLevel in deflateInit2 */\nconst MAX_WBITS$1 = 15;\n/* 32K LZ77 window */\nconst DEF_MEM_LEVEL = 8;\n\n\nconst LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\nconst LITERALS      = 256;\n/* number of literal bytes 0..255 */\nconst L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\nconst D_CODES       = 30;\n/* number of distance codes */\nconst BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\nconst HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\nconst MAX_BITS  = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst MIN_MATCH = 3;\nconst MAX_MATCH = 258;\nconst MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\n\nconst PRESET_DICT = 0x20;\n\nconst INIT_STATE    =  42;    /* zlib header -> BUSY_STATE */\n//#ifdef GZIP\nconst GZIP_STATE    =  57;    /* gzip header -> BUSY_STATE | EXTRA_STATE */\n//#endif\nconst EXTRA_STATE   =  69;    /* gzip extra block -> NAME_STATE */\nconst NAME_STATE    =  73;    /* gzip file name -> COMMENT_STATE */\nconst COMMENT_STATE =  91;    /* gzip comment -> HCRC_STATE */\nconst HCRC_STATE    = 103;    /* gzip header CRC -> BUSY_STATE */\nconst BUSY_STATE    = 113;    /* deflate -> FINISH_STATE */\nconst FINISH_STATE  = 666;    /* stream complete */\n\nconst BS_NEED_MORE      = 1; /* block not completed, need more input or more output */\nconst BS_BLOCK_DONE     = 2; /* block flush performed */\nconst BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */\nconst BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */\n\nconst OS_CODE = 0x03; // Unix :) . Don't detect, use this default.\n\nconst err = (strm, errorCode) => {\n  strm.msg = messages[errorCode];\n  return errorCode;\n};\n\nconst rank = (f) => {\n  return ((f) * 2) - ((f) > 4 ? 9 : 0);\n};\n\nconst zero = (buf) => {\n  let len = buf.length; while (--len >= 0) { buf[len] = 0; }\n};\n\n/* ===========================================================================\n * Slide the hash table when sliding the window down (could be avoided with 32\n * bit values at the expense of memory usage). We slide even when level == 0 to\n * keep the hash table consistent if we switch back to level > 0 later.\n */\nconst slide_hash = (s) => {\n  let n, m;\n  let p;\n  let wsize = s.w_size;\n\n  n = s.hash_size;\n  p = n;\n  do {\n    m = s.head[--p];\n    s.head[p] = (m >= wsize ? m - wsize : 0);\n  } while (--n);\n  n = wsize;\n//#ifndef FASTEST\n  p = n;\n  do {\n    m = s.prev[--p];\n    s.prev[p] = (m >= wsize ? m - wsize : 0);\n    /* If n is not on any hash chain, prev[n] is garbage but\n     * its value will never be used.\n     */\n  } while (--n);\n//#endif\n};\n\n/* eslint-disable new-cap */\nlet HASH_ZLIB = (s, prev, data) => ((prev << s.hash_shift) ^ data) & s.hash_mask;\n// This hash causes less collisions, https://github.com/nodeca/pako/issues/135\n// But breaks binary compatibility\n//let HASH_FAST = (s, prev, data) => ((prev << 8) + (prev >> 8) + (data << 4)) & s.hash_mask;\nlet HASH = HASH_ZLIB;\n\n\n/* =========================================================================\n * Flush as much pending output as possible. All deflate() output, except for\n * some deflate_stored() output, goes through this function so some\n * applications may wish to modify it to avoid allocating a large\n * strm->next_out buffer and copying into it. (See also read_buf()).\n */\nconst flush_pending = (strm) => {\n  const s = strm.state;\n\n  //_tr_flush_bits(s);\n  let len = s.pending;\n  if (len > strm.avail_out) {\n    len = strm.avail_out;\n  }\n  if (len === 0) { return; }\n\n  strm.output.set(s.pending_buf.subarray(s.pending_out, s.pending_out + len), strm.next_out);\n  strm.next_out  += len;\n  s.pending_out  += len;\n  strm.total_out += len;\n  strm.avail_out -= len;\n  s.pending      -= len;\n  if (s.pending === 0) {\n    s.pending_out = 0;\n  }\n};\n\n\nconst flush_block_only = (s, last) => {\n  _tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);\n  s.block_start = s.strstart;\n  flush_pending(s.strm);\n};\n\n\nconst put_byte = (s, b) => {\n  s.pending_buf[s.pending++] = b;\n};\n\n\n/* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */\nconst putShortMSB = (s, b) => {\n\n  //  put_byte(s, (Byte)(b >> 8));\n//  put_byte(s, (Byte)(b & 0xff));\n  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;\n  s.pending_buf[s.pending++] = b & 0xff;\n};\n\n\n/* ===========================================================================\n * Read a new buffer from the current input stream, update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */\nconst read_buf = (strm, buf, start, size) => {\n\n  let len = strm.avail_in;\n\n  if (len > size) { len = size; }\n  if (len === 0) { return 0; }\n\n  strm.avail_in -= len;\n\n  // zmemcpy(buf, strm->next_in, len);\n  buf.set(strm.input.subarray(strm.next_in, strm.next_in + len), start);\n  if (strm.state.wrap === 1) {\n    strm.adler = adler32_1(strm.adler, buf, len, start);\n  }\n\n  else if (strm.state.wrap === 2) {\n    strm.adler = crc32_1(strm.adler, buf, len, start);\n  }\n\n  strm.next_in += len;\n  strm.total_in += len;\n\n  return len;\n};\n\n\n/* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */\nconst longest_match = (s, cur_match) => {\n\n  let chain_length = s.max_chain_length;      /* max hash chain length */\n  let scan = s.strstart; /* current string */\n  let match;                       /* matched string */\n  let len;                           /* length of current match */\n  let best_len = s.prev_length;              /* best match length so far */\n  let nice_match = s.nice_match;             /* stop if match long enough */\n  const limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?\n      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;\n\n  const _win = s.window; // shortcut\n\n  const wmask = s.w_mask;\n  const prev  = s.prev;\n\n  /* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */\n\n  const strend = s.strstart + MAX_MATCH;\n  let scan_end1  = _win[scan + best_len - 1];\n  let scan_end   = _win[scan + best_len];\n\n  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */\n  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n\n  /* Do not waste too much time if we already have a good match: */\n  if (s.prev_length >= s.good_match) {\n    chain_length >>= 2;\n  }\n  /* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */\n  if (nice_match > s.lookahead) { nice_match = s.lookahead; }\n\n  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n\n  do {\n    // Assert(cur_match < s->strstart, \"no future\");\n    match = cur_match;\n\n    /* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed, and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead, so\n     * the output of deflate is not affected by the uninitialized values.\n     */\n\n    if (_win[match + best_len]     !== scan_end  ||\n        _win[match + best_len - 1] !== scan_end1 ||\n        _win[match]                !== _win[scan] ||\n        _win[++match]              !== _win[scan + 1]) {\n      continue;\n    }\n\n    /* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */\n    scan += 2;\n    match++;\n    // Assert(*scan == *match, \"match[2]?\");\n\n    /* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */\n    do {\n      /*jshint noempty:false*/\n    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             scan < strend);\n\n    // Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\n\n    len = MAX_MATCH - (strend - scan);\n    scan = strend - MAX_MATCH;\n\n    if (len > best_len) {\n      s.match_start = cur_match;\n      best_len = len;\n      if (len >= nice_match) {\n        break;\n      }\n      scan_end1  = _win[scan + best_len - 1];\n      scan_end   = _win[scan + best_len];\n    }\n  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n\n  if (best_len <= s.lookahead) {\n    return best_len;\n  }\n  return s.lookahead;\n};\n\n\n/* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read, or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */\nconst fill_window = (s) => {\n\n  const _w_size = s.w_size;\n  let n, more, str;\n\n  //Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\n\n  do {\n    more = s.window_size - s.lookahead - s.strstart;\n\n    // JS ints have 32 bit, block below not needed\n    /* Deal with !@#$% 64K limit: */\n    //if (sizeof(int) <= 2) {\n    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n    //        more = wsize;\n    //\n    //  } else if (more == (unsigned)(-1)) {\n    //        /* Very unlikely, but possible on 16 bit machine if\n    //         * strstart == 0 && lookahead == 1 (input done a byte at time)\n    //         */\n    //        more--;\n    //    }\n    //}\n\n\n    /* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */\n    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {\n\n      s.window.set(s.window.subarray(_w_size, _w_size + _w_size - more), 0);\n      s.match_start -= _w_size;\n      s.strstart -= _w_size;\n      /* we now have strstart >= MAX_DIST */\n      s.block_start -= _w_size;\n      if (s.insert > s.strstart) {\n        s.insert = s.strstart;\n      }\n      slide_hash(s);\n      more += _w_size;\n    }\n    if (s.strm.avail_in === 0) {\n      break;\n    }\n\n    /* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported),\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise, window_size == 2*WSIZE so more >= 2.\n     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n     */\n    //Assert(more >= 2, \"more < 2\");\n    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);\n    s.lookahead += n;\n\n    /* Initialize the hash value now that we have some input: */\n    if (s.lookahead + s.insert >= MIN_MATCH) {\n      str = s.strstart - s.insert;\n      s.ins_h = s.window[str];\n\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + 1]);\n//#if MIN_MATCH != 3\n//        Call update_hash() MIN_MATCH-3 more times\n//#endif\n      while (s.insert) {\n        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);\n\n        s.prev[str & s.w_mask] = s.head[s.ins_h];\n        s.head[s.ins_h] = str;\n        str++;\n        s.insert--;\n        if (s.lookahead + s.insert < MIN_MATCH) {\n          break;\n        }\n      }\n    }\n    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n     * but this is not important since only literal bytes will be emitted.\n     */\n\n  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n\n  /* If the WIN_INIT bytes after the end of the current data have never been\n   * written, then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n   */\n//  if (s.high_water < s.window_size) {\n//    const curr = s.strstart + s.lookahead;\n//    let init = 0;\n//\n//    if (s.high_water < curr) {\n//      /* Previous high water mark below current data -- zero WIN_INIT\n//       * bytes or up to end of window, whichever is less.\n//       */\n//      init = s.window_size - curr;\n//      if (init > WIN_INIT)\n//        init = WIN_INIT;\n//      zmemzero(s->window + curr, (unsigned)init);\n//      s->high_water = curr + init;\n//    }\n//    else if (s->high_water < (ulg)curr + WIN_INIT) {\n//      /* High water mark at or above current data, but below current data\n//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n//       * to end of window, whichever is less.\n//       */\n//      init = (ulg)curr + WIN_INIT - s->high_water;\n//      if (init > s->window_size - s->high_water)\n//        init = s->window_size - s->high_water;\n//      zmemzero(s->window + s->high_water, (unsigned)init);\n//      s->high_water += init;\n//    }\n//  }\n//\n//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n//    \"not enough room for search\");\n};\n\n/* ===========================================================================\n * Copy without compression as much as possible from the input stream, return\n * the current block state.\n *\n * In case deflateParams() is used to later switch to a non-zero compression\n * level, s->matches (otherwise unused when storing) keeps track of the number\n * of hash table slides to perform. If s->matches is 1, then one hash table\n * slide will be done when switching. If s->matches is 2, the maximum value\n * allowed here, then the hash table will be cleared, since two or more slides\n * is the same as a clear.\n *\n * deflate_stored() is written to minimize the number of times an input byte is\n * copied. It is most efficient with large input and output buffers, which\n * maximizes the opportunites to have a single copy from next_in to next_out.\n */\nconst deflate_stored = (s, flush) => {\n\n  /* Smallest worthy block size when not flushing or finishing. By default\n   * this is 32K. This can be as small as 507 bytes for memLevel == 1. For\n   * large input and output buffers, the stored block size will be larger.\n   */\n  let min_block = s.pending_buf_size - 5 > s.w_size ? s.w_size : s.pending_buf_size - 5;\n\n  /* Copy as many min_block or larger stored blocks directly to next_out as\n   * possible. If flushing, copy the remaining available input to next_out as\n   * stored blocks, if there is enough space.\n   */\n  let len, left, have, last = 0;\n  let used = s.strm.avail_in;\n  do {\n    /* Set len to the maximum size block that we can copy directly with the\n     * available input data and output space. Set left to how much of that\n     * would be copied from what's left in the window.\n     */\n    len = 65535/* MAX_STORED */;     /* maximum deflate stored block length */\n    have = (s.bi_valid + 42) >> 3;     /* number of header bytes */\n    if (s.strm.avail_out < have) {         /* need room for header */\n      break;\n    }\n      /* maximum stored block length that will fit in avail_out: */\n    have = s.strm.avail_out - have;\n    left = s.strstart - s.block_start;  /* bytes left in window */\n    if (len > left + s.strm.avail_in) {\n      len = left + s.strm.avail_in;   /* limit len to the input */\n    }\n    if (len > have) {\n      len = have;             /* limit len to the output */\n    }\n\n    /* If the stored block would be less than min_block in length, or if\n     * unable to copy all of the available input when flushing, then try\n     * copying to the window and the pending buffer instead. Also don't\n     * write an empty block when flushing -- deflate() does that.\n     */\n    if (len < min_block && ((len === 0 && flush !== Z_FINISH$3) ||\n                        flush === Z_NO_FLUSH$2 ||\n                        len !== left + s.strm.avail_in)) {\n      break;\n    }\n\n    /* Make a dummy stored block in pending to get the header bytes,\n     * including any pending bits. This also updates the debugging counts.\n     */\n    last = flush === Z_FINISH$3 && len === left + s.strm.avail_in ? 1 : 0;\n    _tr_stored_block(s, 0, 0, last);\n\n    /* Replace the lengths in the dummy stored block with len. */\n    s.pending_buf[s.pending - 4] = len;\n    s.pending_buf[s.pending - 3] = len >> 8;\n    s.pending_buf[s.pending - 2] = ~len;\n    s.pending_buf[s.pending - 1] = ~len >> 8;\n\n    /* Write the stored block header bytes. */\n    flush_pending(s.strm);\n\n//#ifdef ZLIB_DEBUG\n//    /* Update debugging counts for the data about to be copied. */\n//    s->compressed_len += len << 3;\n//    s->bits_sent += len << 3;\n//#endif\n\n    /* Copy uncompressed bytes from the window to next_out. */\n    if (left) {\n      if (left > len) {\n        left = len;\n      }\n      //zmemcpy(s->strm->next_out, s->window + s->block_start, left);\n      s.strm.output.set(s.window.subarray(s.block_start, s.block_start + left), s.strm.next_out);\n      s.strm.next_out += left;\n      s.strm.avail_out -= left;\n      s.strm.total_out += left;\n      s.block_start += left;\n      len -= left;\n    }\n\n    /* Copy uncompressed bytes directly from next_in to next_out, updating\n     * the check value.\n     */\n    if (len) {\n      read_buf(s.strm, s.strm.output, s.strm.next_out, len);\n      s.strm.next_out += len;\n      s.strm.avail_out -= len;\n      s.strm.total_out += len;\n    }\n  } while (last === 0);\n\n  /* Update the sliding window with the last s->w_size bytes of the copied\n   * data, or append all of the copied data to the existing window if less\n   * than s->w_size bytes were copied. Also update the number of bytes to\n   * insert in the hash tables, in the event that deflateParams() switches to\n   * a non-zero compression level.\n   */\n  used -= s.strm.avail_in;    /* number of input bytes directly copied */\n  if (used) {\n    /* If any input was used, then no unused input remains in the window,\n     * therefore s->block_start == s->strstart.\n     */\n    if (used >= s.w_size) {  /* supplant the previous history */\n      s.matches = 2;     /* clear hash */\n      //zmemcpy(s->window, s->strm->next_in - s->w_size, s->w_size);\n      s.window.set(s.strm.input.subarray(s.strm.next_in - s.w_size, s.strm.next_in), 0);\n      s.strstart = s.w_size;\n      s.insert = s.strstart;\n    }\n    else {\n      if (s.window_size - s.strstart <= used) {\n        /* Slide the window down. */\n        s.strstart -= s.w_size;\n        //zmemcpy(s->window, s->window + s->w_size, s->strstart);\n        s.window.set(s.window.subarray(s.w_size, s.w_size + s.strstart), 0);\n        if (s.matches < 2) {\n          s.matches++;   /* add a pending slide_hash() */\n        }\n        if (s.insert > s.strstart) {\n          s.insert = s.strstart;\n        }\n      }\n      //zmemcpy(s->window + s->strstart, s->strm->next_in - used, used);\n      s.window.set(s.strm.input.subarray(s.strm.next_in - used, s.strm.next_in), s.strstart);\n      s.strstart += used;\n      s.insert += used > s.w_size - s.insert ? s.w_size - s.insert : used;\n    }\n    s.block_start = s.strstart;\n  }\n  if (s.high_water < s.strstart) {\n    s.high_water = s.strstart;\n  }\n\n  /* If the last block was written to next_out, then done. */\n  if (last) {\n    return BS_FINISH_DONE;\n  }\n\n  /* If flushing and all input has been consumed, then done. */\n  if (flush !== Z_NO_FLUSH$2 && flush !== Z_FINISH$3 &&\n    s.strm.avail_in === 0 && s.strstart === s.block_start) {\n    return BS_BLOCK_DONE;\n  }\n\n  /* Fill the window with any remaining input. */\n  have = s.window_size - s.strstart;\n  if (s.strm.avail_in > have && s.block_start >= s.w_size) {\n    /* Slide the window down. */\n    s.block_start -= s.w_size;\n    s.strstart -= s.w_size;\n    //zmemcpy(s->window, s->window + s->w_size, s->strstart);\n    s.window.set(s.window.subarray(s.w_size, s.w_size + s.strstart), 0);\n    if (s.matches < 2) {\n      s.matches++;       /* add a pending slide_hash() */\n    }\n    have += s.w_size;      /* more space now */\n    if (s.insert > s.strstart) {\n      s.insert = s.strstart;\n    }\n  }\n  if (have > s.strm.avail_in) {\n    have = s.strm.avail_in;\n  }\n  if (have) {\n    read_buf(s.strm, s.window, s.strstart, have);\n    s.strstart += have;\n    s.insert += have > s.w_size - s.insert ? s.w_size - s.insert : have;\n  }\n  if (s.high_water < s.strstart) {\n    s.high_water = s.strstart;\n  }\n\n  /* There was not enough avail_out to write a complete worthy or flushed\n   * stored block to next_out. Write a stored block to pending instead, if we\n   * have enough input for a worthy block, or if flushing and there is enough\n   * room for the remaining input as a stored block in the pending buffer.\n   */\n  have = (s.bi_valid + 42) >> 3;     /* number of header bytes */\n    /* maximum stored block length that will fit in pending: */\n  have = s.pending_buf_size - have > 65535/* MAX_STORED */ ? 65535/* MAX_STORED */ : s.pending_buf_size - have;\n  min_block = have > s.w_size ? s.w_size : have;\n  left = s.strstart - s.block_start;\n  if (left >= min_block ||\n     ((left || flush === Z_FINISH$3) && flush !== Z_NO_FLUSH$2 &&\n     s.strm.avail_in === 0 && left <= have)) {\n    len = left > have ? have : left;\n    last = flush === Z_FINISH$3 && s.strm.avail_in === 0 &&\n         len === left ? 1 : 0;\n    _tr_stored_block(s, s.block_start, len, last);\n    s.block_start += len;\n    flush_pending(s.strm);\n  }\n\n  /* We've done all we can with the available input and output. */\n  return last ? BS_FINISH_STARTED : BS_NEED_MORE;\n};\n\n\n/* ===========================================================================\n * Compress as much as possible from the input stream, return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\nconst deflate_fast = (s, flush) => {\n\n  let hash_head;        /* head of the hash chain */\n  let bflush;           /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break; /* flush the current block */\n      }\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */\n    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n    }\n    if (s.match_length >= MIN_MATCH) {\n      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n\n      /*** _tr_tally_dist(s, s.strstart - s.match_start,\n                     s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n\n      /* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */\n      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {\n        s.match_length--; /* string at strstart already in table */\n        do {\n          s.strstart++;\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n          /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead.\n           */\n        } while (--s.match_length !== 0);\n        s.strstart++;\n      } else\n      {\n        s.strstart += s.match_length;\n        s.match_length = 0;\n        s.ins_h = s.window[s.strstart];\n        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + 1]);\n\n//#if MIN_MATCH != 3\n//                Call UPDATE_HASH() MIN_MATCH-3 more times\n//#endif\n        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n         * matter since it will be recomputed at next deflate call.\n         */\n      }\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\nconst deflate_slow = (s, flush) => {\n\n  let hash_head;          /* head of hash chain */\n  let bflush;              /* set if current block must be flushed */\n\n  let max_insert;\n\n  /* Process the input block. */\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     */\n    s.prev_length = s.match_length;\n    s.prev_match = s.match_start;\n    s.match_length = MIN_MATCH - 1;\n\n    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&\n        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n\n      if (s.match_length <= 5 &&\n         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {\n\n        /* If prev_match is also MIN_MATCH, match_start is garbage\n         * but we will ignore the current match anyway.\n         */\n        s.match_length = MIN_MATCH - 1;\n      }\n    }\n    /* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */\n    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {\n      max_insert = s.strstart + s.lookahead - MIN_MATCH;\n      /* Do not insert strings in hash table beyond this. */\n\n      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n\n      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n                     s.prev_length - MIN_MATCH, bflush);***/\n      bflush = _tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);\n      /* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead, the last two strings are not inserted in\n       * the hash table.\n       */\n      s.lookahead -= s.prev_length - 1;\n      s.prev_length -= 2;\n      do {\n        if (++s.strstart <= max_insert) {\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n        }\n      } while (--s.prev_length !== 0);\n      s.match_available = 0;\n      s.match_length = MIN_MATCH - 1;\n      s.strstart++;\n\n      if (bflush) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n\n    } else if (s.match_available) {\n      /* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);\n\n      if (bflush) {\n        /*** FLUSH_BLOCK_ONLY(s, 0) ***/\n        flush_block_only(s, false);\n        /***/\n      }\n      s.strstart++;\n      s.lookahead--;\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    } else {\n      /* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */\n      s.match_available = 1;\n      s.strstart++;\n      s.lookahead--;\n    }\n  }\n  //Assert (flush != Z_NO_FLUSH, \"no flush?\");\n  if (s.match_available) {\n    //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n    bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);\n\n    s.match_available = 0;\n  }\n  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_BLOCK_DONE;\n};\n\n\n/* ===========================================================================\n * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */\nconst deflate_rle = (s, flush) => {\n\n  let bflush;            /* set if current block must be flushed */\n  let prev;              /* byte at distance one to match */\n  let scan, strend;      /* scan goes up to strend for length of run */\n\n  const _win = s.window;\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run, plus one for the unrolled loop.\n     */\n    if (s.lookahead <= MAX_MATCH) {\n      fill_window(s);\n      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* See how many times the previous byte repeats */\n    s.match_length = 0;\n    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {\n      scan = s.strstart - 1;\n      prev = _win[scan];\n      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n        strend = s.strstart + MAX_MATCH;\n        do {\n          /*jshint noempty:false*/\n        } while (prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 scan < strend);\n        s.match_length = MAX_MATCH - (strend - scan);\n        if (s.match_length > s.lookahead) {\n          s.match_length = s.lookahead;\n        }\n      }\n      //Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n    }\n\n    /* Emit match if have run of MIN_MATCH or longer, else emit literal */\n    if (s.match_length >= MIN_MATCH) {\n      //check_match(s, s.strstart, s.strstart - 1, s.match_length);\n\n      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally(s, 1, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n      s.strstart += s.match_length;\n      s.match_length = 0;\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */\nconst deflate_huff = (s, flush) => {\n\n  let bflush;             /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we have a literal to write. */\n    if (s.lookahead === 0) {\n      fill_window(s);\n      if (s.lookahead === 0) {\n        if (flush === Z_NO_FLUSH$2) {\n          return BS_NEED_MORE;\n        }\n        break;      /* flush the current block */\n      }\n    }\n\n    /* Output a literal byte */\n    s.match_length = 0;\n    //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n    bflush = _tr_tally(s, 0, s.window[s.strstart]);\n    s.lookahead--;\n    s.strstart++;\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\nfunction Config(good_length, max_lazy, nice_length, max_chain, func) {\n\n  this.good_length = good_length;\n  this.max_lazy = max_lazy;\n  this.nice_length = nice_length;\n  this.max_chain = max_chain;\n  this.func = func;\n}\n\nconst configuration_table = [\n  /*      good lazy nice chain */\n  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */\n  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */\n  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */\n  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */\n\n  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */\n  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */\n  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */\n  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */\n  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */\n  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */\n];\n\n\n/* ===========================================================================\n * Initialize the \"longest match\" routines for a new zlib stream\n */\nconst lm_init = (s) => {\n\n  s.window_size = 2 * s.w_size;\n\n  /*** CLEAR_HASH(s); ***/\n  zero(s.head); // Fill with NIL (= 0);\n\n  /* Set the default configuration parameters:\n   */\n  s.max_lazy_match = configuration_table[s.level].max_lazy;\n  s.good_match = configuration_table[s.level].good_length;\n  s.nice_match = configuration_table[s.level].nice_length;\n  s.max_chain_length = configuration_table[s.level].max_chain;\n\n  s.strstart = 0;\n  s.block_start = 0;\n  s.lookahead = 0;\n  s.insert = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  s.ins_h = 0;\n};\n\n\nfunction DeflateState() {\n  this.strm = null;            /* pointer back to this zlib stream */\n  this.status = 0;            /* as the name implies */\n  this.pending_buf = null;      /* output still pending */\n  this.pending_buf_size = 0;  /* size of pending_buf */\n  this.pending_out = 0;       /* next pending byte to output to the stream */\n  this.pending = 0;           /* nb of bytes in the pending buffer */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.gzhead = null;         /* gzip header information to write */\n  this.gzindex = 0;           /* where in extra, name, or comment */\n  this.method = Z_DEFLATED$2; /* can only be DEFLATED */\n  this.last_flush = -1;   /* value of flush param for previous deflate call */\n\n  this.w_size = 0;  /* LZ77 window size (32K by default) */\n  this.w_bits = 0;  /* log2(w_size)  (8..16) */\n  this.w_mask = 0;  /* w_size - 1 */\n\n  this.window = null;\n  /* Sliding window. Input bytes are read into the second half of the window,\n   * and move to the first half later to keep a dictionary of at least wSize\n   * bytes. With this organization, matches are limited to a distance of\n   * wSize-MAX_MATCH bytes, but this ensures that IO is always\n   * performed with a length multiple of the block size.\n   */\n\n  this.window_size = 0;\n  /* Actual size of window: 2*wSize, except when the user input buffer\n   * is directly used as sliding window.\n   */\n\n  this.prev = null;\n  /* Link to older string with same hash index. To limit the size of this\n   * array to 64K, this link is maintained only for the last 32K strings.\n   * An index in this array is thus a window index modulo 32K.\n   */\n\n  this.head = null;   /* Heads of the hash chains or NIL. */\n\n  this.ins_h = 0;       /* hash index of string to be inserted */\n  this.hash_size = 0;   /* number of elements in hash table */\n  this.hash_bits = 0;   /* log2(hash_size) */\n  this.hash_mask = 0;   /* hash_size-1 */\n\n  this.hash_shift = 0;\n  /* Number of bits by which ins_h must be shifted at each input\n   * step. It must be such that after MIN_MATCH steps, the oldest\n   * byte no longer takes part in the hash key, that is:\n   *   hash_shift * MIN_MATCH >= hash_bits\n   */\n\n  this.block_start = 0;\n  /* Window position at the beginning of the current output block. Gets\n   * negative when the window is moved backwards.\n   */\n\n  this.match_length = 0;      /* length of best match */\n  this.prev_match = 0;        /* previous match */\n  this.match_available = 0;   /* set if previous match exists */\n  this.strstart = 0;          /* start of string to insert */\n  this.match_start = 0;       /* start of matching string */\n  this.lookahead = 0;         /* number of valid bytes ahead in window */\n\n  this.prev_length = 0;\n  /* Length of the best match at previous step. Matches not greater than this\n   * are discarded. This is used in the lazy match evaluation.\n   */\n\n  this.max_chain_length = 0;\n  /* To speed up deflation, hash chains are never searched beyond this\n   * length.  A higher limit improves compression ratio but degrades the\n   * speed.\n   */\n\n  this.max_lazy_match = 0;\n  /* Attempt to find a better match only when the current match is strictly\n   * smaller than this value. This mechanism is used only for compression\n   * levels >= 4.\n   */\n  // That's alias to max_lazy_match, don't use directly\n  //this.max_insert_length = 0;\n  /* Insert new strings in the hash table only if the match length is not\n   * greater than this length. This saves time but degrades compression.\n   * max_insert_length is used only for compression levels <= 3.\n   */\n\n  this.level = 0;     /* compression level (1..9) */\n  this.strategy = 0;  /* favor or force Huffman coding*/\n\n  this.good_match = 0;\n  /* Use a faster search when the previous match is longer than this */\n\n  this.nice_match = 0; /* Stop searching when current match exceeds this */\n\n              /* used by trees.c: */\n\n  /* Didn't use ct_data typedef below to suppress compiler warning */\n\n  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n\n  // Use flat array of DOUBLE size, with interleaved fata,\n  // because JS does not support effective\n  this.dyn_ltree  = new Uint16Array(HEAP_SIZE * 2);\n  this.dyn_dtree  = new Uint16Array((2 * D_CODES + 1) * 2);\n  this.bl_tree    = new Uint16Array((2 * BL_CODES + 1) * 2);\n  zero(this.dyn_ltree);\n  zero(this.dyn_dtree);\n  zero(this.bl_tree);\n\n  this.l_desc   = null;         /* desc. for literal tree */\n  this.d_desc   = null;         /* desc. for distance tree */\n  this.bl_desc  = null;         /* desc. for bit length tree */\n\n  //ush bl_count[MAX_BITS+1];\n  this.bl_count = new Uint16Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n  this.heap = new Uint16Array(2 * L_CODES + 1);  /* heap used to build the Huffman trees */\n  zero(this.heap);\n\n  this.heap_len = 0;               /* number of elements in the heap */\n  this.heap_max = 0;               /* element of largest frequency */\n  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n   * The same heap array is used to build all trees.\n   */\n\n  this.depth = new Uint16Array(2 * L_CODES + 1); //uch depth[2*L_CODES+1];\n  zero(this.depth);\n  /* Depth of each subtree used as tie breaker for trees of equal frequency\n   */\n\n  this.sym_buf = 0;        /* buffer for distances and literals/lengths */\n\n  this.lit_bufsize = 0;\n  /* Size of match buffer for literals/lengths.  There are 4 reasons for\n   * limiting lit_bufsize to 64K:\n   *   - frequencies can be kept in 16 bit counters\n   *   - if compression is not successful for the first block, all input\n   *     data is still in the window so we can still emit a stored block even\n   *     when input comes from standard input.  (This can also be done for\n   *     all blocks if lit_bufsize is not greater than 32K.)\n   *   - if compression is not successful for a file smaller than 64K, we can\n   *     even emit a stored file instead of a stored block (saving 5 bytes).\n   *     This is applicable only for zip (not gzip or zlib).\n   *   - creating new Huffman trees less frequently may not provide fast\n   *     adaptation to changes in the input data statistics. (Take for\n   *     example a binary file with poorly compressible code followed by\n   *     a highly compressible string table.) Smaller buffer sizes give\n   *     fast adaptation but have of course the overhead of transmitting\n   *     trees more frequently.\n   *   - I can't count above 4\n   */\n\n  this.sym_next = 0;      /* running index in sym_buf */\n  this.sym_end = 0;       /* symbol table full when sym_next reaches this */\n\n  this.opt_len = 0;       /* bit length of current block with optimal trees */\n  this.static_len = 0;    /* bit length of current block with static trees */\n  this.matches = 0;       /* number of string matches in current block */\n  this.insert = 0;        /* bytes at end of window left to insert */\n\n\n  this.bi_buf = 0;\n  /* Output buffer. bits are inserted starting at the bottom (least\n   * significant bits).\n   */\n  this.bi_valid = 0;\n  /* Number of valid bits in bi_buf.  All bits above the last valid bit\n   * are always zero.\n   */\n\n  // Used for window memory init. We safely ignore it for JS. That makes\n  // sense only for pointers and memory check tools.\n  //this.high_water = 0;\n  /* High water mark offset in window for initialized bytes -- bytes above\n   * this are set to zero in order to avoid memory check warnings when\n   * longest match routines access bytes past the input.  This is then\n   * updated to the new high water mark.\n   */\n}\n\n\n/* =========================================================================\n * Check for a valid deflate stream state. Return 0 if ok, 1 if not.\n */\nconst deflateStateCheck = (strm) => {\n\n  if (!strm) {\n    return 1;\n  }\n  const s = strm.state;\n  if (!s || s.strm !== strm || (s.status !== INIT_STATE &&\n//#ifdef GZIP\n                                s.status !== GZIP_STATE &&\n//#endif\n                                s.status !== EXTRA_STATE &&\n                                s.status !== NAME_STATE &&\n                                s.status !== COMMENT_STATE &&\n                                s.status !== HCRC_STATE &&\n                                s.status !== BUSY_STATE &&\n                                s.status !== FINISH_STATE)) {\n    return 1;\n  }\n  return 0;\n};\n\n\nconst deflateResetKeep = (strm) => {\n\n  if (deflateStateCheck(strm)) {\n    return err(strm, Z_STREAM_ERROR$2);\n  }\n\n  strm.total_in = strm.total_out = 0;\n  strm.data_type = Z_UNKNOWN;\n\n  const s = strm.state;\n  s.pending = 0;\n  s.pending_out = 0;\n\n  if (s.wrap < 0) {\n    s.wrap = -s.wrap;\n    /* was made negative by deflate(..., Z_FINISH); */\n  }\n  s.status =\n//#ifdef GZIP\n    s.wrap === 2 ? GZIP_STATE :\n//#endif\n    s.wrap ? INIT_STATE : BUSY_STATE;\n  strm.adler = (s.wrap === 2) ?\n    0  // crc32(0, Z_NULL, 0)\n  :\n    1; // adler32(0, Z_NULL, 0)\n  s.last_flush = -2;\n  _tr_init(s);\n  return Z_OK$3;\n};\n\n\nconst deflateReset = (strm) => {\n\n  const ret = deflateResetKeep(strm);\n  if (ret === Z_OK$3) {\n    lm_init(strm.state);\n  }\n  return ret;\n};\n\n\nconst deflateSetHeader = (strm, head) => {\n\n  if (deflateStateCheck(strm) || strm.state.wrap !== 2) {\n    return Z_STREAM_ERROR$2;\n  }\n  strm.state.gzhead = head;\n  return Z_OK$3;\n};\n\n\nconst deflateInit2 = (strm, level, method, windowBits, memLevel, strategy) => {\n\n  if (!strm) { // === Z_NULL\n    return Z_STREAM_ERROR$2;\n  }\n  let wrap = 1;\n\n  if (level === Z_DEFAULT_COMPRESSION$1) {\n    level = 6;\n  }\n\n  if (windowBits < 0) { /* suppress zlib wrapper */\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n\n  else if (windowBits > 15) {\n    wrap = 2;           /* write gzip wrapper instead */\n    windowBits -= 16;\n  }\n\n\n  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED$2 ||\n    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||\n    strategy < 0 || strategy > Z_FIXED || (windowBits === 8 && wrap !== 1)) {\n    return err(strm, Z_STREAM_ERROR$2);\n  }\n\n\n  if (windowBits === 8) {\n    windowBits = 9;\n  }\n  /* until 256-byte window bug fixed */\n\n  const s = new DeflateState();\n\n  strm.state = s;\n  s.strm = strm;\n  s.status = INIT_STATE;     /* to pass state test in deflateReset() */\n\n  s.wrap = wrap;\n  s.gzhead = null;\n  s.w_bits = windowBits;\n  s.w_size = 1 << s.w_bits;\n  s.w_mask = s.w_size - 1;\n\n  s.hash_bits = memLevel + 7;\n  s.hash_size = 1 << s.hash_bits;\n  s.hash_mask = s.hash_size - 1;\n  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n\n  s.window = new Uint8Array(s.w_size * 2);\n  s.head = new Uint16Array(s.hash_size);\n  s.prev = new Uint16Array(s.w_size);\n\n  // Don't need mem init magic for JS.\n  //s.high_water = 0;  /* nothing written to s->window yet */\n\n  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */\n\n  /* We overlay pending_buf and sym_buf. This works since the average size\n   * for length/distance pairs over any compressed block is assured to be 31\n   * bits or less.\n   *\n   * Analysis: The longest fixed codes are a length code of 8 bits plus 5\n   * extra bits, for lengths 131 to 257. The longest fixed distance codes are\n   * 5 bits plus 13 extra bits, for distances 16385 to 32768. The longest\n   * possible fixed-codes length/distance pair is then 31 bits total.\n   *\n   * sym_buf starts one-fourth of the way into pending_buf. So there are\n   * three bytes in sym_buf for every four bytes in pending_buf. Each symbol\n   * in sym_buf is three bytes -- two for the distance and one for the\n   * literal/length. As each symbol is consumed, the pointer to the next\n   * sym_buf value to read moves forward three bytes. From that symbol, up to\n   * 31 bits are written to pending_buf. The closest the written pending_buf\n   * bits gets to the next sym_buf symbol to read is just before the last\n   * code is written. At that time, 31*(n-2) bits have been written, just\n   * after 24*(n-2) bits have been consumed from sym_buf. sym_buf starts at\n   * 8*n bits into pending_buf. (Note that the symbol buffer fills when n-1\n   * symbols are written.) The closest the writing gets to what is unread is\n   * then n+14 bits. Here n is lit_bufsize, which is 16384 by default, and\n   * can range from 128 to 32768.\n   *\n   * Therefore, at a minimum, there are 142 bits of space between what is\n   * written and what is read in the overlain buffers, so the symbols cannot\n   * be overwritten by the compressed data. That space is actually 139 bits,\n   * due to the three-bit fixed-code block header.\n   *\n   * That covers the case where either Z_FIXED is specified, forcing fixed\n   * codes, or when the use of fixed codes is chosen, because that choice\n   * results in a smaller compressed block than dynamic codes. That latter\n   * condition then assures that the above analysis also covers all dynamic\n   * blocks. A dynamic-code block will only be chosen to be emitted if it has\n   * fewer bits than a fixed-code block would for the same set of symbols.\n   * Therefore its average symbol length is assured to be less than 31. So\n   * the compressed data for a dynamic block also cannot overwrite the\n   * symbols from which it is being constructed.\n   */\n\n  s.pending_buf_size = s.lit_bufsize * 4;\n  s.pending_buf = new Uint8Array(s.pending_buf_size);\n\n  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)\n  //s->sym_buf = s->pending_buf + s->lit_bufsize;\n  s.sym_buf = s.lit_bufsize;\n\n  //s->sym_end = (s->lit_bufsize - 1) * 3;\n  s.sym_end = (s.lit_bufsize - 1) * 3;\n  /* We avoid equality with lit_bufsize*3 because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n\n  s.level = level;\n  s.strategy = strategy;\n  s.method = method;\n\n  return deflateReset(strm);\n};\n\nconst deflateInit = (strm, level) => {\n\n  return deflateInit2(strm, level, Z_DEFLATED$2, MAX_WBITS$1, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY$1);\n};\n\n\n/* ========================================================================= */\nconst deflate$2 = (strm, flush) => {\n\n  if (deflateStateCheck(strm) || flush > Z_BLOCK$1 || flush < 0) {\n    return strm ? err(strm, Z_STREAM_ERROR$2) : Z_STREAM_ERROR$2;\n  }\n\n  const s = strm.state;\n\n  if (!strm.output ||\n      (strm.avail_in !== 0 && !strm.input) ||\n      (s.status === FINISH_STATE && flush !== Z_FINISH$3)) {\n    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR$1 : Z_STREAM_ERROR$2);\n  }\n\n  const old_flush = s.last_flush;\n  s.last_flush = flush;\n\n  /* Flush as much pending output as possible */\n  if (s.pending !== 0) {\n    flush_pending(strm);\n    if (strm.avail_out === 0) {\n      /* Since avail_out is 0, deflate will be called again with\n       * more output space, but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do,\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */\n      s.last_flush = -1;\n      return Z_OK$3;\n    }\n\n    /* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH, we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */\n  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&\n    flush !== Z_FINISH$3) {\n    return err(strm, Z_BUF_ERROR$1);\n  }\n\n  /* User must not provide more input after the first FINISH: */\n  if (s.status === FINISH_STATE && strm.avail_in !== 0) {\n    return err(strm, Z_BUF_ERROR$1);\n  }\n\n  /* Write the header */\n  if (s.status === INIT_STATE && s.wrap === 0) {\n    s.status = BUSY_STATE;\n  }\n  if (s.status === INIT_STATE) {\n    /* zlib header */\n    let header = (Z_DEFLATED$2 + ((s.w_bits - 8) << 4)) << 8;\n    let level_flags = -1;\n\n    if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {\n      level_flags = 0;\n    } else if (s.level < 6) {\n      level_flags = 1;\n    } else if (s.level === 6) {\n      level_flags = 2;\n    } else {\n      level_flags = 3;\n    }\n    header |= (level_flags << 6);\n    if (s.strstart !== 0) { header |= PRESET_DICT; }\n    header += 31 - (header % 31);\n\n    putShortMSB(s, header);\n\n    /* Save the adler32 of the preset dictionary: */\n    if (s.strstart !== 0) {\n      putShortMSB(s, strm.adler >>> 16);\n      putShortMSB(s, strm.adler & 0xffff);\n    }\n    strm.adler = 1; // adler32(0L, Z_NULL, 0);\n    s.status = BUSY_STATE;\n\n    /* Compression must start with an empty pending buffer */\n    flush_pending(strm);\n    if (s.pending !== 0) {\n      s.last_flush = -1;\n      return Z_OK$3;\n    }\n  }\n//#ifdef GZIP\n  if (s.status === GZIP_STATE) {\n    /* gzip header */\n    strm.adler = 0;  //crc32(0L, Z_NULL, 0);\n    put_byte(s, 31);\n    put_byte(s, 139);\n    put_byte(s, 8);\n    if (!s.gzhead) { // s->gzhead == Z_NULL\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, s.level === 9 ? 2 :\n                  (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                   4 : 0));\n      put_byte(s, OS_CODE);\n      s.status = BUSY_STATE;\n\n      /* Compression must start with an empty pending buffer */\n      flush_pending(strm);\n      if (s.pending !== 0) {\n        s.last_flush = -1;\n        return Z_OK$3;\n      }\n    }\n    else {\n      put_byte(s, (s.gzhead.text ? 1 : 0) +\n                  (s.gzhead.hcrc ? 2 : 0) +\n                  (!s.gzhead.extra ? 0 : 4) +\n                  (!s.gzhead.name ? 0 : 8) +\n                  (!s.gzhead.comment ? 0 : 16)\n      );\n      put_byte(s, s.gzhead.time & 0xff);\n      put_byte(s, (s.gzhead.time >> 8) & 0xff);\n      put_byte(s, (s.gzhead.time >> 16) & 0xff);\n      put_byte(s, (s.gzhead.time >> 24) & 0xff);\n      put_byte(s, s.level === 9 ? 2 :\n                  (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                   4 : 0));\n      put_byte(s, s.gzhead.os & 0xff);\n      if (s.gzhead.extra && s.gzhead.extra.length) {\n        put_byte(s, s.gzhead.extra.length & 0xff);\n        put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);\n      }\n      if (s.gzhead.hcrc) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending, 0);\n      }\n      s.gzindex = 0;\n      s.status = EXTRA_STATE;\n    }\n  }\n  if (s.status === EXTRA_STATE) {\n    if (s.gzhead.extra/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let left = (s.gzhead.extra.length & 0xffff) - s.gzindex;\n      while (s.pending + left > s.pending_buf_size) {\n        let copy = s.pending_buf_size - s.pending;\n        // zmemcpy(s.pending_buf + s.pending,\n        //    s.gzhead.extra + s.gzindex, copy);\n        s.pending_buf.set(s.gzhead.extra.subarray(s.gzindex, s.gzindex + copy), s.pending);\n        s.pending = s.pending_buf_size;\n        //--- HCRC_UPDATE(beg) ---//\n        if (s.gzhead.hcrc && s.pending > beg) {\n          strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n        }\n        //---//\n        s.gzindex += copy;\n        flush_pending(strm);\n        if (s.pending !== 0) {\n          s.last_flush = -1;\n          return Z_OK$3;\n        }\n        beg = 0;\n        left -= copy;\n      }\n      // JS specific: s.gzhead.extra may be TypedArray or Array for backward compatibility\n      //              TypedArray.slice and TypedArray.from don't exist in IE10-IE11\n      let gzhead_extra = new Uint8Array(s.gzhead.extra);\n      // zmemcpy(s->pending_buf + s->pending,\n      //     s->gzhead->extra + s->gzindex, left);\n      s.pending_buf.set(gzhead_extra.subarray(s.gzindex, s.gzindex + left), s.pending);\n      s.pending += left;\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n      s.gzindex = 0;\n    }\n    s.status = NAME_STATE;\n  }\n  if (s.status === NAME_STATE) {\n    if (s.gzhead.name/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let val;\n      do {\n        if (s.pending === s.pending_buf_size) {\n          //--- HCRC_UPDATE(beg) ---//\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          //---//\n          flush_pending(strm);\n          if (s.pending !== 0) {\n            s.last_flush = -1;\n            return Z_OK$3;\n          }\n          beg = 0;\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.name.length) {\n          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n      s.gzindex = 0;\n    }\n    s.status = COMMENT_STATE;\n  }\n  if (s.status === COMMENT_STATE) {\n    if (s.gzhead.comment/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let val;\n      do {\n        if (s.pending === s.pending_buf_size) {\n          //--- HCRC_UPDATE(beg) ---//\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          //---//\n          flush_pending(strm);\n          if (s.pending !== 0) {\n            s.last_flush = -1;\n            return Z_OK$3;\n          }\n          beg = 0;\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.comment.length) {\n          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n    }\n    s.status = HCRC_STATE;\n  }\n  if (s.status === HCRC_STATE) {\n    if (s.gzhead.hcrc) {\n      if (s.pending + 2 > s.pending_buf_size) {\n        flush_pending(strm);\n        if (s.pending !== 0) {\n          s.last_flush = -1;\n          return Z_OK$3;\n        }\n      }\n      put_byte(s, strm.adler & 0xff);\n      put_byte(s, (strm.adler >> 8) & 0xff);\n      strm.adler = 0; //crc32(0L, Z_NULL, 0);\n    }\n    s.status = BUSY_STATE;\n\n    /* Compression must start with an empty pending buffer */\n    flush_pending(strm);\n    if (s.pending !== 0) {\n      s.last_flush = -1;\n      return Z_OK$3;\n    }\n  }\n//#endif\n\n  /* Start a new block or continue the current one.\n   */\n  if (strm.avail_in !== 0 || s.lookahead !== 0 ||\n    (flush !== Z_NO_FLUSH$2 && s.status !== FINISH_STATE)) {\n    let bstate = s.level === 0 ? deflate_stored(s, flush) :\n                 s.strategy === Z_HUFFMAN_ONLY ? deflate_huff(s, flush) :\n                 s.strategy === Z_RLE ? deflate_rle(s, flush) :\n                 configuration_table[s.level].func(s, flush);\n\n    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {\n      s.status = FINISH_STATE;\n    }\n    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {\n      if (strm.avail_out === 0) {\n        s.last_flush = -1;\n        /* avoid BUF_ERROR next call, see above */\n      }\n      return Z_OK$3;\n      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here, this will be done at next call. This also\n       * ensures that for a very small output buffer, we emit at most\n       * one empty block.\n       */\n    }\n    if (bstate === BS_BLOCK_DONE) {\n      if (flush === Z_PARTIAL_FLUSH) {\n        _tr_align(s);\n      }\n      else if (flush !== Z_BLOCK$1) { /* FULL_FLUSH or SYNC_FLUSH */\n\n        _tr_stored_block(s, 0, 0, false);\n        /* For a full flush, this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */\n        if (flush === Z_FULL_FLUSH$1) {\n          /*** CLEAR_HASH(s); ***/             /* forget history */\n          zero(s.head); // Fill with NIL (= 0);\n\n          if (s.lookahead === 0) {\n            s.strstart = 0;\n            s.block_start = 0;\n            s.insert = 0;\n          }\n        }\n      }\n      flush_pending(strm);\n      if (strm.avail_out === 0) {\n        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */\n        return Z_OK$3;\n      }\n    }\n  }\n\n  if (flush !== Z_FINISH$3) { return Z_OK$3; }\n  if (s.wrap <= 0) { return Z_STREAM_END$3; }\n\n  /* Write the trailer */\n  if (s.wrap === 2) {\n    put_byte(s, strm.adler & 0xff);\n    put_byte(s, (strm.adler >> 8) & 0xff);\n    put_byte(s, (strm.adler >> 16) & 0xff);\n    put_byte(s, (strm.adler >> 24) & 0xff);\n    put_byte(s, strm.total_in & 0xff);\n    put_byte(s, (strm.total_in >> 8) & 0xff);\n    put_byte(s, (strm.total_in >> 16) & 0xff);\n    put_byte(s, (strm.total_in >> 24) & 0xff);\n  }\n  else\n  {\n    putShortMSB(s, strm.adler >>> 16);\n    putShortMSB(s, strm.adler & 0xffff);\n  }\n\n  flush_pending(strm);\n  /* If avail_out is zero, the application will call deflate again\n   * to flush the rest.\n   */\n  if (s.wrap > 0) { s.wrap = -s.wrap; }\n  /* write the trailer only once! */\n  return s.pending !== 0 ? Z_OK$3 : Z_STREAM_END$3;\n};\n\n\nconst deflateEnd = (strm) => {\n\n  if (deflateStateCheck(strm)) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  const status = strm.state.status;\n\n  strm.state = null;\n\n  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR$2) : Z_OK$3;\n};\n\n\n/* =========================================================================\n * Initializes the compression dictionary from the given byte\n * sequence without producing any compressed output.\n */\nconst deflateSetDictionary = (strm, dictionary) => {\n\n  let dictLength = dictionary.length;\n\n  if (deflateStateCheck(strm)) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  const s = strm.state;\n  const wrap = s.wrap;\n\n  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  /* when using zlib wrappers, compute Adler-32 for provided dictionary */\n  if (wrap === 1) {\n    /* adler32(strm->adler, dictionary, dictLength); */\n    strm.adler = adler32_1(strm.adler, dictionary, dictLength, 0);\n  }\n\n  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */\n\n  /* if dictionary would fill window, just replace the history */\n  if (dictLength >= s.w_size) {\n    if (wrap === 0) {            /* already empty otherwise */\n      /*** CLEAR_HASH(s); ***/\n      zero(s.head); // Fill with NIL (= 0);\n      s.strstart = 0;\n      s.block_start = 0;\n      s.insert = 0;\n    }\n    /* use the tail */\n    // dictionary = dictionary.slice(dictLength - s.w_size);\n    let tmpDict = new Uint8Array(s.w_size);\n    tmpDict.set(dictionary.subarray(dictLength - s.w_size, dictLength), 0);\n    dictionary = tmpDict;\n    dictLength = s.w_size;\n  }\n  /* insert dictionary into window and hash */\n  const avail = strm.avail_in;\n  const next = strm.next_in;\n  const input = strm.input;\n  strm.avail_in = dictLength;\n  strm.next_in = 0;\n  strm.input = dictionary;\n  fill_window(s);\n  while (s.lookahead >= MIN_MATCH) {\n    let str = s.strstart;\n    let n = s.lookahead - (MIN_MATCH - 1);\n    do {\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);\n\n      s.prev[str & s.w_mask] = s.head[s.ins_h];\n\n      s.head[s.ins_h] = str;\n      str++;\n    } while (--n);\n    s.strstart = str;\n    s.lookahead = MIN_MATCH - 1;\n    fill_window(s);\n  }\n  s.strstart += s.lookahead;\n  s.block_start = s.strstart;\n  s.insert = s.lookahead;\n  s.lookahead = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  strm.next_in = next;\n  strm.input = input;\n  strm.avail_in = avail;\n  s.wrap = wrap;\n  return Z_OK$3;\n};\n\n\nvar deflateInit_1 = deflateInit;\nvar deflateInit2_1 = deflateInit2;\nvar deflateReset_1 = deflateReset;\nvar deflateResetKeep_1 = deflateResetKeep;\nvar deflateSetHeader_1 = deflateSetHeader;\nvar deflate_2$1 = deflate$2;\nvar deflateEnd_1 = deflateEnd;\nvar deflateSetDictionary_1 = deflateSetDictionary;\nvar deflateInfo = 'pako deflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.deflateBound = deflateBound;\nmodule.exports.deflateCopy = deflateCopy;\nmodule.exports.deflateGetDictionary = deflateGetDictionary;\nmodule.exports.deflateParams = deflateParams;\nmodule.exports.deflatePending = deflatePending;\nmodule.exports.deflatePrime = deflatePrime;\nmodule.exports.deflateTune = deflateTune;\n*/\n\nvar deflate_1$2 = {\n\tdeflateInit: deflateInit_1,\n\tdeflateInit2: deflateInit2_1,\n\tdeflateReset: deflateReset_1,\n\tdeflateResetKeep: deflateResetKeep_1,\n\tdeflateSetHeader: deflateSetHeader_1,\n\tdeflate: deflate_2$1,\n\tdeflateEnd: deflateEnd_1,\n\tdeflateSetDictionary: deflateSetDictionary_1,\n\tdeflateInfo: deflateInfo\n};\n\nconst _has = (obj, key) => {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n};\n\nvar assign = function (obj /*from1, from2, from3, ...*/) {\n  const sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    const source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (const p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// Join array of chunks to single array.\nvar flattenChunks = (chunks) => {\n  // calculate data length\n  let len = 0;\n\n  for (let i = 0, l = chunks.length; i < l; i++) {\n    len += chunks[i].length;\n  }\n\n  // join chunks\n  const result = new Uint8Array(len);\n\n  for (let i = 0, pos = 0, l = chunks.length; i < l; i++) {\n    let chunk = chunks[i];\n    result.set(chunk, pos);\n    pos += chunk.length;\n  }\n\n  return result;\n};\n\nvar common = {\n\tassign: assign,\n\tflattenChunks: flattenChunks\n};\n\n// String encode/decode helpers\n\n\n// Quick check if we can use fast array to bin string conversion\n//\n// - apply(Array) can fail on Android 2.2\n// - apply(Uint8Array) can fail on iOS 5.1 Safari\n//\nlet STR_APPLY_UIA_OK = true;\n\ntry { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }\n\n\n// Table with utf8 lengths (calculated by first byte of sequence)\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n// because max possible codepoint is 0x10ffff\nconst _utf8len = new Uint8Array(256);\nfor (let q = 0; q < 256; q++) {\n  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);\n}\n_utf8len[254] = _utf8len[254] = 1; // Invalid sequence start\n\n\n// convert string to array (typed, when possible)\nvar string2buf = (str) => {\n  if (typeof TextEncoder === 'function' && TextEncoder.prototype.encode) {\n    return new TextEncoder().encode(str);\n  }\n\n  let buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;\n\n  // count binary size\n  for (m_pos = 0; m_pos < str_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\n  }\n\n  // allocate buffer\n  buf = new Uint8Array(buf_len);\n\n  // convert\n  for (i = 0, m_pos = 0; i < buf_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    if (c < 0x80) {\n      /* one byte */\n      buf[i++] = c;\n    } else if (c < 0x800) {\n      /* two bytes */\n      buf[i++] = 0xC0 | (c >>> 6);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else if (c < 0x10000) {\n      /* three bytes */\n      buf[i++] = 0xE0 | (c >>> 12);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else {\n      /* four bytes */\n      buf[i++] = 0xf0 | (c >>> 18);\n      buf[i++] = 0x80 | (c >>> 12 & 0x3f);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    }\n  }\n\n  return buf;\n};\n\n// Helper\nconst buf2binstring = (buf, len) => {\n  // On Chrome, the arguments in a function call that are allowed is `65534`.\n  // If the length of the buffer is smaller than that, we can use this optimization,\n  // otherwise we will take a slower path.\n  if (len < 65534) {\n    if (buf.subarray && STR_APPLY_UIA_OK) {\n      return String.fromCharCode.apply(null, buf.length === len ? buf : buf.subarray(0, len));\n    }\n  }\n\n  let result = '';\n  for (let i = 0; i < len; i++) {\n    result += String.fromCharCode(buf[i]);\n  }\n  return result;\n};\n\n\n// convert array to string\nvar buf2string = (buf, max) => {\n  const len = max || buf.length;\n\n  if (typeof TextDecoder === 'function' && TextDecoder.prototype.decode) {\n    return new TextDecoder().decode(buf.subarray(0, max));\n  }\n\n  let i, out;\n\n  // Reserve max possible length (2 words per char)\n  // NB: by unknown reasons, Array is significantly faster for\n  //     String.fromCharCode.apply than Uint16Array.\n  const utf16buf = new Array(len * 2);\n\n  for (out = 0, i = 0; i < len;) {\n    let c = buf[i++];\n    // quick process ascii\n    if (c < 0x80) { utf16buf[out++] = c; continue; }\n\n    let c_len = _utf8len[c];\n    // skip 5 & 6 byte codes\n    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len - 1; continue; }\n\n    // apply mask on first byte\n    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\n    // join the rest\n    while (c_len > 1 && i < len) {\n      c = (c << 6) | (buf[i++] & 0x3f);\n      c_len--;\n    }\n\n    // terminated by end of string?\n    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }\n\n    if (c < 0x10000) {\n      utf16buf[out++] = c;\n    } else {\n      c -= 0x10000;\n      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);\n      utf16buf[out++] = 0xdc00 | (c & 0x3ff);\n    }\n  }\n\n  return buf2binstring(utf16buf, out);\n};\n\n\n// Calculate max possible position in utf8 buffer,\n// that will not break sequence. If that's not possible\n// - (very small limits) return max size as is.\n//\n// buf[] - utf8 bytes array\n// max   - length limit (mandatory);\nvar utf8border = (buf, max) => {\n\n  max = max || buf.length;\n  if (max > buf.length) { max = buf.length; }\n\n  // go back from last position, until start of sequence found\n  let pos = max - 1;\n  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }\n\n  // Very small and broken sequence,\n  // return max, because we should return something anyway.\n  if (pos < 0) { return max; }\n\n  // If we came to start of buffer - that means buffer is too small,\n  // return max too.\n  if (pos === 0) { return max; }\n\n  return (pos + _utf8len[buf[pos]] > max) ? pos : max;\n};\n\nvar strings = {\n\tstring2buf: string2buf,\n\tbuf2string: buf2string,\n\tutf8border: utf8border\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific, because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n  this.msg = ''/*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2/*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\n\nvar zstream = ZStream;\n\nconst toString$1 = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH: Z_NO_FLUSH$1, Z_SYNC_FLUSH, Z_FULL_FLUSH, Z_FINISH: Z_FINISH$2,\n  Z_OK: Z_OK$2, Z_STREAM_END: Z_STREAM_END$2,\n  Z_DEFAULT_COMPRESSION,\n  Z_DEFAULT_STRATEGY,\n  Z_DEFLATED: Z_DEFLATED$1\n} = constants$2;\n\n/* ===========================================================================*/\n\n\n/**\n * class Deflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[deflate]],\n * [[deflateRaw]] and [[gzip]].\n **/\n\n/* internal\n * Deflate.chunks -> Array\n *\n * Chunks of output data, if [[Deflate#onData]] not overridden.\n **/\n\n/**\n * Deflate.result -> Uint8Array\n *\n * Compressed result, generated by default [[Deflate#onData]]\n * and [[Deflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Deflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Deflate.err -> Number\n *\n * Error code after deflate finished. 0 (Z_OK) on success.\n * You will not need it in real life, because deflate errors\n * are possible only on wrong options or bad `onData` / `onEnd`\n * custom handlers.\n **/\n\n/**\n * Deflate.msg -> String\n *\n * Error message, if [[Deflate.err]] != 0\n **/\n\n\n/**\n * new Deflate(options)\n * - options (Object): zlib deflate options.\n *\n * Creates new deflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `level`\n * - `windowBits`\n * - `memLevel`\n * - `strategy`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw deflate\n * - `gzip` (Boolean) - create gzip wrapper\n * - `header` (Object) - custom header for gzip\n *   - `text` (Boolean) - true if compressed data believed to be text\n *   - `time` (Number) - modification time, unix timestamp\n *   - `os` (Number) - operation system code\n *   - `extra` (Array) - array of bytes with extra data (max 65536)\n *   - `name` (String) - file name (binary string)\n *   - `comment` (String) - comment (binary string)\n *   - `hcrc` (Boolean) - true if header crc should be added\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n *   , chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const deflate = new pako.Deflate({ level: 3});\n *\n * deflate.push(chunk1, false);\n * deflate.push(chunk2, true);  // true -> last chunk\n *\n * if (deflate.err) { throw new Error(deflate.err); }\n *\n * console.log(deflate.result);\n * ```\n **/\nfunction Deflate$1(options) {\n  this.options = common.assign({\n    level: Z_DEFAULT_COMPRESSION,\n    method: Z_DEFLATED$1,\n    chunkSize: 16384,\n    windowBits: 15,\n    memLevel: 8,\n    strategy: Z_DEFAULT_STRATEGY\n  }, options || {});\n\n  let opt = this.options;\n\n  if (opt.raw && (opt.windowBits > 0)) {\n    opt.windowBits = -opt.windowBits;\n  }\n\n  else if (opt.gzip && (opt.windowBits > 0) && (opt.windowBits < 16)) {\n    opt.windowBits += 16;\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm = new zstream();\n  this.strm.avail_out = 0;\n\n  let status = deflate_1$2.deflateInit2(\n    this.strm,\n    opt.level,\n    opt.method,\n    opt.windowBits,\n    opt.memLevel,\n    opt.strategy\n  );\n\n  if (status !== Z_OK$2) {\n    throw new Error(messages[status]);\n  }\n\n  if (opt.header) {\n    deflate_1$2.deflateSetHeader(this.strm, opt.header);\n  }\n\n  if (opt.dictionary) {\n    let dict;\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      // If we need to compress text, change encoding to utf8.\n      dict = strings.string2buf(opt.dictionary);\n    } else if (toString$1.call(opt.dictionary) === '[object ArrayBuffer]') {\n      dict = new Uint8Array(opt.dictionary);\n    } else {\n      dict = opt.dictionary;\n    }\n\n    status = deflate_1$2.deflateSetDictionary(this.strm, dict);\n\n    if (status !== Z_OK$2) {\n      throw new Error(messages[status]);\n    }\n\n    this._dict_set = true;\n  }\n}\n\n/**\n * Deflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer|String): input data. Strings will be\n *   converted to utf8 byte sequence.\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with\n * new compressed chunks. Returns `true` on success. The last data block must\n * have `flush_mode` Z_FINISH (or `true`). That will flush internal pending\n * buffers and call [[Deflate#onEnd]].\n *\n * On fail call [[Deflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nDeflate$1.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  let status, _flush_mode;\n\n  if (this.ended) { return false; }\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH$2 : Z_NO_FLUSH$1;\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // If we need to compress text, change encoding to utf8.\n    strm.input = strings.string2buf(data);\n  } else if (toString$1.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    // Make sure avail_out > 6 to avoid repeating markers\n    if ((_flush_mode === Z_SYNC_FLUSH || _flush_mode === Z_FULL_FLUSH) && strm.avail_out <= 6) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    status = deflate_1$2.deflate(strm, _flush_mode);\n\n    // Ended => flush and finish\n    if (status === Z_STREAM_END$2) {\n      if (strm.next_out > 0) {\n        this.onData(strm.output.subarray(0, strm.next_out));\n      }\n      status = deflate_1$2.deflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return status === Z_OK$2;\n    }\n\n    // Flush if out buffer full\n    if (strm.avail_out === 0) {\n      this.onData(strm.output);\n      continue;\n    }\n\n    // Flush if requested and has data\n    if (_flush_mode > 0 && strm.next_out > 0) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Deflate#onData(chunk) -> Void\n * - chunk (Uint8Array): output data.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nDeflate$1.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Deflate#onEnd(status) -> Void\n * - status (Number): deflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called once after you tell deflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nDeflate$1.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK$2) {\n    this.result = common.flattenChunks(this.chunks);\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * deflate(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * Compress `data` with deflate algorithm and `options`.\n *\n * Supported options are:\n *\n * - level\n * - windowBits\n * - memLevel\n * - strategy\n * - dictionary\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const data = new Uint8Array([1,2,3,4,5,6,7,8,9]);\n *\n * console.log(pako.deflate(data));\n * ```\n **/\nfunction deflate$1(input, options) {\n  const deflator = new Deflate$1(options);\n\n  deflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (deflator.err) { throw deflator.msg || messages[deflator.err]; }\n\n  return deflator.result;\n}\n\n\n/**\n * deflateRaw(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction deflateRaw$1(input, options) {\n  options = options || {};\n  options.raw = true;\n  return deflate$1(input, options);\n}\n\n\n/**\n * gzip(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but create gzip wrapper instead of\n * deflate one.\n **/\nfunction gzip$1(input, options) {\n  options = options || {};\n  options.gzip = true;\n  return deflate$1(input, options);\n}\n\n\nvar Deflate_1$1 = Deflate$1;\nvar deflate_2 = deflate$1;\nvar deflateRaw_1$1 = deflateRaw$1;\nvar gzip_1$1 = gzip$1;\nvar constants$1 = constants$2;\n\nvar deflate_1$1 = {\n\tDeflate: Deflate_1$1,\n\tdeflate: deflate_2,\n\tdeflateRaw: deflateRaw_1$1,\n\tgzip: gzip_1$1,\n\tconstants: constants$1\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// See state defs from inflate.js\nconst BAD$1 = 16209;       /* got a data error -- remain here until reset */\nconst TYPE$1 = 16191;      /* i: waiting for type bits, including last-flag bit */\n\n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\nvar inffast = function inflate_fast(strm, start) {\n  let _in;                    /* local strm.input */\n  let last;                   /* have enough input while in < last */\n  let _out;                   /* local strm.output */\n  let beg;                    /* inflate()'s initial strm.output */\n  let end;                    /* while out < end, enough space available */\n//#ifdef INFLATE_STRICT\n  let dmax;                   /* maximum distance from zlib header */\n//#endif\n  let wsize;                  /* window size or zero if not using window */\n  let whave;                  /* valid bytes in the window */\n  let wnext;                  /* window write index */\n  // Use `s_window` instead `window`, avoid conflict with instrumentation tools\n  let s_window;               /* allocated sliding window, if wsize != 0 */\n  let hold;                   /* local strm.hold */\n  let bits;                   /* local strm.bits */\n  let lcode;                  /* local strm.lencode */\n  let dcode;                  /* local strm.distcode */\n  let lmask;                  /* mask for first level of length codes */\n  let dmask;                  /* mask for first level of distance codes */\n  let here;                   /* retrieved table entry */\n  let op;                     /* code bits, operation, extra bits, or */\n                              /*  window position, window bytes to copy */\n  let len;                    /* match length, unused bytes */\n  let dist;                   /* match distance */\n  let from;                   /* where to copy match from */\n  let from_source;\n\n\n  let input, output; // JS specific, because we have no pointers\n\n  /* copy state to local variables */\n  const state = strm.state;\n  //here = state.here;\n  _in = strm.next_in;\n  input = strm.input;\n  last = _in + (strm.avail_in - 5);\n  _out = strm.next_out;\n  output = strm.output;\n  beg = _out - (start - strm.avail_out);\n  end = _out + (strm.avail_out - 257);\n//#ifdef INFLATE_STRICT\n  dmax = state.dmax;\n//#endif\n  wsize = state.wsize;\n  whave = state.whave;\n  wnext = state.wnext;\n  s_window = state.window;\n  hold = state.hold;\n  bits = state.bits;\n  lcode = state.lencode;\n  dcode = state.distcode;\n  lmask = (1 << state.lenbits) - 1;\n  dmask = (1 << state.distbits) - 1;\n\n\n  /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n  top:\n  do {\n    if (bits < 15) {\n      hold += input[_in++] << bits;\n      bits += 8;\n      hold += input[_in++] << bits;\n      bits += 8;\n    }\n\n    here = lcode[hold & lmask];\n\n    dolen:\n    for (;;) { // Goto emulation\n      op = here >>> 24/*here.bits*/;\n      hold >>>= op;\n      bits -= op;\n      op = (here >>> 16) & 0xff/*here.op*/;\n      if (op === 0) {                          /* literal */\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        output[_out++] = here & 0xffff/*here.val*/;\n      }\n      else if (op & 16) {                     /* length base */\n        len = here & 0xffff/*here.val*/;\n        op &= 15;                           /* number of extra bits */\n        if (op) {\n          if (bits < op) {\n            hold += input[_in++] << bits;\n            bits += 8;\n          }\n          len += hold & ((1 << op) - 1);\n          hold >>>= op;\n          bits -= op;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n        if (bits < 15) {\n          hold += input[_in++] << bits;\n          bits += 8;\n          hold += input[_in++] << bits;\n          bits += 8;\n        }\n        here = dcode[hold & dmask];\n\n        dodist:\n        for (;;) { // goto emulation\n          op = here >>> 24/*here.bits*/;\n          hold >>>= op;\n          bits -= op;\n          op = (here >>> 16) & 0xff/*here.op*/;\n\n          if (op & 16) {                      /* distance base */\n            dist = here & 0xffff/*here.val*/;\n            op &= 15;                       /* number of extra bits */\n            if (bits < op) {\n              hold += input[_in++] << bits;\n              bits += 8;\n              if (bits < op) {\n                hold += input[_in++] << bits;\n                bits += 8;\n              }\n            }\n            dist += hold & ((1 << op) - 1);\n//#ifdef INFLATE_STRICT\n            if (dist > dmax) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD$1;\n              break top;\n            }\n//#endif\n            hold >>>= op;\n            bits -= op;\n            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n            op = _out - beg;                /* max distance in output */\n            if (dist > op) {                /* see if copy from window */\n              op = dist - op;               /* distance back in window */\n              if (op > whave) {\n                if (state.sane) {\n                  strm.msg = 'invalid distance too far back';\n                  state.mode = BAD$1;\n                  break top;\n                }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n              }\n              from = 0; // window index\n              from_source = s_window;\n              if (wnext === 0) {           /* very common case */\n                from += wsize - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              else if (wnext < op) {      /* wrap around window */\n                from += wsize + wnext - op;\n                op -= wnext;\n                if (op < len) {         /* some from end of window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = 0;\n                  if (wnext < len) {  /* some from start of window */\n                    op = wnext;\n                    len -= op;\n                    do {\n                      output[_out++] = s_window[from++];\n                    } while (--op);\n                    from = _out - dist;      /* rest from output */\n                    from_source = output;\n                  }\n                }\n              }\n              else {                      /* contiguous in window */\n                from += wnext - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              while (len > 2) {\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                len -= 3;\n              }\n              if (len) {\n                output[_out++] = from_source[from++];\n                if (len > 1) {\n                  output[_out++] = from_source[from++];\n                }\n              }\n            }\n            else {\n              from = _out - dist;          /* copy direct from output */\n              do {                        /* minimum length is three */\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                len -= 3;\n              } while (len > 2);\n              if (len) {\n                output[_out++] = output[from++];\n                if (len > 1) {\n                  output[_out++] = output[from++];\n                }\n              }\n            }\n          }\n          else if ((op & 64) === 0) {          /* 2nd level distance code */\n            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n            continue dodist;\n          }\n          else {\n            strm.msg = 'invalid distance code';\n            state.mode = BAD$1;\n            break top;\n          }\n\n          break; // need to emulate goto via \"continue\"\n        }\n      }\n      else if ((op & 64) === 0) {              /* 2nd level length code */\n        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n        continue dolen;\n      }\n      else if (op & 32) {                     /* end-of-block */\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.mode = TYPE$1;\n        break top;\n      }\n      else {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD$1;\n        break top;\n      }\n\n      break; // need to emulate goto via \"continue\"\n    }\n  } while (_in < last && _out < end);\n\n  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n  len = bits >> 3;\n  _in -= len;\n  bits -= len << 3;\n  hold &= (1 << bits) - 1;\n\n  /* update state and return */\n  strm.next_in = _in;\n  strm.next_out = _out;\n  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\n  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\n  state.hold = hold;\n  state.bits = bits;\n  return;\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst MAXBITS = 15;\nconst ENOUGH_LENS$1 = 852;\nconst ENOUGH_DISTS$1 = 592;\n//const ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst CODES$1 = 0;\nconst LENS$1 = 1;\nconst DISTS$1 = 2;\n\nconst lbase = new Uint16Array([ /* Length codes 257..285 base */\n  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n]);\n\nconst lext = new Uint8Array([ /* Length codes 257..285 extra */\n  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\n]);\n\nconst dbase = new Uint16Array([ /* Distance codes 0..29 base */\n  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n  8193, 12289, 16385, 24577, 0, 0\n]);\n\nconst dext = new Uint8Array([ /* Distance codes 0..29 extra */\n  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\n  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\n  28, 28, 29, 29, 64, 64\n]);\n\nconst inflate_table = (type, lens, lens_index, codes, table, table_index, work, opts) =>\n{\n  const bits = opts.bits;\n      //here = opts.here; /* table entry for duplication */\n\n  let len = 0;               /* a code's length in bits */\n  let sym = 0;               /* index of code symbols */\n  let min = 0, max = 0;          /* minimum and maximum code lengths */\n  let root = 0;              /* number of index bits for root table */\n  let curr = 0;              /* number of index bits for current table */\n  let drop = 0;              /* code bits to drop for sub-table */\n  let left = 0;                   /* number of prefix codes available */\n  let used = 0;              /* code entries in table used */\n  let huff = 0;              /* Huffman code */\n  let incr;              /* for incrementing code, index */\n  let fill;              /* index for replicating entries */\n  let low;               /* low bits for current root entry */\n  let mask;              /* mask for low root bits */\n  let next;             /* next available space in table */\n  let base = null;     /* base value table to use */\n//  let shoextra;    /* extra bits table to use */\n  let match;                  /* use base and extra for symbol >= match */\n  const count = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */\n  const offs = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */\n  let extra = null;\n\n  let here_bits, here_op, here_val;\n\n  /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n  for (len = 0; len <= MAXBITS; len++) {\n    count[len] = 0;\n  }\n  for (sym = 0; sym < codes; sym++) {\n    count[lens[lens_index + sym]]++;\n  }\n\n  /* bound code lengths, force root to be within code lengths */\n  root = bits;\n  for (max = MAXBITS; max >= 1; max--) {\n    if (count[max] !== 0) { break; }\n  }\n  if (root > max) {\n    root = max;\n  }\n  if (max === 0) {                     /* no symbols to code at all */\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n\n    //table.op[opts.table_index] = 64;\n    //table.bits[opts.table_index] = 1;\n    //table.val[opts.table_index++] = 0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n    opts.bits = 1;\n    return 0;     /* no symbols, but wait for decoding to report error */\n  }\n  for (min = 1; min < max; min++) {\n    if (count[min] !== 0) { break; }\n  }\n  if (root < min) {\n    root = min;\n  }\n\n  /* check for an over-subscribed or incomplete set of lengths */\n  left = 1;\n  for (len = 1; len <= MAXBITS; len++) {\n    left <<= 1;\n    left -= count[len];\n    if (left < 0) {\n      return -1;\n    }        /* over-subscribed */\n  }\n  if (left > 0 && (type === CODES$1 || max !== 1)) {\n    return -1;                      /* incomplete set */\n  }\n\n  /* generate offsets into symbol table for each length for sorting */\n  offs[1] = 0;\n  for (len = 1; len < MAXBITS; len++) {\n    offs[len + 1] = offs[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (sym = 0; sym < codes; sym++) {\n    if (lens[lens_index + sym] !== 0) {\n      work[offs[lens[lens_index + sym]]++] = sym;\n    }\n  }\n\n  /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n  /* set up for code type */\n  // poor man optimization - use if-else instead of switch,\n  // to avoid deopts in old v8\n  if (type === CODES$1) {\n    base = extra = work;    /* dummy value--not used */\n    match = 20;\n\n  } else if (type === LENS$1) {\n    base = lbase;\n    extra = lext;\n    match = 257;\n\n  } else {                    /* DISTS */\n    base = dbase;\n    extra = dext;\n    match = 0;\n  }\n\n  /* initialize opts for loop */\n  huff = 0;                   /* starting code */\n  sym = 0;                    /* starting code symbol */\n  len = min;                  /* starting code length */\n  next = table_index;              /* current table to fill in */\n  curr = root;                /* current table index bits */\n  drop = 0;                   /* current bits to drop from code for index */\n  low = -1;                   /* trigger new sub-table when len > root */\n  used = 1 << root;          /* use root table entries */\n  mask = used - 1;            /* mask for comparing low */\n\n  /* check available table space */\n  if ((type === LENS$1 && used > ENOUGH_LENS$1) ||\n    (type === DISTS$1 && used > ENOUGH_DISTS$1)) {\n    return 1;\n  }\n\n  /* process all codes and make table entries */\n  for (;;) {\n    /* create table entry */\n    here_bits = len - drop;\n    if (work[sym] + 1 < match) {\n      here_op = 0;\n      here_val = work[sym];\n    }\n    else if (work[sym] >= match) {\n      here_op = extra[work[sym] - match];\n      here_val = base[work[sym] - match];\n    }\n    else {\n      here_op = 32 + 64;         /* end of block */\n      here_val = 0;\n    }\n\n    /* replicate for those indices with low len bits equal to huff */\n    incr = 1 << (len - drop);\n    fill = 1 << curr;\n    min = fill;                 /* save offset to next table */\n    do {\n      fill -= incr;\n      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;\n    } while (fill !== 0);\n\n    /* backwards increment the len-bit code huff */\n    incr = 1 << (len - 1);\n    while (huff & incr) {\n      incr >>= 1;\n    }\n    if (incr !== 0) {\n      huff &= incr - 1;\n      huff += incr;\n    } else {\n      huff = 0;\n    }\n\n    /* go to next symbol, update count, len */\n    sym++;\n    if (--count[len] === 0) {\n      if (len === max) { break; }\n      len = lens[lens_index + work[sym]];\n    }\n\n    /* create new sub-table if needed */\n    if (len > root && (huff & mask) !== low) {\n      /* if first time, transition to sub-tables */\n      if (drop === 0) {\n        drop = root;\n      }\n\n      /* increment past last table */\n      next += min;            /* here min is 1 << curr */\n\n      /* determine length of next table */\n      curr = len - drop;\n      left = 1 << curr;\n      while (curr + drop < max) {\n        left -= count[curr + drop];\n        if (left <= 0) { break; }\n        curr++;\n        left <<= 1;\n      }\n\n      /* check for enough space */\n      used += 1 << curr;\n      if ((type === LENS$1 && used > ENOUGH_LENS$1) ||\n        (type === DISTS$1 && used > ENOUGH_DISTS$1)) {\n        return 1;\n      }\n\n      /* point entry in root table to sub-table */\n      low = huff & mask;\n      /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;\n    }\n  }\n\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\n  if (huff !== 0) {\n    //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;\n  }\n\n  /* set return parameters */\n  //opts.table_index += used;\n  opts.bits = root;\n  return 0;\n};\n\n\nvar inftrees = inflate_table;\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n\n\n\n\n\nconst CODES = 0;\nconst LENS = 1;\nconst DISTS = 2;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_FINISH: Z_FINISH$1, Z_BLOCK, Z_TREES,\n  Z_OK: Z_OK$1, Z_STREAM_END: Z_STREAM_END$1, Z_NEED_DICT: Z_NEED_DICT$1, Z_STREAM_ERROR: Z_STREAM_ERROR$1, Z_DATA_ERROR: Z_DATA_ERROR$1, Z_MEM_ERROR: Z_MEM_ERROR$1, Z_BUF_ERROR,\n  Z_DEFLATED\n} = constants$2;\n\n\n/* STATES ====================================================================*/\n/* ===========================================================================*/\n\n\nconst    HEAD = 16180;       /* i: waiting for magic header */\nconst    FLAGS = 16181;      /* i: waiting for method and flags (gzip) */\nconst    TIME = 16182;       /* i: waiting for modification time (gzip) */\nconst    OS = 16183;         /* i: waiting for extra flags and operating system (gzip) */\nconst    EXLEN = 16184;      /* i: waiting for extra length (gzip) */\nconst    EXTRA = 16185;      /* i: waiting for extra bytes (gzip) */\nconst    NAME = 16186;       /* i: waiting for end of file name (gzip) */\nconst    COMMENT = 16187;    /* i: waiting for end of comment (gzip) */\nconst    HCRC = 16188;       /* i: waiting for header crc (gzip) */\nconst    DICTID = 16189;    /* i: waiting for dictionary check value */\nconst    DICT = 16190;      /* waiting for inflateSetDictionary() call */\nconst        TYPE = 16191;      /* i: waiting for type bits, including last-flag bit */\nconst        TYPEDO = 16192;    /* i: same, but skip check to exit inflate on new block */\nconst        STORED = 16193;    /* i: waiting for stored size (length and complement) */\nconst        COPY_ = 16194;     /* i/o: same as COPY below, but only first time in */\nconst        COPY = 16195;      /* i/o: waiting for input or output to copy stored block */\nconst        TABLE = 16196;     /* i: waiting for dynamic block table lengths */\nconst        LENLENS = 16197;   /* i: waiting for code length code lengths */\nconst        CODELENS = 16198;  /* i: waiting for length/lit and distance code lengths */\nconst            LEN_ = 16199;      /* i: same as LEN below, but only first time in */\nconst            LEN = 16200;       /* i: waiting for length/lit/eob code */\nconst            LENEXT = 16201;    /* i: waiting for length extra bits */\nconst            DIST = 16202;      /* i: waiting for distance code */\nconst            DISTEXT = 16203;   /* i: waiting for distance extra bits */\nconst            MATCH = 16204;     /* o: waiting for output space to copy string */\nconst            LIT = 16205;       /* o: waiting for output space to write literal */\nconst    CHECK = 16206;     /* i: waiting for 32-bit check value */\nconst    LENGTH = 16207;    /* i: waiting for 32-bit length (gzip) */\nconst    DONE = 16208;      /* finished check, done -- remain here until reset */\nconst    BAD = 16209;       /* got a data error -- remain here until reset */\nconst    MEM = 16210;       /* got an inflate() memory error -- remain here until reset */\nconst    SYNC = 16211;      /* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\n\n\nconst ENOUGH_LENS = 852;\nconst ENOUGH_DISTS = 592;\n//const ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst MAX_WBITS = 15;\n/* 32K LZ77 window */\nconst DEF_WBITS = MAX_WBITS;\n\n\nconst zswap32 = (q) => {\n\n  return  (((q >>> 24) & 0xff) +\n          ((q >>> 8) & 0xff00) +\n          ((q & 0xff00) << 8) +\n          ((q & 0xff) << 24));\n};\n\n\nfunction InflateState() {\n  this.strm = null;           /* pointer back to this zlib stream */\n  this.mode = 0;              /* current inflate mode */\n  this.last = false;          /* true if processing last block */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip,\n                                 bit 2 true to validate check value */\n  this.havedict = false;      /* true if dictionary provided */\n  this.flags = 0;             /* gzip header method and flags (0 if zlib), or\n                                 -1 if raw or no header yet */\n  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\n  this.check = 0;             /* protected copy of check value */\n  this.total = 0;             /* protected copy of output count */\n  // TODO: may be {}\n  this.head = null;           /* where to save gzip header information */\n\n  /* sliding window */\n  this.wbits = 0;             /* log base 2 of requested window size */\n  this.wsize = 0;             /* window size or zero if not using window */\n  this.whave = 0;             /* valid bytes in the window */\n  this.wnext = 0;             /* window write index */\n  this.window = null;         /* allocated sliding window, if needed */\n\n  /* bit accumulator */\n  this.hold = 0;              /* input bit accumulator */\n  this.bits = 0;              /* number of bits in \"in\" */\n\n  /* for string and stored block copying */\n  this.length = 0;            /* literal or length of data to copy */\n  this.offset = 0;            /* distance back to copy string from */\n\n  /* for table and code decoding */\n  this.extra = 0;             /* extra bits needed */\n\n  /* fixed and dynamic code tables */\n  this.lencode = null;          /* starting table for length/literal codes */\n  this.distcode = null;         /* starting table for distance codes */\n  this.lenbits = 0;           /* index bits for lencode */\n  this.distbits = 0;          /* index bits for distcode */\n\n  /* dynamic table building */\n  this.ncode = 0;             /* number of code length code lengths */\n  this.nlen = 0;              /* number of length code lengths */\n  this.ndist = 0;             /* number of distance code lengths */\n  this.have = 0;              /* number of code lengths in lens[] */\n  this.next = null;              /* next available space in codes[] */\n\n  this.lens = new Uint16Array(320); /* temporary storage for code lengths */\n  this.work = new Uint16Array(288); /* work area for code table building */\n\n  /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n  //this.codes = new Int32Array(ENOUGH);       /* space for code tables */\n  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\n  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\n  this.sane = 0;                   /* if false, allow invalid distance too far */\n  this.back = 0;                   /* bits back of last unprocessed length/lit */\n  this.was = 0;                    /* initial length of match */\n}\n\n\nconst inflateStateCheck = (strm) => {\n\n  if (!strm) {\n    return 1;\n  }\n  const state = strm.state;\n  if (!state || state.strm !== strm ||\n    state.mode < HEAD || state.mode > SYNC) {\n    return 1;\n  }\n  return 0;\n};\n\n\nconst inflateResetKeep = (strm) => {\n\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  strm.total_in = strm.total_out = state.total = 0;\n  strm.msg = ''; /*Z_NULL*/\n  if (state.wrap) {       /* to support ill-conceived Java test suite */\n    strm.adler = state.wrap & 1;\n  }\n  state.mode = HEAD;\n  state.last = 0;\n  state.havedict = 0;\n  state.flags = -1;\n  state.dmax = 32768;\n  state.head = null/*Z_NULL*/;\n  state.hold = 0;\n  state.bits = 0;\n  //state.lencode = state.distcode = state.next = state.codes;\n  state.lencode = state.lendyn = new Int32Array(ENOUGH_LENS);\n  state.distcode = state.distdyn = new Int32Array(ENOUGH_DISTS);\n\n  state.sane = 1;\n  state.back = -1;\n  //Tracev((stderr, \"inflate: reset\\n\"));\n  return Z_OK$1;\n};\n\n\nconst inflateReset = (strm) => {\n\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  state.wsize = 0;\n  state.whave = 0;\n  state.wnext = 0;\n  return inflateResetKeep(strm);\n\n};\n\n\nconst inflateReset2 = (strm, windowBits) => {\n  let wrap;\n\n  /* get the state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n\n  /* extract wrap request from windowBits parameter */\n  if (windowBits < 0) {\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n  else {\n    wrap = (windowBits >> 4) + 5;\n    if (windowBits < 48) {\n      windowBits &= 15;\n    }\n  }\n\n  /* set number of window bits, free window if different */\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n    return Z_STREAM_ERROR$1;\n  }\n  if (state.window !== null && state.wbits !== windowBits) {\n    state.window = null;\n  }\n\n  /* update state and reset the rest of it */\n  state.wrap = wrap;\n  state.wbits = windowBits;\n  return inflateReset(strm);\n};\n\n\nconst inflateInit2 = (strm, windowBits) => {\n\n  if (!strm) { return Z_STREAM_ERROR$1; }\n  //strm.msg = Z_NULL;                 /* in case we return an error */\n\n  const state = new InflateState();\n\n  //if (state === Z_NULL) return Z_MEM_ERROR;\n  //Tracev((stderr, \"inflate: allocated\\n\"));\n  strm.state = state;\n  state.strm = strm;\n  state.window = null/*Z_NULL*/;\n  state.mode = HEAD;     /* to pass state test in inflateReset2() */\n  const ret = inflateReset2(strm, windowBits);\n  if (ret !== Z_OK$1) {\n    strm.state = null/*Z_NULL*/;\n  }\n  return ret;\n};\n\n\nconst inflateInit = (strm) => {\n\n  return inflateInit2(strm, DEF_WBITS);\n};\n\n\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\nlet virgin = true;\n\nlet lenfix, distfix; // We have no pointers in JS, so keep tables separate\n\n\nconst fixedtables = (state) => {\n\n  /* build fixed huffman tables if first call (may not be thread safe) */\n  if (virgin) {\n    lenfix = new Int32Array(512);\n    distfix = new Int32Array(32);\n\n    /* literal/length table */\n    let sym = 0;\n    while (sym < 144) { state.lens[sym++] = 8; }\n    while (sym < 256) { state.lens[sym++] = 9; }\n    while (sym < 280) { state.lens[sym++] = 7; }\n    while (sym < 288) { state.lens[sym++] = 8; }\n\n    inftrees(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });\n\n    /* distance table */\n    sym = 0;\n    while (sym < 32) { state.lens[sym++] = 5; }\n\n    inftrees(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });\n\n    /* do this just once */\n    virgin = false;\n  }\n\n  state.lencode = lenfix;\n  state.lenbits = 9;\n  state.distcode = distfix;\n  state.distbits = 5;\n};\n\n\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\nconst updatewindow = (strm, src, end, copy) => {\n\n  let dist;\n  const state = strm.state;\n\n  /* if it hasn't been done already, allocate space for the window */\n  if (state.window === null) {\n    state.wsize = 1 << state.wbits;\n    state.wnext = 0;\n    state.whave = 0;\n\n    state.window = new Uint8Array(state.wsize);\n  }\n\n  /* copy state->wsize or less output bytes into the circular window */\n  if (copy >= state.wsize) {\n    state.window.set(src.subarray(end - state.wsize, end), 0);\n    state.wnext = 0;\n    state.whave = state.wsize;\n  }\n  else {\n    dist = state.wsize - state.wnext;\n    if (dist > copy) {\n      dist = copy;\n    }\n    //zmemcpy(state->window + state->wnext, end - copy, dist);\n    state.window.set(src.subarray(end - copy, end - copy + dist), state.wnext);\n    copy -= dist;\n    if (copy) {\n      //zmemcpy(state->window, end - copy, copy);\n      state.window.set(src.subarray(end - copy, end), 0);\n      state.wnext = copy;\n      state.whave = state.wsize;\n    }\n    else {\n      state.wnext += dist;\n      if (state.wnext === state.wsize) { state.wnext = 0; }\n      if (state.whave < state.wsize) { state.whave += dist; }\n    }\n  }\n  return 0;\n};\n\n\nconst inflate$2 = (strm, flush) => {\n\n  let state;\n  let input, output;          // input/output buffers\n  let next;                   /* next input INDEX */\n  let put;                    /* next output INDEX */\n  let have, left;             /* available input and output */\n  let hold;                   /* bit buffer */\n  let bits;                   /* bits in bit buffer */\n  let _in, _out;              /* save starting available input and output */\n  let copy;                   /* number of stored or match bytes to copy */\n  let from;                   /* where to copy match bytes from */\n  let from_source;\n  let here = 0;               /* current decoding table entry */\n  let here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n  //let last;                   /* parent table entry */\n  let last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n  let len;                    /* length to copy for repeats, bits to drop */\n  let ret;                    /* return code */\n  const hbuf = new Uint8Array(4);    /* buffer for gzip header crc calculation */\n  let opts;\n\n  let n; // temporary variable for NEED_BITS\n\n  const order = /* permutation of code lengths */\n    new Uint8Array([ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ]);\n\n\n  if (inflateStateCheck(strm) || !strm.output ||\n      (!strm.input && strm.avail_in !== 0)) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  state = strm.state;\n  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */\n\n\n  //--- LOAD() ---\n  put = strm.next_out;\n  output = strm.output;\n  left = strm.avail_out;\n  next = strm.next_in;\n  input = strm.input;\n  have = strm.avail_in;\n  hold = state.hold;\n  bits = state.bits;\n  //---\n\n  _in = have;\n  _out = left;\n  ret = Z_OK$1;\n\n  inf_leave: // goto emulation\n  for (;;) {\n    switch (state.mode) {\n      case HEAD:\n        if (state.wrap === 0) {\n          state.mode = TYPEDO;\n          break;\n        }\n        //=== NEEDBITS(16);\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\n          if (state.wbits === 0) {\n            state.wbits = 15;\n          }\n          state.check = 0/*crc32(0L, Z_NULL, 0)*/;\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          state.mode = FLAGS;\n          break;\n        }\n        if (state.head) {\n          state.head.done = false;\n        }\n        if (!(state.wrap & 1) ||   /* check if zlib header allowed */\n          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\n          strm.msg = 'incorrect header check';\n          state.mode = BAD;\n          break;\n        }\n        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n        len = (hold & 0x0f)/*BITS(4)*/ + 8;\n        if (state.wbits === 0) {\n          state.wbits = len;\n        }\n        if (len > 15 || len > state.wbits) {\n          strm.msg = 'invalid window size';\n          state.mode = BAD;\n          break;\n        }\n\n        // !!! pako patch. Force use `options.windowBits` if passed.\n        // Required to always use max window size by default.\n        state.dmax = 1 << state.wbits;\n        //state.dmax = 1 << len;\n\n        state.flags = 0;               /* indicate zlib header */\n        //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = hold & 0x200 ? DICTID : TYPE;\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        break;\n      case FLAGS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.flags = hold;\n        if ((state.flags & 0xff) !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        if (state.flags & 0xe000) {\n          strm.msg = 'unknown header flags set';\n          state.mode = BAD;\n          break;\n        }\n        if (state.head) {\n          state.head.text = ((hold >> 8) & 1);\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = TIME;\n        /* falls through */\n      case TIME:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.time = hold;\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC4(state.check, hold)\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          hbuf[2] = (hold >>> 16) & 0xff;\n          hbuf[3] = (hold >>> 24) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 4, 0);\n          //===\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = OS;\n        /* falls through */\n      case OS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.xflags = (hold & 0xff);\n          state.head.os = (hold >> 8);\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = EXLEN;\n        /* falls through */\n      case EXLEN:\n        if (state.flags & 0x0400) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length = hold;\n          if (state.head) {\n            state.head.extra_len = hold;\n          }\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            //=== CRC2(state.check, hold);\n            hbuf[0] = hold & 0xff;\n            hbuf[1] = (hold >>> 8) & 0xff;\n            state.check = crc32_1(state.check, hbuf, 2, 0);\n            //===//\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        else if (state.head) {\n          state.head.extra = null/*Z_NULL*/;\n        }\n        state.mode = EXTRA;\n        /* falls through */\n      case EXTRA:\n        if (state.flags & 0x0400) {\n          copy = state.length;\n          if (copy > have) { copy = have; }\n          if (copy) {\n            if (state.head) {\n              len = state.head.extra_len - state.length;\n              if (!state.head.extra) {\n                // Use untyped array for more convenient processing later\n                state.head.extra = new Uint8Array(state.head.extra_len);\n              }\n              state.head.extra.set(\n                input.subarray(\n                  next,\n                  // extra field is limited to 65536 bytes\n                  // - no need for additional size check\n                  next + copy\n                ),\n                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n                len\n              );\n              //zmemcpy(state.head.extra + len, next,\n              //        len + copy > state.head.extra_max ?\n              //        state.head.extra_max - len : copy);\n            }\n            if ((state.flags & 0x0200) && (state.wrap & 4)) {\n              state.check = crc32_1(state.check, input, copy, next);\n            }\n            have -= copy;\n            next += copy;\n            state.length -= copy;\n          }\n          if (state.length) { break inf_leave; }\n        }\n        state.length = 0;\n        state.mode = NAME;\n        /* falls through */\n      case NAME:\n        if (state.flags & 0x0800) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            // TODO: 2 or 1 bytes?\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.name_max*/)) {\n              state.head.name += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            state.check = crc32_1(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.name = null;\n        }\n        state.length = 0;\n        state.mode = COMMENT;\n        /* falls through */\n      case COMMENT:\n        if (state.flags & 0x1000) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.comm_max*/)) {\n              state.head.comment += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            state.check = crc32_1(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.comment = null;\n        }\n        state.mode = HCRC;\n        /* falls through */\n      case HCRC:\n        if (state.flags & 0x0200) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if ((state.wrap & 4) && hold !== (state.check & 0xffff)) {\n            strm.msg = 'header crc mismatch';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        if (state.head) {\n          state.head.hcrc = ((state.flags >> 9) & 1);\n          state.head.done = true;\n        }\n        strm.adler = state.check = 0;\n        state.mode = TYPE;\n        break;\n      case DICTID:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        strm.adler = state.check = zswap32(hold);\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = DICT;\n        /* falls through */\n      case DICT:\n        if (state.havedict === 0) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          return Z_NEED_DICT$1;\n        }\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = TYPE;\n        /* falls through */\n      case TYPE:\n        if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case TYPEDO:\n        if (state.last) {\n          //--- BYTEBITS() ---//\n          hold >>>= bits & 7;\n          bits -= bits & 7;\n          //---//\n          state.mode = CHECK;\n          break;\n        }\n        //=== NEEDBITS(3); */\n        while (bits < 3) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.last = (hold & 0x01)/*BITS(1)*/;\n        //--- DROPBITS(1) ---//\n        hold >>>= 1;\n        bits -= 1;\n        //---//\n\n        switch ((hold & 0x03)/*BITS(2)*/) {\n          case 0:                             /* stored block */\n            //Tracev((stderr, \"inflate:     stored block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = STORED;\n            break;\n          case 1:                             /* fixed block */\n            fixedtables(state);\n            //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = LEN_;             /* decode codes */\n            if (flush === Z_TREES) {\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n              break inf_leave;\n            }\n            break;\n          case 2:                             /* dynamic block */\n            //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = TABLE;\n            break;\n          case 3:\n            strm.msg = 'invalid block type';\n            state.mode = BAD;\n        }\n        //--- DROPBITS(2) ---//\n        hold >>>= 2;\n        bits -= 2;\n        //---//\n        break;\n      case STORED:\n        //--- BYTEBITS() ---// /* go to byte boundary */\n        hold >>>= bits & 7;\n        bits -= bits & 7;\n        //---//\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\n          strm.msg = 'invalid stored block lengths';\n          state.mode = BAD;\n          break;\n        }\n        state.length = hold & 0xffff;\n        //Tracev((stderr, \"inflate:       stored length %u\\n\",\n        //        state.length));\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = COPY_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case COPY_:\n        state.mode = COPY;\n        /* falls through */\n      case COPY:\n        copy = state.length;\n        if (copy) {\n          if (copy > have) { copy = have; }\n          if (copy > left) { copy = left; }\n          if (copy === 0) { break inf_leave; }\n          //--- zmemcpy(put, next, copy); ---\n          output.set(input.subarray(next, next + copy), put);\n          //---//\n          have -= copy;\n          next += copy;\n          left -= copy;\n          put += copy;\n          state.length -= copy;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       stored end\\n\"));\n        state.mode = TYPE;\n        break;\n      case TABLE:\n        //=== NEEDBITS(14); */\n        while (bits < 14) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n//#ifndef PKZIP_BUG_WORKAROUND\n        if (state.nlen > 286 || state.ndist > 30) {\n          strm.msg = 'too many length or distance symbols';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n        state.have = 0;\n        state.mode = LENLENS;\n        /* falls through */\n      case LENLENS:\n        while (state.have < state.ncode) {\n          //=== NEEDBITS(3);\n          while (bits < 3) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\n          //--- DROPBITS(3) ---//\n          hold >>>= 3;\n          bits -= 3;\n          //---//\n        }\n        while (state.have < 19) {\n          state.lens[order[state.have++]] = 0;\n        }\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        //state.next = state.codes;\n        //state.lencode = state.next;\n        // Switch to use dynamic table\n        state.lencode = state.lendyn;\n        state.lenbits = 7;\n\n        opts = { bits: state.lenbits };\n        ret = inftrees(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n        state.lenbits = opts.bits;\n\n        if (ret) {\n          strm.msg = 'invalid code lengths set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n        state.have = 0;\n        state.mode = CODELENS;\n        /* falls through */\n      case CODELENS:\n        while (state.have < state.nlen + state.ndist) {\n          for (;;) {\n            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          if (here_val < 16) {\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            state.lens[state.have++] = here_val;\n          }\n          else {\n            if (here_val === 16) {\n              //=== NEEDBITS(here.bits + 2);\n              n = here_bits + 2;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              if (state.have === 0) {\n                strm.msg = 'invalid bit length repeat';\n                state.mode = BAD;\n                break;\n              }\n              len = state.lens[state.have - 1];\n              copy = 3 + (hold & 0x03);//BITS(2);\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n            }\n            else if (here_val === 17) {\n              //=== NEEDBITS(here.bits + 3);\n              n = here_bits + 3;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 3 + (hold & 0x07);//BITS(3);\n              //--- DROPBITS(3) ---//\n              hold >>>= 3;\n              bits -= 3;\n              //---//\n            }\n            else {\n              //=== NEEDBITS(here.bits + 7);\n              n = here_bits + 7;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 11 + (hold & 0x7f);//BITS(7);\n              //--- DROPBITS(7) ---//\n              hold >>>= 7;\n              bits -= 7;\n              //---//\n            }\n            if (state.have + copy > state.nlen + state.ndist) {\n              strm.msg = 'invalid bit length repeat';\n              state.mode = BAD;\n              break;\n            }\n            while (copy--) {\n              state.lens[state.have++] = len;\n            }\n          }\n        }\n\n        /* handle error breaks in while */\n        if (state.mode === BAD) { break; }\n\n        /* check for end-of-block code (better have one) */\n        if (state.lens[256] === 0) {\n          strm.msg = 'invalid code -- missing end-of-block';\n          state.mode = BAD;\n          break;\n        }\n\n        /* build code tables -- note: do not change the lenbits or distbits\n           values here (9 and 6) without reading the comments in inftrees.h\n           concerning the ENOUGH constants, which depend on those values */\n        state.lenbits = 9;\n\n        opts = { bits: state.lenbits };\n        ret = inftrees(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.lenbits = opts.bits;\n        // state.lencode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid literal/lengths set';\n          state.mode = BAD;\n          break;\n        }\n\n        state.distbits = 6;\n        //state.distcode.copy(state.codes);\n        // Switch to use dynamic table\n        state.distcode = state.distdyn;\n        opts = { bits: state.distbits };\n        ret = inftrees(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.distbits = opts.bits;\n        // state.distcode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid distances set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, 'inflate:       codes ok\\n'));\n        state.mode = LEN_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case LEN_:\n        state.mode = LEN;\n        /* falls through */\n      case LEN:\n        if (have >= 6 && left >= 258) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          inffast(strm, _out);\n          //--- LOAD() ---\n          put = strm.next_out;\n          output = strm.output;\n          left = strm.avail_out;\n          next = strm.next_in;\n          input = strm.input;\n          have = strm.avail_in;\n          hold = state.hold;\n          bits = state.bits;\n          //---\n\n          if (state.mode === TYPE) {\n            state.back = -1;\n          }\n          break;\n        }\n        state.back = 0;\n        for (;;) {\n          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if (here_bits <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if (here_op && (here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.lencode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        state.length = here_val;\n        if (here_op === 0) {\n          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n          //        \"inflate:         literal '%c'\\n\" :\n          //        \"inflate:         literal 0x%02x\\n\", here.val));\n          state.mode = LIT;\n          break;\n        }\n        if (here_op & 32) {\n          //Tracevv((stderr, \"inflate:         end of block\\n\"));\n          state.back = -1;\n          state.mode = TYPE;\n          break;\n        }\n        if (here_op & 64) {\n          strm.msg = 'invalid literal/length code';\n          state.mode = BAD;\n          break;\n        }\n        state.extra = here_op & 15;\n        state.mode = LENEXT;\n        /* falls through */\n      case LENEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n        state.was = state.length;\n        state.mode = DIST;\n        /* falls through */\n      case DIST:\n        for (;;) {\n          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if ((here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.distcode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        if (here_op & 64) {\n          strm.msg = 'invalid distance code';\n          state.mode = BAD;\n          break;\n        }\n        state.offset = here_val;\n        state.extra = (here_op) & 15;\n        state.mode = DISTEXT;\n        /* falls through */\n      case DISTEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n//#ifdef INFLATE_STRICT\n        if (state.offset > state.dmax) {\n          strm.msg = 'invalid distance too far back';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n        state.mode = MATCH;\n        /* falls through */\n      case MATCH:\n        if (left === 0) { break inf_leave; }\n        copy = _out - left;\n        if (state.offset > copy) {         /* copy from window */\n          copy = state.offset - copy;\n          if (copy > state.whave) {\n            if (state.sane) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break;\n            }\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr, \"inflate.c too far\\n\"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n          }\n          if (copy > state.wnext) {\n            copy -= state.wnext;\n            from = state.wsize - copy;\n          }\n          else {\n            from = state.wnext - copy;\n          }\n          if (copy > state.length) { copy = state.length; }\n          from_source = state.window;\n        }\n        else {                              /* copy from output */\n          from_source = output;\n          from = put - state.offset;\n          copy = state.length;\n        }\n        if (copy > left) { copy = left; }\n        left -= copy;\n        state.length -= copy;\n        do {\n          output[put++] = from_source[from++];\n        } while (--copy);\n        if (state.length === 0) { state.mode = LEN; }\n        break;\n      case LIT:\n        if (left === 0) { break inf_leave; }\n        output[put++] = state.length;\n        left--;\n        state.mode = LEN;\n        break;\n      case CHECK:\n        if (state.wrap) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            // Use '|' instead of '+' to make sure that result is signed\n            hold |= input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          _out -= left;\n          strm.total_out += _out;\n          state.total += _out;\n          if ((state.wrap & 4) && _out) {\n            strm.adler = state.check =\n                /*UPDATE_CHECK(state.check, put - _out, _out);*/\n                (state.flags ? crc32_1(state.check, output, _out, put - _out) : adler32_1(state.check, output, _out, put - _out));\n\n          }\n          _out = left;\n          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\n          if ((state.wrap & 4) && (state.flags ? hold : zswap32(hold)) !== state.check) {\n            strm.msg = 'incorrect data check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n        }\n        state.mode = LENGTH;\n        /* falls through */\n      case LENGTH:\n        if (state.wrap && state.flags) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if ((state.wrap & 4) && hold !== (state.total & 0xffffffff)) {\n            strm.msg = 'incorrect length check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n        }\n        state.mode = DONE;\n        /* falls through */\n      case DONE:\n        ret = Z_STREAM_END$1;\n        break inf_leave;\n      case BAD:\n        ret = Z_DATA_ERROR$1;\n        break inf_leave;\n      case MEM:\n        return Z_MEM_ERROR$1;\n      case SYNC:\n        /* falls through */\n      default:\n        return Z_STREAM_ERROR$1;\n    }\n  }\n\n  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n  /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n  //--- RESTORE() ---\n  strm.next_out = put;\n  strm.avail_out = left;\n  strm.next_in = next;\n  strm.avail_in = have;\n  state.hold = hold;\n  state.bits = bits;\n  //---\n\n  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&\n                      (state.mode < CHECK || flush !== Z_FINISH$1))) {\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) ;\n  }\n  _in -= strm.avail_in;\n  _out -= strm.avail_out;\n  strm.total_in += _in;\n  strm.total_out += _out;\n  state.total += _out;\n  if ((state.wrap & 4) && _out) {\n    strm.adler = state.check = /*UPDATE_CHECK(state.check, strm.next_out - _out, _out);*/\n      (state.flags ? crc32_1(state.check, output, _out, strm.next_out - _out) : adler32_1(state.check, output, _out, strm.next_out - _out));\n  }\n  strm.data_type = state.bits + (state.last ? 64 : 0) +\n                    (state.mode === TYPE ? 128 : 0) +\n                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n  if (((_in === 0 && _out === 0) || flush === Z_FINISH$1) && ret === Z_OK$1) {\n    ret = Z_BUF_ERROR;\n  }\n  return ret;\n};\n\n\nconst inflateEnd = (strm) => {\n\n  if (inflateStateCheck(strm)) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  let state = strm.state;\n  if (state.window) {\n    state.window = null;\n  }\n  strm.state = null;\n  return Z_OK$1;\n};\n\n\nconst inflateGetHeader = (strm, head) => {\n\n  /* check state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR$1; }\n\n  /* save header structure */\n  state.head = head;\n  head.done = false;\n  return Z_OK$1;\n};\n\n\nconst inflateSetDictionary = (strm, dictionary) => {\n  const dictLength = dictionary.length;\n\n  let state;\n  let dictid;\n  let ret;\n\n  /* check state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  state = strm.state;\n\n  if (state.wrap !== 0 && state.mode !== DICT) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  /* check for correct dictionary identifier */\n  if (state.mode === DICT) {\n    dictid = 1; /* adler32(0, null, 0)*/\n    /* dictid = adler32(dictid, dictionary, dictLength); */\n    dictid = adler32_1(dictid, dictionary, dictLength, 0);\n    if (dictid !== state.check) {\n      return Z_DATA_ERROR$1;\n    }\n  }\n  /* copy dictionary to window using updatewindow(), which will amend the\n   existing dictionary if appropriate */\n  ret = updatewindow(strm, dictionary, dictLength, dictLength);\n  if (ret) {\n    state.mode = MEM;\n    return Z_MEM_ERROR$1;\n  }\n  state.havedict = 1;\n  // Tracev((stderr, \"inflate:   dictionary set\\n\"));\n  return Z_OK$1;\n};\n\n\nvar inflateReset_1 = inflateReset;\nvar inflateReset2_1 = inflateReset2;\nvar inflateResetKeep_1 = inflateResetKeep;\nvar inflateInit_1 = inflateInit;\nvar inflateInit2_1 = inflateInit2;\nvar inflate_2$1 = inflate$2;\nvar inflateEnd_1 = inflateEnd;\nvar inflateGetHeader_1 = inflateGetHeader;\nvar inflateSetDictionary_1 = inflateSetDictionary;\nvar inflateInfo = 'pako inflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.inflateCodesUsed = inflateCodesUsed;\nmodule.exports.inflateCopy = inflateCopy;\nmodule.exports.inflateGetDictionary = inflateGetDictionary;\nmodule.exports.inflateMark = inflateMark;\nmodule.exports.inflatePrime = inflatePrime;\nmodule.exports.inflateSync = inflateSync;\nmodule.exports.inflateSyncPoint = inflateSyncPoint;\nmodule.exports.inflateUndermine = inflateUndermine;\nmodule.exports.inflateValidate = inflateValidate;\n*/\n\nvar inflate_1$2 = {\n\tinflateReset: inflateReset_1,\n\tinflateReset2: inflateReset2_1,\n\tinflateResetKeep: inflateResetKeep_1,\n\tinflateInit: inflateInit_1,\n\tinflateInit2: inflateInit2_1,\n\tinflate: inflate_2$1,\n\tinflateEnd: inflateEnd_1,\n\tinflateGetHeader: inflateGetHeader_1,\n\tinflateSetDictionary: inflateSetDictionary_1,\n\tinflateInfo: inflateInfo\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction GZheader() {\n  /* true if compressed data believed to be text */\n  this.text       = 0;\n  /* modification time */\n  this.time       = 0;\n  /* extra flags (not used when writing a gzip file) */\n  this.xflags     = 0;\n  /* operating system */\n  this.os         = 0;\n  /* pointer to extra field or Z_NULL if none */\n  this.extra      = null;\n  /* extra field length (valid if extra != Z_NULL) */\n  this.extra_len  = 0; // Actually, we don't need it in JS,\n                       // but leave for few code modifications\n\n  //\n  // Setup limits is not necessary because in js we should not preallocate memory\n  // for inflate use constant limit in 65536 bytes\n  //\n\n  /* space at extra (only when reading header) */\n  // this.extra_max  = 0;\n  /* pointer to zero-terminated file name or Z_NULL */\n  this.name       = '';\n  /* space at name (only when reading header) */\n  // this.name_max   = 0;\n  /* pointer to zero-terminated comment or Z_NULL */\n  this.comment    = '';\n  /* space at comment (only when reading header) */\n  // this.comm_max   = 0;\n  /* true if there was or will be a header crc */\n  this.hcrc       = 0;\n  /* true when done reading gzip header (not used when writing a gzip file) */\n  this.done       = false;\n}\n\nvar gzheader = GZheader;\n\nconst toString = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH, Z_FINISH,\n  Z_OK, Z_STREAM_END, Z_NEED_DICT, Z_STREAM_ERROR, Z_DATA_ERROR, Z_MEM_ERROR\n} = constants$2;\n\n/* ===========================================================================*/\n\n\n/**\n * class Inflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[inflate]]\n * and [[inflateRaw]].\n **/\n\n/* internal\n * inflate.chunks -> Array\n *\n * Chunks of output data, if [[Inflate#onData]] not overridden.\n **/\n\n/**\n * Inflate.result -> Uint8Array|String\n *\n * Uncompressed result, generated by default [[Inflate#onData]]\n * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Inflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Inflate.err -> Number\n *\n * Error code after inflate finished. 0 (Z_OK) on success.\n * Should be checked if broken data possible.\n **/\n\n/**\n * Inflate.msg -> String\n *\n * Error message, if [[Inflate.err]] != 0\n **/\n\n\n/**\n * new Inflate(options)\n * - options (Object): zlib inflate options.\n *\n * Creates new inflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `windowBits`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw inflate\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n * By default, when no options set, autodetect deflate/gzip data format via\n * wrapper header.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n * const chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const inflate = new pako.Inflate({ level: 3});\n *\n * inflate.push(chunk1, false);\n * inflate.push(chunk2, true);  // true -> last chunk\n *\n * if (inflate.err) { throw new Error(inflate.err); }\n *\n * console.log(inflate.result);\n * ```\n **/\nfunction Inflate$1(options) {\n  this.options = common.assign({\n    chunkSize: 1024 * 64,\n    windowBits: 15,\n    to: ''\n  }, options || {});\n\n  const opt = this.options;\n\n  // Force window size for `raw` data, if not set directly,\n  // because we have no header for autodetect.\n  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {\n    opt.windowBits = -opt.windowBits;\n    if (opt.windowBits === 0) { opt.windowBits = -15; }\n  }\n\n  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\n  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&\n      !(options && options.windowBits)) {\n    opt.windowBits += 32;\n  }\n\n  // Gzip header has no info about windows size, we can do autodetect only\n  // for deflate. So, if window size not set, force it to max when gzip possible\n  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {\n    // bit 3 (16) -> gzipped data\n    // bit 4 (32) -> autodetect gzip/deflate\n    if ((opt.windowBits & 15) === 0) {\n      opt.windowBits |= 15;\n    }\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm   = new zstream();\n  this.strm.avail_out = 0;\n\n  let status  = inflate_1$2.inflateInit2(\n    this.strm,\n    opt.windowBits\n  );\n\n  if (status !== Z_OK) {\n    throw new Error(messages[status]);\n  }\n\n  this.header = new gzheader();\n\n  inflate_1$2.inflateGetHeader(this.strm, this.header);\n\n  // Setup dictionary\n  if (opt.dictionary) {\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      opt.dictionary = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      opt.dictionary = new Uint8Array(opt.dictionary);\n    }\n    if (opt.raw) { //In raw mode we need to set the dictionary early\n      status = inflate_1$2.inflateSetDictionary(this.strm, opt.dictionary);\n      if (status !== Z_OK) {\n        throw new Error(messages[status]);\n      }\n    }\n  }\n}\n\n/**\n * Inflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer): input data\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE\n *   flush modes. See constants. Skipped or `false` means Z_NO_FLUSH,\n *   `true` means Z_FINISH.\n *\n * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with\n * new output chunks. Returns `true` on success. If end of stream detected,\n * [[Inflate#onEnd]] will be called.\n *\n * `flush_mode` is not needed for normal operation, because end of stream\n * detected automatically. You may try to use it for advanced things, but\n * this functionality was not tested.\n *\n * On fail call [[Inflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nInflate$1.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  const dictionary = this.options.dictionary;\n  let status, _flush_mode, last_avail_out;\n\n  if (this.ended) return false;\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH : Z_NO_FLUSH;\n\n  // Convert data if needed\n  if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    status = inflate_1$2.inflate(strm, _flush_mode);\n\n    if (status === Z_NEED_DICT && dictionary) {\n      status = inflate_1$2.inflateSetDictionary(strm, dictionary);\n\n      if (status === Z_OK) {\n        status = inflate_1$2.inflate(strm, _flush_mode);\n      } else if (status === Z_DATA_ERROR) {\n        // Replace code with more verbose\n        status = Z_NEED_DICT;\n      }\n    }\n\n    // Skip snyc markers if more data follows and not raw mode\n    while (strm.avail_in > 0 &&\n           status === Z_STREAM_END &&\n           strm.state.wrap > 0 &&\n           data[strm.next_in] !== 0)\n    {\n      inflate_1$2.inflateReset(strm);\n      status = inflate_1$2.inflate(strm, _flush_mode);\n    }\n\n    switch (status) {\n      case Z_STREAM_ERROR:\n      case Z_DATA_ERROR:\n      case Z_NEED_DICT:\n      case Z_MEM_ERROR:\n        this.onEnd(status);\n        this.ended = true;\n        return false;\n    }\n\n    // Remember real `avail_out` value, because we may patch out buffer content\n    // to align utf8 strings boundaries.\n    last_avail_out = strm.avail_out;\n\n    if (strm.next_out) {\n      if (strm.avail_out === 0 || status === Z_STREAM_END) {\n\n        if (this.options.to === 'string') {\n\n          let next_out_utf8 = strings.utf8border(strm.output, strm.next_out);\n\n          let tail = strm.next_out - next_out_utf8;\n          let utf8str = strings.buf2string(strm.output, next_out_utf8);\n\n          // move tail & realign counters\n          strm.next_out = tail;\n          strm.avail_out = chunkSize - tail;\n          if (tail) strm.output.set(strm.output.subarray(next_out_utf8, next_out_utf8 + tail), 0);\n\n          this.onData(utf8str);\n\n        } else {\n          this.onData(strm.output.length === strm.next_out ? strm.output : strm.output.subarray(0, strm.next_out));\n        }\n      }\n    }\n\n    // Must repeat iteration if out buffer is full\n    if (status === Z_OK && last_avail_out === 0) continue;\n\n    // Finalize if end of stream reached.\n    if (status === Z_STREAM_END) {\n      status = inflate_1$2.inflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return true;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Inflate#onData(chunk) -> Void\n * - chunk (Uint8Array|String): output data. When string output requested,\n *   each chunk will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nInflate$1.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Inflate#onEnd(status) -> Void\n * - status (Number): inflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called either after you tell inflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nInflate$1.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK) {\n    if (this.options.to === 'string') {\n      this.result = this.chunks.join('');\n    } else {\n      this.result = common.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * inflate(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Decompress `data` with inflate/ungzip and `options`. Autodetect\n * format via wrapper header by default. That's why we don't provide\n * separate `ungzip` method.\n *\n * Supported options are:\n *\n * - windowBits\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako');\n * const input = pako.deflate(new Uint8Array([1,2,3,4,5,6,7,8,9]));\n * let output;\n *\n * try {\n *   output = pako.inflate(input);\n * } catch (err) {\n *   console.log(err);\n * }\n * ```\n **/\nfunction inflate$1(input, options) {\n  const inflator = new Inflate$1(options);\n\n  inflator.push(input);\n\n  // That will never happens, if you don't cheat with options :)\n  if (inflator.err) throw inflator.msg || messages[inflator.err];\n\n  return inflator.result;\n}\n\n\n/**\n * inflateRaw(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * The same as [[inflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction inflateRaw$1(input, options) {\n  options = options || {};\n  options.raw = true;\n  return inflate$1(input, options);\n}\n\n\n/**\n * ungzip(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Just shortcut to [[inflate]], because it autodetects format\n * by header.content. Done for convenience.\n **/\n\n\nvar Inflate_1$1 = Inflate$1;\nvar inflate_2 = inflate$1;\nvar inflateRaw_1$1 = inflateRaw$1;\nvar ungzip$1 = inflate$1;\nvar constants = constants$2;\n\nvar inflate_1$1 = {\n\tInflate: Inflate_1$1,\n\tinflate: inflate_2,\n\tinflateRaw: inflateRaw_1$1,\n\tungzip: ungzip$1,\n\tconstants: constants\n};\n\nconst { Deflate, deflate, deflateRaw, gzip } = deflate_1$1;\n\nconst { Inflate, inflate, inflateRaw, ungzip } = inflate_1$1;\n\n\n\nvar Deflate_1 = Deflate;\nvar deflate_1 = deflate;\nvar deflateRaw_1 = deflateRaw;\nvar gzip_1 = gzip;\nvar Inflate_1 = Inflate;\nvar inflate_1 = inflate;\nvar inflateRaw_1 = inflateRaw;\nvar ungzip_1 = ungzip;\nvar constants_1 = constants$2;\n\nvar pako = {\n\tDeflate: Deflate_1,\n\tdeflate: deflate_1,\n\tdeflateRaw: deflateRaw_1,\n\tgzip: gzip_1,\n\tInflate: Inflate_1,\n\tinflate: inflate_1,\n\tinflateRaw: inflateRaw_1,\n\tungzip: ungzip_1,\n\tconstants: constants_1\n};\n\nexport { Deflate_1 as Deflate, Inflate_1 as Inflate, constants_1 as constants, pako as default, deflate_1 as deflate, deflateRaw_1 as deflateRaw, gzip_1 as gzip, inflate_1 as inflate, inflateRaw_1 as inflateRaw, ungzip_1 as ungzip };\n","export const CHUNK_LENGTH = 1024;\nexport const PACKET_TIMEOUT = 10000;\nexport const MAX_LATENCY = 2000;\nexport const LOOP_INTERVAL = 1;\nexport const TURN_KIND = 29999;\n\nexport type NostrTURNSettings = {\n    chunkLength: number;\n    packetTimeout: number;\n    maxLatency: number;\n    loopInterval: number;\n    kind: number;\n};\n\nexport default {\n    chunkLength: CHUNK_LENGTH,\n    packetTimeout: PACKET_TIMEOUT,\n    maxLatency: MAX_LATENCY,\n    loopInterval: LOOP_INTERVAL,\n    kind: TURN_KIND,\n} as NostrTURNSettings;\n","import { base64 } from \"@scure/base\";\nimport pako from \"pako\";\nimport { NostrKeyPair, NostrAdapter } from \"./NostrAdapter\";\nimport { SignedNostrEvent, NostrSubscription } from \"./NostrAdapter\";\nimport { PeerInfo } from \"./NostrRTC\";\nimport { EventEmitter } from \"tseep\";\nimport { getLogger } from \"./logger\";\nimport DefaultTURNSettings, { NostrTURNSettings } from \"./NostrTURNSettings\";\n\nconst LOGGER = getLogger(\"nostrtc:NostrTURN\");\n\ntype Chunk = {\n    data: Uint8Array;\n    ack: boolean;\n    sent: boolean;\n    lastAttempt: number;\n};\n\ntype Packet = {\n    id: number;\n    chunks: Chunk[];\n    sent: number;\n    ack: number;\n    timestamp: number;\n};\n\nexport class NostrTURN extends EventEmitter<{\n    data: (peer: PeerInfo, data: Uint8Array) => void;\n    close: (peer: PeerInfo, str?: string) => void;\n    error: (peer: PeerInfo, error: Error) => void;\n}> {\n    private readonly localPeer: NostrKeyPair;\n    private readonly remotePeer: PeerInfo;\n    private readonly connectionId: string;\n    private readonly turn: Promise<NostrSubscription>;\n    private readonly nostr: NostrAdapter;\n    private readonly config: NostrTURNSettings;\n\n    private packetCounter: number = 0;\n    private outQueue: { [key: number]: Packet } = {};\n    private inPacket: Packet | undefined;\n    private loopTimeout?: any;\n    private outQueueNotify: any = () => {};\n    private stopped: boolean = false;\n\n    constructor(nostr: NostrAdapter, connectionId: string, localKeyPair: NostrKeyPair, remotePeer: PeerInfo, config: NostrTURNSettings = DefaultTURNSettings) {\n        super();\n        this.config = config;\n        this.nostr = nostr;\n        this.connectionId = connectionId;\n        this.localPeer = localKeyPair;\n        this.remotePeer = remotePeer;\n        this.turn = nostr.subscribeToRelays(\n            this.remotePeer.turnRelays!,\n            [\n                {\n                    authors: [this.remotePeer.pubkey],\n                    kinds: [this.config.kind],\n                    \"#d\": [\"turn-\" + this.connectionId],\n                },\n            ],\n            async (sub, event: SignedNostrEvent) => {\n                let content: any = event.content;\n                content = await this.nostr.decrypt(this.remotePeer.pubkey, content, this.localPeer);\n                content = JSON.parse(content);\n                if (content.packet) {\n                    await this.onReceivedPacket(content.packet);\n                } else if (content.ack) {\n                    await this.onReceivedAck(content.ack);\n                }\n                // const data = pako.inflate(base64.decode(content.data));\n                // this.emit(\"data\", remotePeer, data);\n            },\n            undefined,\n            undefined,\n        );\n\n        this.loop().catch((e) => {\n            LOGGER.error(\"Error in turn loop\", e);\n        });\n    }\n\n    public async close(msg?: Error | string): Promise<void> {\n        this.stopped = true;\n        this.outQueueNotify();\n        if (this.loopTimeout) clearTimeout(this.loopTimeout);\n        const turn = await this.turn;\n        await turn.close();\n        if (msg instanceof Error) {\n            this.emit(\"error\", this.remotePeer, msg);\n        }\n        this.emit(\"close\", this.remotePeer, String(msg));\n    }\n\n    public async write(data: Uint8Array): Promise<void> {\n        await this.turn;\n        const b64data = base64.encode(pako.deflate(data));\n        const packetId = this.packetCounter++;\n        const chunkLen = this.config.chunkLength;\n        const chunkCount = Math.ceil(b64data.length / chunkLen);\n        LOGGER.trace(\"Splitting packet\", packetId, \"in\", chunkCount, \"chunks\");\n\n        const packet = {\n            id: packetId,\n            chunks: new Array(chunkCount).fill(undefined),\n            sent: 0,\n            ack: 0,\n            timestamp: Date.now(),\n        };\n\n        for (let i = 0; i < chunkCount; i++) {\n            const chunk = b64data.slice(i * chunkLen, (i + 1) * chunkLen);\n            packet.chunks[i] = {\n                data: chunk,\n                ack: false,\n                lastAttempt: 0,\n                sent: false,\n            };\n        }\n\n        this.outQueue[packetId] = packet;\n\n        // move stream forward\n        this.consume();\n\n        this.outQueueNotify();\n    }\n\n    private async onReceivedAck(content: { packetId: number; chunkId: number }) {\n        const packet = this.outQueue[content.packetId];\n        const chunk = packet.chunks[content.chunkId];\n        if (!chunk) await this.close(new Error(\"invalid chunk\"));\n        if (!chunk.ack) {\n            chunk.ack = true;\n            packet.ack++;\n        }\n\n        // move stream forward\n        this.consume();\n    }\n\n    private async onReceivedPacket(content: { [key: string]: any }) {\n        const { packetId, chunkId, nChunks, data } = content;\n\n        // make sure its data for this packet\n        if (!this.inPacket) {\n            this.inPacket = {\n                id: packetId,\n                chunks: new Array(nChunks).fill(undefined),\n                sent: 0,\n                ack: 0,\n                timestamp: Date.now(),\n            };\n        } else if (this.inPacket.id === packetId) {\n            if (this.inPacket.chunks.length != nChunks) {\n                this.emit(\"error\", this.remotePeer, new Error(\"Invalid number of chunks\"));\n                return;\n            }\n        } else {\n            this.emit(\"error\", this.remotePeer, new Error(\"Invalid packet id\"));\n            return;\n        }\n\n        const packet = this.inPacket;\n        if (packet.chunks[chunkId]) {\n            this.emit(\"error\", this.remotePeer, new Error(\"chunk already received\"));\n            return;\n        }\n\n        // append chunk\n        packet.chunks[chunkId] = {\n            data,\n            ack: true,\n            sent: true,\n            lastAttempt: 0,\n        };\n\n        // record ack\n        packet.ack++;\n        packet.sent = nChunks;\n\n        // move stream forward\n        this.consume();\n\n        // send ack\n        let ack = JSON.stringify({\n            ack: {\n                packetId,\n                chunkId,\n            },\n        });\n        ack = await this.nostr.encrypt(this.remotePeer.pubkey, ack, this.localPeer);\n        await this.nostr.publishToRelays(\n            this.remotePeer.turnRelays!,\n            {\n                content: ack,\n                tags: [\n                    [\"d\", \"turn-\" + this.connectionId],\n                    [\"expiration\", String(Math.floor((Date.now() + this.config.packetTimeout) / 1000))], // 2 minutes\n                ],\n                kind: this.config.kind,\n            },\n            this.localPeer,\n        );\n    }\n\n    private consume() {\n        const packet = this.inPacket;\n        // if we have a full packet, emit data and delete it\n        if (packet) {\n            if (packet.sent === packet.ack) {\n                const data = packet.chunks.map((c) => c.data).join(\"\");\n                const decoded = pako.inflate(base64.decode(data));\n                LOGGER.trace(\"Reassembling packet\", packet.id, \"from\", packet.chunks.length, \"chunks\");\n                this.emit(\"data\", this.remotePeer, decoded);\n                this.inPacket = undefined;\n            } else if (Date.now() - packet.timestamp > this.config.packetTimeout) {\n                this.close(new Error(\"Timeout\")).catch((e) => LOGGER.error(\"Error closing\", e));\n            }\n        }\n\n        // if output packet is fully acked, move forward\n        for (const packetId in this.outQueue) {\n            const packet = this.outQueue[packetId];\n            if (packet.sent && packet.sent === packet.ack) {\n                LOGGER.trace(\"Packet\", packet.id, \"fully acked\", packet.ack, \"/\", packet.sent);\n                delete this.outQueue[packetId];\n            } else if (Date.now() - packet.timestamp > this.config.packetTimeout) {\n                this.close(new Error(\"Timeout\")).catch((e) => LOGGER.error(\"Error closing\", e));\n            }\n        }\n    }\n\n    private async loop() {\n        try {\n            const packets = Object.values(this.outQueue);\n            if (packets.length === 0) {\n                await new Promise((resolve) => {\n                    this.outQueueNotify = resolve;\n                });\n            }\n            if (this.stopped) return;\n            // handle one packet at a time sequentially\n            const nextPacket = packets.length > 0 ? packets[0] : undefined;\n            if (nextPacket) {\n                for (let i = 0; i < nextPacket.chunks.length; i++) {\n                    const chunk = nextPacket.chunks[i];\n                    const lastAttempt = chunk.lastAttempt;\n\n                    // skip chunk if not acked but still likely to be in transit\n                    if (Date.now() - lastAttempt < (this.config.maxLatency ?? 1000)) {\n                        continue;\n                    }\n\n                    // skip chunk if acked\n                    if (chunk.ack) {\n                        continue;\n                    }\n\n                    // update last attemp timestamp\n                    chunk.lastAttempt = Date.now();\n\n                    // encode and send chunk\n                    let content = JSON.stringify({\n                        packet: {\n                            packetId: nextPacket.id,\n                            chunkId: i,\n                            nChunks: nextPacket.chunks.length,\n                            data: chunk.data,\n                        },\n                    });\n                    content = await this.nostr.encrypt(this.remotePeer.pubkey, content, this.localPeer);\n\n                    // first attempt, we mark it as sent\n                    if (!chunk.sent) {\n                        chunk.sent = true;\n                        nextPacket.sent++;\n                    }\n\n                    LOGGER.trace(\"Sending chunk\", nextPacket.id, i);\n                    // send\n                    await this.nostr.publishToRelays(\n                        this.remotePeer.turnRelays!,\n                        {\n                            content,\n                            tags: [\n                                [\"d\", \"turn-\" + this.connectionId],\n                                [\"expiration\", String(Math.floor((Date.now() + this.config.packetTimeout) / 1000))], // 2 minutes\n                            ],\n                            kind: this.config.kind,\n                        },\n                        this.localPeer,\n                    );\n                }\n            }\n        } catch (e) {\n            LOGGER.error(\"Error in turn loop\", e);\n        }\n        if (this.stopped) return;\n        this.loopTimeout = setTimeout(() => {\n            this.loop().catch((e) => {\n                LOGGER.error(\"Error in turn loop\", e);\n            });\n        }, this.config.loopInterval);\n    }\n}\n","import { NostrAdapter, NostrKeyPair, NostrSubscription, SignedNostrEvent } from \"./NostrAdapter\";\nimport { EventEmitter } from \"tseep\";\nimport { getLogger } from \"./logger\";\nimport { NostrRTCPeer, ConnectionStatus } from \"./NostrRTCPeer\";\nimport { NostrTURN } from \"./NostrTURN\";\nimport DefaultSettings, { NostrRTCSettings, PUBLIC_STUN_SERVERS } from \"./NostrRTCSettings\";\nimport DefaultTURNSettings, { NostrTURNSettings } from \"./NostrTURNSettings\";\n\nconst LOGGER = getLogger(\"nostrtc:NostrRTC\");\n\nexport enum SubChannelPrefixes {\n    announce = \"1\",\n    offer = \"3\",\n    answer = \"4\",\n    iceCandidate = \"5\",\n    disconnect = \"7\",\n    ack = \"8\",\n    err = \"9\",\n    connect = \"10\",\n}\n\nexport class PeerInfo {\n    public readonly pubkey: string;\n    public readonly metadata: { [key: string]: string } = {};\n    public readonly turnRelays?: string[];\n    public _lastSeen: number;\n\n    constructor(pubkey: string, metadata: { [key: string]: string } | undefined, turnRelays: string[] | undefined, lastSeen: number) {\n        this.pubkey = pubkey;\n        if (metadata) Object.assign(this.metadata, metadata);\n        this.turnRelays = turnRelays;\n        this._lastSeen = lastSeen;\n    }\n\n    set lastSeen(lastSeen: number) {\n        this._lastSeen = lastSeen;\n    }\n\n    get lastSeen(): number {\n        return this._lastSeen;\n    }\n}\n\nexport type NostrRTCOptions = {\n    stunServers?: string[];\n    turnRelays?: string[];\n    localKey?: string | NostrKeyPair;\n    rtcSettings: NostrRTCSettings;\n    turnSettings: NostrTURNSettings;\n    useRelaysTurn: boolean;\n    useRelaysStun: boolean;\n};\n\nexport class NostrRTC extends EventEmitter<{\n    discover: (peer: PeerInfo) => void;\n    close: (peer: PeerInfo, msg?: string | Error) => void;\n    refresh: (peer: PeerInfo) => void;\n    announce: (peer: PeerInfo) => void;\n    cleanup: (peer: PeerInfo) => void;\n    candidates: (peer: PeerInfo, candidates: any) => void;\n    data: (peer: PeerInfo, data: Uint8Array) => void;\n\n    connecting: (peer: PeerInfo) => void;\n    connected: (peer: PeerInfo) => void;\n    error: (peer: PeerInfo, error: Error) => void;\n}> {\n    private readonly discoveredPeers: Array<PeerInfo> = new Array<PeerInfo>();\n    private readonly connections: Map<string, NostrRTCPeer> = new Map<string, NostrRTCPeer>();\n    private readonly banlist: string[] = [];\n    private readonly channelKeyPair: NostrKeyPair;\n    private readonly localKeyPair: NostrKeyPair;\n    private readonly nostr: NostrAdapter;\n    private readonly metadata: { [key: string]: string };\n    private readonly config: NostrRTCOptions;\n\n    private readonly turnRelays: string[];\n    private readonly signalingRelays: string[];\n    private readonly stunServers: string[];\n\n    private sub?: NostrSubscription;\n    private stopped: boolean = false;\n    private announceTimeout?: any;\n    private gcTimeout?: any;\n    private autoconnectTimeout?: any;\n\n    constructor(\n        nostr: NostrAdapter,\n        signalingRelays: string[],\n        channelKey: string | NostrKeyPair,\n        metadata: { [key: string]: string } = {},\n        opts: NostrRTCOptions = {\n            rtcSettings: DefaultSettings,\n            turnSettings: DefaultTURNSettings,\n            useRelaysTurn: true,\n            useRelaysStun: true,\n        },\n    ) {\n        super();\n        this.nostr = nostr;\n        this.channelKeyPair = typeof channelKey === \"string\" ? nostr.newKeyPair(channelKey) : channelKey;\n        this.localKeyPair = typeof opts.localKey === \"string\" || !opts.localKey ? nostr.newKeyPair(opts.localKey) : opts.localKey;\n        this.metadata = metadata;\n        this.config = opts;\n\n        this.signalingRelays = [...(signalingRelays ?? [])];\n        this.turnRelays = [...(opts.turnRelays ?? [])];\n        this.stunServers = [...(opts.stunServers ?? [])];\n    }\n\n    public setMetadata(metadata: { [key: string]: string }) {\n        Object.keys(this.metadata).forEach((key) => delete this.metadata[key]);\n        Object.assign(this.metadata, metadata);\n    }\n\n    public getMetadata(): { [key: string]: string } {\n        return this.metadata;\n    }\n\n    public getTurnRelays(): string[] {\n        return this.turnRelays;\n    }\n\n    public getStunServers(): string[] {\n        return this.stunServers;\n    }\n\n    public getSignalingRelays(): string[] {\n        return this.signalingRelays;\n    }\n\n    public getChannelKeyPair(): NostrKeyPair {\n        return this.channelKeyPair;\n    }\n\n    public getLocalKeyPair(): NostrKeyPair {\n        return this.localKeyPair;\n    }\n\n    public getNostrAdapter(): NostrAdapter {\n        return this.nostr;\n    }\n\n    public async start() {\n        this.sub = await this.subscribeToSignal(async (sub, payload, peerPubkey, timestamp) => {\n            if (payload.announce) {\n                await this.onPeerDiscovery(peerPubkey, timestamp, payload.announce).catch(console.error);\n            }\n            if (payload.connect) {\n                await this.onIncomingPeerConnection(peerPubkey, payload.connect).catch(console.error);\n            }\n            if (payload.connectAck) {\n                await this.onIncomingPeerAck(peerPubkey, payload.connectAck).catch(console.error);\n            }\n            if (payload.candidates) {\n                await this.onIceCandidates(peerPubkey, payload.candidates).catch(console.error);\n            }\n        });\n\n        // load more turn and stun servers from nip-11 info\n        for (const relay of this.signalingRelays) {\n            const info = await this.nostr.getInfo(relay);\n            if (this.config.useRelaysStun) {\n                if (info?.stun?.length) {\n                    this.stunServers.push(...info.stun);\n                }\n            }\n\n            if (this.config.useRelaysTurn) {\n                if (info?.turn?.length) {\n                    this.turnRelays.push(...info.turn);\n                }\n            }\n        }\n\n        LOGGER.info(\"Starting NostrRTC with\\n    signaling:\", this.signalingRelays, \"\\n    turn:\", this.turnRelays, \"\\n    stun:\", this.stunServers);\n\n        this.announceLoop().catch(console.error);\n        this.gcLoop().catch(console.error);\n        this.autoconnectLoop().catch(console.error);\n    }\n\n    private async autoconnectLoop() {\n        const p1: string = await this.localKeyPair.getPubKey();\n        for (const peer of this.discoveredPeers) {\n            const p2: string = peer.pubkey;\n            // the peer with the lowest pubkey will initiate the connection (string)\n            const autoconnect = p1.localeCompare(p2) < 0;\n            if (!autoconnect) continue;\n\n            const hasConnection = this.connections.has(peer.pubkey);\n            if (!hasConnection) {\n                try {\n                    this.connect(peer.pubkey).catch(console.error);\n                } catch (e) {\n                    LOGGER.debug(\"Failed to autoconnect\", e);\n                }\n            }\n        }\n        this.autoconnectTimeout = setTimeout(() => this.autoconnectLoop(), 1000);\n    }\n\n    private async gcLoop() {\n        if (this.stopped) return;\n        const now = Date.now();\n        const waitList = [];\n        for (let i = 0; i < this.discoveredPeers.length; i++) {\n            // remove expired peers\n            const peer = this.discoveredPeers[i];\n            if (now - peer.lastSeen > this.config.rtcSettings.peerExpiration) {\n                this.discoveredPeers.splice(i, 1);\n                i--;\n                this.emit(\"cleanup\", peer);\n                // if there is a connection active, disconnect with error.\n                const connection = this.connections.get(peer.pubkey);\n                if (connection) {\n                    waitList.push(connection.close(new Error(\"Peer expired\")).catch(console.error));\n                }\n            }\n        }\n        // wait for all connections to close\n        await Promise.allSettled(waitList);\n        // remove disconnected connections\n        const keys = Array.from(this.connections.keys());\n        for (const pubkey of keys) {\n            const connection = this.connections.get(pubkey);\n            if (connection && connection.getStatus() === ConnectionStatus.disconnected) {\n                this.connections.delete(pubkey);\n            }\n        }\n        this.gcTimeout = setTimeout(() => this.gcLoop(), this.config.rtcSettings.gcInterval);\n    }\n\n    private getAnnounce(): any {\n        return {\n            metadata: this.metadata,\n            turnRelays: this.turnRelays,\n        };\n    }\n\n    private async announceLoop() {\n        if (this.stopped) return;\n        try {\n            await this.signal({\n                announce: this.getAnnounce(),\n            });\n        } catch (e) {\n            console.error(\"Failed to announce\", e);\n        }\n        this.announceTimeout = setTimeout(() => this.announceLoop(), this.config.rtcSettings.announceInterval);\n    }\n\n    public async connect(pubkey: string): Promise<void> {\n        // unban peer if previously banned\n        this.unban(pubkey);\n\n        const discoveredPeer = this.discoveredPeers.find((peer) => peer.pubkey === pubkey);\n        if (!discoveredPeer) throw new Error(\"Peer not discovered yet\");\n\n        // initialize connection\n        let connection = this.connections.get(pubkey);\n        if (connection) throw new Error(\"Peer already connected or connecting\");\n        connection = new NostrRTCPeer(discoveredPeer, this.stunServers, undefined, this.config.rtcSettings);\n\n        if (discoveredPeer.turnRelays?.length) {\n            const turn = new NostrTURN(this.nostr, connection.getConnectionId(), this.localKeyPair, discoveredPeer, this.config.turnSettings);\n            turn.on(\"close\", (msg) => {\n                connection.close(new Error(\"Closed by TURN: \" + msg)).catch(console.error);\n            });\n            connection.setTURN(turn);\n        }\n\n        // registering hooks\n        connection.on(\"ready\", () => {\n            this.emit(\"connected\", discoveredPeer);\n        });\n\n        connection.on(\"close\", (conn, msg) => {\n            this.emit(\"close\", discoveredPeer, msg);\n        });\n\n        connection.on(\"error\", (conn, e) => {\n            this.emit(\"error\", discoveredPeer, e);\n        });\n\n        connection.on(\"candidates\", (conn, candidates: RTCIceCandidate[]) => {\n            this.signal(\n                {\n                    candidates: candidates.map((c) => c.toJSON()),\n                },\n                discoveredPeer.pubkey,\n            ).catch(console.error);\n        });\n\n        connection.on(\"data\", (conn, data) => {\n            this.emit(\"data\", discoveredPeer, data);\n        });\n\n        // register initializing connection\n        this.connections.set(pubkey, connection);\n\n        // signal connection request\n        const connectionId = connection.getConnectionId();\n        this.emit(\"connecting\", discoveredPeer);\n        const description = await connection.connect();\n        LOGGER.debug(\"Attempting to connect to\", pubkey + \"@\" + connectionId, \"and local description\", description);\n        await this.signal(\n            {\n                announce: this.getAnnounce(),\n                candidates: connection.getLocalIceCandidates().map((c) => c.toJSON()),\n                connect: {\n                    connectionId,\n                    description,\n                },\n            },\n            pubkey,\n        );\n    }\n\n    private async onIceCandidates(pubkey: string, candidates: any) {\n        const peer = this.discoveredPeers.find((peer) => peer.pubkey === pubkey);\n        if (!peer) return;\n        const connection = this.connections.get(pubkey);\n        if (!connection) return;\n        await connection.addRemoteIceCandidates(candidates.map((c: any) => new RTCIceCandidate(c)));\n        this.emit(\"candidates\", peer, candidates);\n    }\n\n    private async onPeerDiscovery(pubkey: string, timestamp: number, announce: any) {\n        const metadata: { [key: string]: string } | undefined = announce.metadata;\n        const turnRelays: string[] | undefined = announce.turnRelays;\n        if (Date.now() - timestamp > this.config.rtcSettings.peerExpiration) return;\n        if (this.banlist.includes(pubkey)) return;\n        let peer = this.discoveredPeers.find((peer) => peer.pubkey === pubkey);\n        if (!peer) {\n            const peer = new PeerInfo(pubkey, metadata, turnRelays, timestamp);\n            this.emit(\"discover\", peer);\n            this.discoveredPeers.push(peer);\n        } else {\n            Object.keys(peer.metadata).forEach((key) => delete peer.metadata[key]);\n            Object.assign(peer.metadata, metadata);\n            peer.lastSeen = timestamp;\n            this.emit(\"refresh\", peer);\n        }\n    }\n\n    private async onIncomingPeerAck(peerPubkey: string, payload: any) {\n        const connectionId = payload.connectionId;\n        const error = payload.error;\n        const remoteDescription = payload.description;\n        // check if peer is discovered\n        const remotePeer = this.discoveredPeers.find((peer) => peer.pubkey === peerPubkey);\n        if (!remotePeer) throw new Error(\"Peer not discovered yet\");\n        // check if connection already exists and is connecting\n        let connection = this.connections.get(peerPubkey);\n        if (!connection) throw new Error(\"Peer connection not found\");\n        if (connection.getStatus() !== ConnectionStatus.connecting) throw new Error(\"Peer not connecting\");\n        // check if connectionId is the same (prevent replay attacks)\n        if (connection.getConnectionId() !== connectionId) throw new Error(\"Invalid connectionId\");\n        LOGGER.debug(\"Incoming connection ack from\", peerPubkey + \"@\" + connectionId, \"with remote description\", remoteDescription);\n        // set remote description\n        try {\n            if (error) throw new Error(error);\n            await connection.setRemoteDescription(remoteDescription);\n            LOGGER.info(\"Connection established to\", peerPubkey + \"@\" + connectionId);\n        } catch (e: any) {\n            LOGGER.error(\"Failed to connect\", e);\n            connection.close(e).catch(console.error);\n        }\n        this.signal(\n            {\n                candidates: connection.getLocalIceCandidates().map((c) => c.toJSON()),\n            },\n            peerPubkey,\n        ).catch(console.error);\n    }\n\n    private async onIncomingPeerConnection(peerPubkey: string, payload: any) {\n        const connectionId = payload.connectionId;\n        const remoteDescription = payload.description;\n        LOGGER.debug(\"Incoming connection from\", peerPubkey + \"@\" + connectionId, \"with  remote description\", remoteDescription);\n        // check if peer is discovered\n        const remotePeer = this.discoveredPeers.find((peer) => peer.pubkey === peerPubkey);\n        if (!remotePeer) throw new Error(\"Peer not discovered yet\");\n        let connection: NostrRTCPeer | undefined;\n        try {\n            // initialize and register connection\n            connection = new NostrRTCPeer(remotePeer, this.stunServers, connectionId, this.config.rtcSettings);\n            // ({ connection, description } = await NostrRTCPeer.open(remotePeer, connectionId, remoteDescription));\n            if (remotePeer.turnRelays?.length) {\n                const turn = new NostrTURN(this.nostr, connection.getConnectionId(), this.localKeyPair, remotePeer, this.config.turnSettings);\n                turn.on(\"close\", (msg) => {\n                    if (connection) connection.close(new Error(\"Closed by TURN: \" + msg)).catch(console.error);\n                });\n                connection.setTURN(turn);\n            }\n\n            this.connections.set(peerPubkey, connection);\n            // register hooks\n            connection.on(\"ready\", () => {\n                connection?.setStatus(ConnectionStatus.connected);\n                this.emit(\"connected\", remotePeer);\n            });\n            connection.on(\"close\", (conn, msg) => {\n                this.emit(\"close\", remotePeer, msg);\n            });\n            connection.on(\"error\", (conn, e) => {\n                this.emit(\"error\", remotePeer, e);\n            });\n            connection.on(\"candidates\", (conn, candidates: RTCIceCandidate[]) => {\n                LOGGER.debug(\"Sending candidates to\", peerPubkey + \"@\" + connectionId, candidates);\n                const serialized = candidates.map((c) => c.toJSON());\n                this.signal({ candidates: serialized }, remotePeer.pubkey).catch(console.error);\n            });\n\n            connection.on(\"data\", (conn, data) => {\n                this.emit(\"data\", remotePeer, data);\n            });\n\n            const description = await connection.open(remoteDescription);\n\n            LOGGER.debug(\"Confirm connection to\", peerPubkey + \"@\" + connectionId, \"with local description\", description);\n            this.emit(\"connecting\", remotePeer);\n\n            // signal connection ack\n            await this.signal(\n                {\n                    // announce: this.getAnnounce(),\n                    candidates: connection.getLocalIceCandidates().map((c) => c.toJSON()),\n                    connectAck: {\n                        connectionId,\n                        description,\n                    },\n                },\n                peerPubkey,\n            );\n            LOGGER.info(\"Connection established to\", peerPubkey + \"@\" + connectionId);\n        } catch (e: any) {\n            console.error(\"Failed to connect\", e);\n            await this.signal(\n                {\n                    connectAck: {\n                        connectionId: connectionId,\n                        error: e?.message || \"Error\",\n                    },\n                },\n                peerPubkey,\n            );\n            connection?.close(e).catch(console.error);\n        }\n    }\n\n    public async stop() {\n        this.stopped = true;\n        if (this.sub) {\n            await this.sub.close();\n        }\n        if (this.announceTimeout) {\n            clearTimeout(this.announceTimeout);\n        }\n        if (this.gcTimeout) {\n            clearTimeout(this.gcTimeout);\n        }\n        if (this.autoconnectTimeout) {\n            clearTimeout(this.autoconnectTimeout);\n        }\n        for (const conn of this.connections.values()) {\n            try {\n                await conn.close(\"Stopped\");\n            } catch (e) {\n                console.error(\"Failed to close connection\", e);\n            }\n        }\n        this.connections.clear();\n        this.discoveredPeers.length = 0;\n        this.banlist.length = 0;\n    }\n\n    public unban(pubkey: string) {\n        const index = this.banlist.indexOf(pubkey);\n        if (index !== -1) {\n            this.banlist.splice(index, 1);\n        }\n    }\n\n    public ban(pubkey: string) {\n        if (!this.banlist.includes(pubkey)) {\n            this.banlist.push(pubkey);\n        }\n        let discoveredIndex = this.discoveredPeers.findIndex((peer) => peer.pubkey === pubkey);\n        if (discoveredIndex !== -1) {\n            this.discoveredPeers.splice(discoveredIndex, 1);\n        }\n    }\n\n    public async disconnect(pubkey: string) {\n        this.ban(pubkey);\n        const connection = this.connections.get(pubkey);\n        if (connection) {\n            await connection.close(\"Disconnected by user\");\n        }\n    }\n\n    public getConnection(pubkey: string): NostrRTCPeer | undefined {\n        return this.connections.get(pubkey);\n    }\n\n    public getPeerInfo(pubkey: string): PeerInfo | undefined {\n        return this.discoveredPeers.find((peer) => peer.pubkey === pubkey);\n    }\n\n    public listPeers(): string[] {\n        return this.discoveredPeers.map((peer) => peer.pubkey);\n    }\n\n    public async signal(payload: any, peerPubkey?: string) {\n        try {\n            const d = `${peerPubkey ?? \"@\"}@${await this.channelKeyPair.getPubKey()}`;\n            // LOGGER.trace(\"Sending from \", await this.localKeyPair.getPubKey(), \"to\", d, \"\\n\", payload);\n\n            const encryptedPayload = await this.nostr.encrypt(peerPubkey ?? (await this.channelKeyPair.getPubKey()), JSON.stringify(payload), this.localKeyPair);\n            await this.nostr.publishToRelays(\n                this.signalingRelays,\n                {\n                    kind: this.config.rtcSettings.kind,\n                    content: encryptedPayload,\n                    tags: [\n                        [\"d\", d],\n                        [\"expiration\", String(Math.floor((Date.now() + 21 * 60 * 1000) / 1000))], // 21 minutes\n                    ],\n                },\n                this.localKeyPair,\n            );\n        } catch (e) {\n            LOGGER.error(\"Failed to signal\", e);\n        }\n    }\n\n    public async subscribeToSignal(onPayload: (sub: NostrSubscription, payload: any, peerPubkey: string, timestamp: number) => Promise<void>): Promise<NostrSubscription> {\n        const privChannel = `${await this.localKeyPair.getPubKey()}@${await this.channelKeyPair.getPubKey()}`;\n        const pubChannel = `@@${await this.channelKeyPair.getPubKey()}`;\n\n        const sub: NostrSubscription = await this.nostr.subscribeToRelays(\n            this.signalingRelays,\n            [\n                {\n                    kinds: [this.config.rtcSettings.kind],\n                    \"#d\": [privChannel, pubChannel],\n                    since: Math.floor(Date.now() / 1000),\n                },\n            ],\n            async (sub: NostrSubscription, event: SignedNostrEvent) => {\n                try {\n                    const author: string = event.pubkey;\n                    if (author === (await this.localKeyPair.getPubKey())) return;\n\n                    const dtag = String(event.tags.find((tag) => tag[0] === \"d\")?.[1]);\n                    const isPublicChannel: boolean = dtag === pubChannel;\n\n                    const encryptedPayload = event.content;\n                    const decryptedPayload = await this.nostr.decrypt(author, encryptedPayload, isPublicChannel ? this.channelKeyPair : this.localKeyPair);\n                    const payload = JSON.parse(decryptedPayload);\n                    // LOGGER.trace(\"Received from\", author, \"to\", dtag, \"\\n\", payload);\n                    const timestamp = Math.floor(event.created_at ? event.created_at * 1000 : Date.now());\n                    if (timestamp < 0 || isNaN(timestamp)) throw new Error(\"Invalid timestamp\");\n                    onPayload(sub, payload, author, timestamp).catch(console.error);\n                } catch (e) {\n                    LOGGER.error(\"Invalid event\", e);\n                }\n            },\n        );\n\n        return sub;\n    }\n}\n","import { NDKAdapter } from \"../lib/NDKAdapter\";\nimport { NostrRTC } from \"../lib/NostrRTC\";\nimport NDK, { NDKPrivateKeySigner, NDKRelaySet } from \"@nostr-dev-kit/ndk\";\n\nexport default {\n    connect: async (channelPrivateKey: string, relays: string[], privKey?: string, metadata = {}): Promise<NostrRTC> => {\n        const localUser: NDKPrivateKeySigner = privKey ? new NDKPrivateKeySigner(privKey) : NDKPrivateKeySigner.generate();\n        const ndk = new NDK({ explicitRelayUrls: relays });\n        const nostr = new NDKAdapter(ndk);\n        const rtc = new NostrRTC(nostr, relays, channelPrivateKey, metadata);\n        return rtc;\n    },\n};\n"],"names":["root","factory","exports","module","define","amd","self","formatArgs","args","this","useColors","namespace","humanize","diff","c","color","splice","index","lastC","replace","match","save","namespaces","storage","setItem","removeItem","error","load","r","getItem","process","env","DEBUG","window","type","__nwjs","navigator","userAgent","toLowerCase","m","document","documentElement","style","WebkitAppearance","console","firebug","exception","table","parseInt","localStorage","localstorage","destroy","warned","warn","colors","log","debug","formatters","j","v","JSON","stringify","message","createDebug","prevTime","namespacesCache","enabledCache","enableOverride","enabled","curr","Number","Date","ms","prev","coerce","unshift","format","formatter","val","call","apply","selectColor","extend","Object","defineProperty","enumerable","configurable","get","set","init","delimiter","newDebug","matchesTemplate","search","template","searchIndex","templateIndex","starIndex","matchIndex","length","default","Error","stack","disable","names","skips","map","join","enable","split","trim","filter","Boolean","ns","push","slice","name","skip","keys","forEach","key","hash","i","charCodeAt","Math","abs","s","h","d","w","plural","msAbs","n","isPlural","round","options","str","String","exec","parseFloat","parse","isFinite","long","fmtShort","bech32","hex","utf8","DEFAULTNETWORK","pubKeyHash","scriptHash","validWitnessVersions","TESTNETWORK","SIGNETNETWORK","REGTESTNETWORK","SIMNETWORK","FEATUREBIT_ORDER","DIVISORS","BigInt","u","p","MAX_MILLISATS","MILLISATS_PER_BTC","TAGCODES","payment_hash","payment_secret","description","payee","description_hash","expiry","min_final_cltv_expiry","fallback_address","route_hint","feature_bits","metadata","TAGNAMES","currentName","currentCode","toString","TAGPARSERS","words","encode","fromWordsUnsafe","wordsToIntBE","routes","pubkey","shortChannelId","feeBaseMSats","feeProportionalMillionths","cltvExpiryDelta","routesBuffer","short_channel_id","fee_base_msat","fee_proportional_millionths","cltv_expiry_delta","bools","reverse","word","reduce","finalArr","itemArr","concat","featureBits","featureName","status","extraBits","extra_bits","start_bit","bits","has_required","result","bit","getUnknownParser","tagCode","MAX_SAFE_INTEGER","total","item","pow","hrpToMillisat","hrpString","outputString","divisor","value","valueBN","millisatoshisBN","decode","paymentRequest","network","sections","decoded","prefix","letters","sigWords","prefixMatches","bech32Prefix","coinNetwork","undefined","Array","isArray","millisatoshis","timestamp","tagName","parser","tagLength","tagWords","tag","exp","find","getValue","route_hints","section","assertNumber","isSafeInteger","chain","wrap","a","b","from","acc","alphabet","digits","input","letter","indexOf","separator","to","padding","chr","data","end","normalize","fn","convertRadix","pos","res","carry","done","digit","digitBase","floor","bytes","stringToBytes","bytesToString","bech32m","base58check","base58xmr","base58xrp","base58flickr","base58","base64url","base64","base32crockford","base32hex","base32","base16","utils","gcd","radix2carry","convertRadix2","mask","radix","num","Uint8Array","radix2","revPadding","unsafeWrapper","e","checksum","len","payload","newChecksum","oldChecksum","toUpperCase","genBase58","abc","XMR_BLOCK_LEN","block","subarray","padStart","blockLen","sha256","BECH_ALPHABET","POLYMOD_GENERATORS","bech32Polymod","pre","chk","bechChecksum","encodingConst","genBech32","encoding","ENCODING_CONST","_words","fromWords","toWords","limit","TypeError","lowered","sepIndex","lastIndexOf","sum","endsWith","actualLength","decodeToBytes","decodeUnsafe","TextDecoder","TextEncoder","CODERS","coderTypeError","hasOwnProperty","__spreadArray","pack","arguments","ar","l","prototype","EventEmitter","task_collection_1","utils_1","utils_2","emit","event","ev","events","argsNum","arr","emitHasOnce","argsArr","oev","onceEvents","fncs","nullObj","_symbolKeys","Set","maxListeners","Infinity","eventNames","addListener","listener","evtmap","growArgsNum","TaskCollection","add","removeListener","evt","removeLast","evto","_fast_remove_single","on","once","addListenerBound","bindTo","boundFuncs","Map","bound","bind","removeListenerBound","_a","_b","delete","hasListeners","prependListener","insert","prependOnceListener","off","removeAllListeners","setMaxListeners","getMaxListeners","listeners","tasksAsArray","_this","x","keysO","listenerCount","__createBinding","create","o","k","k2","desc","getOwnPropertyDescriptor","__esModule","writable","__exportStar","bakeCollectionVariadic","bakeCollectionAwait","bakeCollection","BAKED_EMPTY_FUNC","FORLOOP_FALLBACK","generateArgsDefCode","numArgs","argsDefCode","generateBodyPartsCode","collectionLength","funcDefCode","funcCallCode","generateBodyPartsVariadicCode","collection","fixedArgsNum","funcFactoryCode","bakeCollection_1","fixedArgsNum_1","bakeCollectionVariadic_1","bakeCollectionAwait_1","funcFactory","eval","bakeCollection_2","fixedArgsNum_2","bakeCollectionVariadic_2","bakeCollectionAwait_2","bakeCollection_3","bakeCollectionVariadic_3","bakeCollectionAwait_3","bake_collection_1","push_norebuild","_tasks","newAr","push_rebuild","firstEmitBuildStrategy","rebuild_on_first_call","rebuild","removeLast_norebuild","removeLast_rebuild","insert_norebuild","func","_i","insert_rebuild","rebuild_noawait","rebuild_await","autoRebuild","initialTasks","awaitTasks","setAutoRebuild","fastClear","clear","newVal","setTasks","tasks","shift","LRUCache","LRUCacheNode_1","constructor","lookupTable","head","tail","maxSize","entryExpirationTimeInMS","onEntryEvicted","onEntryMarkedAsMostRecentlyUsed","cloneFn","clone","isNaN","maxSizeInternal","size","cleanCache","remainingSize","newest","isExpired","removeNodeFromListAndLookupTable","mapNodeToEntry","oldest","enforceSizeLimit","entryOptions","currentNodeForKey","node","LRUCacheNode","setNodeAsHead","peek","has","condition","next","entry","callback","values","entries","Symbol","iterator","removeNodeFromList","invokeOnEntryMarkedAsMostRecentlyUsed","invokeOnEvicted","expiredNodes","defaultClone","internalValue","created","now","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","definition","g","globalThis","Function","obj","prop","toStringTag","number","lengths","includes","exists","instance","checkFinished","destroyed","finished","crypto","u8a","createView","DataView","buffer","byteOffset","byteLength","rotr","Uint32Array","toBytes","utf8ToBytes","Hash","_cloneInto","hashCons","hashC","msg","update","digest","tmp","outputLen","randomBytes","bytesLength","getRandomValues","SHA2","padOffset","isLE","super","view","take","min","dataView","roundClean","digestInto","out","output","fill","setBigUint64","_32n","_u32_max","wh","wl","setUint32","oview","outLen","state","Maj","SHA256_K","IV","SHA256_W","SHA256","A","B","C","D","E","F","G","H","offset","getUint32","W15","W2","s0","s1","T1","T2","_1n","_2n","_","hexToNumber","array","hexByte","byte","numberToBytesBE","numberToBytesLE","title","expectedLength","arrays","pad","bitMask","u8n","u8fr","createHmacDrbg","hashLen","qByteLen","hmacFn","reset","reseed","seed","gen","sl","pred","validatorFns","bigint","function","boolean","string","stringOrUint8Array","field","object","Fp","isValid","validateObject","validators","optValidators","checkField","fieldName","isOptional","checkVal","_3n","_4n","_5n","_8n","power","modulo","pow2","invert","y","q","FIELD_FIELDS","nLength","nBitLength","_nBitLength","nByteLength","ceil","getFieldBytesLength","fieldOrder","bitLength","getMinHashLength","HMAC","_key","iHash","oHash","buf","getPrototypeOf","hmac","validateBasic","curve","ORDER","MASK","BYTES","BITS","Gx","Gy","freeze","b2n","h2b","DER","Err","_parseInt","toSig","sBytes","rBytesLeft","hexFromSig","sig","shl","rhl","rl","weierstrass","curveDef","CURVE","opts","bits2int","bits2int_modN","lowS","validateOpts","CURVE_ORDER","compressedLen","uncompressedLen","modN","invN","ProjectivePoint","Point","normPrivateKeyToScalar","weierstrassEquation","isWithinCurveOrder","allowedPrivateKeyLengths","wrapPrivateKey","isTorsionFree","clearCofactor","allowInfinityPoint","fromBytes","endo","eql","ZERO","beta","splitScalar","validatePointOpts","_c","point","_isCompressed","toAffine","x2","sqr","x3","mul","assertGE","pointPrecomputes","assertPrjPoint","other","px","py","pz","fromAffine","is0","ONE","normalizeZ","points","toInv","invertBatch","fromHex","P","assertValidity","fromPrivateKey","privateKey","BASE","multiply","_setWindowSize","windowSize","_WINDOW_SIZE","left","right","hasEvenY","isOdd","equals","X1","Y1","Z1","X2","Y2","Z2","U1","U2","negate","neg","double","b3","X3","Y3","Z3","t0","t1","t2","t3","sub","t4","t5","subtract","wNAF","wnaf","wNAFCached","comp","multiplyUnsafe","I","unsafeLadder","k1neg","k1","k2neg","k1p","k2p","scalar","fake","f","f1p","f2p","constTimeNegate","multiplyAndAddUnsafe","Q","iz","z","inv","ax","ay","zz","cofactor","toRawBytes","isCompressed","toHex","_bits","W","windows","elm","precomputeWindow","base","precomputes","maxNumber","shiftBy","wbits","offset1","offset2","cond1","cond2","precomputesMap","transform","weierstrassPoints","cat","isValidFieldElement","y2","sqrt","numToNByteStr","isBiggerThanHalfOrder","slcNum","Signature","recovery","fromCompact","fromDER","addRecoveryBit","recoverPublicKey","msgHash","rec","radj","R","ir","u1","u2","hasHighS","normalizeS","toDERRawBytes","toDERHex","toCompactRawBytes","toCompactHex","isValidPrivateKey","randomPrivateKey","fieldLen","minLen","reduced","precompute","isProbPub","delta","ORDER_MASK","int2octets","defaultSigOpts","prehash","defaultVerOpts","getPublicKey","getSharedSecret","privateA","publicB","sign","privKey","k2sig","some","extraEntropy","ent","h1int","seedArgs","kBytes","ik","normS","prepSig","drbg","verify","signature","publicKey","sg","_sig","derError","is","getHash","msgs","concatBytes","secp256k1P","secp256k1N","divNearest","sqrtMod","_6n","_11n","_22n","_23n","_44n","_88n","b2","b6","b9","b11","b22","b44","b88","b176","b220","b223","bitLen","redef","sqrtP","p1div4","c1","n2","nv","legendreC","S","Z","Q1div2","ge","tonelliShanks","FpSqrt","lhs","rhs","FpPow","div","sqrN","addN","subN","mulN","lst","nums","lastMultiplied","inverted","reduceRight","FpInvertBatch","cmov","Field","secp256k1","defHash","createCurve","a1","b1","a2","POW_2_128","c2","fe","TAGGED_HASH_PREFIXES","taggedHash","messages","tagP","tagH","pointToBytes","numTo32b","modP","schnorrGetExtPubKey","priv","d_","lift_x","xx","challenge","schnorrGetPublicKey","schnorrSign","auxRand","t","rand","k_","rx","schnorrVerify","pub","schnorr","bytesToNumberBE","mod","bool","isBytes","wrapCipher","params","assign","BLOCK_SIZE","ZEROS16","ZEROS32","swapLE","GHASH","s2","s3","kView","k0","k3","doubles","estimateWindow","items","d0","d1","d2","d3","_updateBlock","o0","o1","o2","o3","bytePos","bitPos","e0","e1","e2","e3","b32","blocks","o32","Polyval","ghKey","hiBit","_toGHASHKey","wrapConstructorWithKey","ghash","polyval","EMPTY_BLOCK","sbox","box","invSbox","rotl32_8","genTtable","T0","T3","T01","T23","sbox2","Uint16Array","idx","tableEncoding","tableDecoding","xPowers","expandKeyLE","k32","Nk","subByte","applySbox","xk","expandKeyDecLE","encKey","apply0123","encrypt","rounds","decrypt","getDst","dst","ctr32","nonce","src","ctr","c32","src32","dst32","ctrPos","srcLen","ctrNum","start","validateBlockDecrypt","validateBlockEncrypt","plaintext","pcks5","remaining","validatePCKS","lastByte","padPCKS","tmp32","paddingByte","blockSize","nonceLength","processCtr","ctrCounter","ciphertext","disablePadding","_out","cbc","iv","n32","ps0","ps1","ps2","ps3","computeTag","AAD","processCfb","isEncrypt","next32","_computeTag","authKey","tagMask","deriveKeys","counter","nonceLen","passedTag","max","AAD_LIMIT","PLAIN_LIMIT","NONCE_LIMIT","CIPHER_LIMIT","derivedKey","d32","t32","processSiv","expectedTag","u8to16","Poly1305","t6","t7","isLast","hibit","r0","r1","r2","r3","r4","r5","r6","r7","r8","r9","h0","h1","h2","h3","h4","h5","h6","h7","h8","h9","d4","d5","d6","d7","d8","d9","finalize","opos","poly1305","_utf8ToBytes","sigma16","sigma32","sigma16_32","sigma32_32","rotl","isAligned32","MAX_COUNTER","U32_EMPTY","createCipher","core","allowShortKeys","extendNonceFn","counterLength","counterRight","defaults","toClean","sigma","nonceNcLen","nc","isAligned","pos32","posj","runCipher","pop","chachaCore","cnt","y00","y01","y02","y03","y04","y05","y06","y07","y08","y09","y10","y11","y12","y13","y14","y15","x00","x01","x02","x03","x04","x05","x06","x07","x08","x09","x10","x11","x12","x13","x14","x15","oi","chacha20","xchacha20","updatePadded","_poly1305_aead","xorStream","plength","clength","HKDF_COUNTER","EMPTY_BUFFER","__defProp","__export","target","all","verifiedSymbol","validateEvent","kind","content","created_at","tags","i2","Queue","QueueNode","binarySearch","insertEventIntoAscendingList","insertEventIntoDescendingList","normalizeURL","utf8Decoder","utf8Encoder","url","URL","pathname","port","protocol","searchParams","sort","sortedArray","found","id","compare","mid","cmp","first","last","enqueue","newNode","dequeue","target2","getEventHash","serializeEvent","generateSecretKey","secretKey","finalizeEvent","verifyEvent","valid","err","isRegularKind","isReplaceableKind","isEphemeralKind","isParameterizedReplaceableKind","classifyKind","isKind","kindAsArray","Application","BadgeAward","BadgeDefinition","BlockedRelaysList","BookmarkList","Bookmarksets","Calendar","CalendarEventRSVP","ChannelCreation","ChannelHideMessage","ChannelMessage","ChannelMetadata","ChannelMuteUser","ClassifiedListing","ClientAuth","CommunitiesList","CommunityDefinition","CommunityPostApproval","Contacts","CreateOrUpdateProduct","CreateOrUpdateStall","Curationsets","Date2","DirectMessageRelaysList","DraftClassifiedListing","DraftLong","Emojisets","EncryptedDirectMessage","EventDeletion","FileMetadata","FileServerPreference","Followsets","GenericRepost","Genericlists","GiftWrap","HTTPAuth","Handlerinformation","Handlerrecommendation","Highlights","InterestsList","Interestsets","JobFeedback","JobRequest","JobResult","Label","LightningPubRPC","LiveChatMessage","LiveEvent","LongFormArticle","Metadata","Mutelist","NWCWalletInfo","NWCWalletRequest","NWCWalletResponse","NostrConnect","OpenTimestamps","Pinlist","PrivateDirectMessage","ProblemTracker","ProfileBadges","PublicChatsList","Reaction","RecommendRelay","RelayList","Relaysets","Report","Reporting","Repost","Seal","SearchRelaysList","ShortTextNote","Time","UserEmojiList","UserStatuses","Zap","ZapGoal","ZapRequest","matchFilter","ids","kinds","authors","since","until","matchFilters","filters","getHex64","json","getInt","sliced","getSubscriptionId","pstart","pend","matchEventId","matchEventPubkey","matchEventKind","makeAuthEvent","relayURL","WebSocket","nip19_exports","BECH32_REGEX","Bech32MaxSize","NostrTypeGuard","encodeBytes","naddrEncode","neventEncode","noteEncode","nprofileEncode","npubEncode","nsecEncode","isNProfile","test","isNEvent","isNAddr","isNSec","isNPub","isNote","isNcryptsec","nip19","tlv","parseTLV","relays","author","identifier","rest","encodeBech32","profile","encodeTLV","kindArray","uint8Array","integerToUint8Array","addr","ArrayBuffer","vs","nip04_exports","async","text","privkey","normalizedKey","getNormalizedX","ctb64","ivb64","NIP05_REGEX","isNip05","queryProfile","searchDomain","useFetchImplementation","_fetch","fetch","fetchImplementation","domain","query","redirect","fullname","_e","nip05","reply","mentions","profiles","quotes","maybeParent","maybeRoot","eTagEventId","eTagRelayUrl","eTagMarker","eTagAuthor","eventPointer","ref","fetchRelayInformation","useFetchImplementation2","headers","Accept","getPow","count","nibble","substring","clz32","minePow","unsigned","difficulty","now2","getTime","fastEventHash","finishRepostEvent","reposted","relayUrl","getRepostedEventPointer","lastETag","lastPTag","getRepostedEvent","skipVerification","pointer","repostedEvent","NOSTR_URI_REGEX","parse2","RegExp","source","uri","finishReactionEvent","reacted","inheritedTags","getReactedEventPointer","matchAll","regex","replaceAll","matches","replacer","channelCreateEvent","channelHideMessageEvent","channelMessageEvent","channelMetadataEvent","channelMuteUserEvent","channel_create_event_id","relay_url","reply_to_channel_message_event_id","channel_message_event_id","pubkey_to_mute","EMOJI_SHORTCODE_REGEX","matchAll2","regex2","replaceAll2","_fetch3","shortcode","useFetchImplementation3","validateGithub","username","proof","nip44_exports","decrypt2","encrypt2","getConversationKey","v2","minPlaintextSize","maxPlaintextSize","privkeyA","pubkeyB","sharedX","ikm","salt","getMessageKeys","conversationKey","prk","info","okm","HMACTmp","T","chacha_key","chacha_nonce","hmac_key","calcPaddedLen","nextPower","log2","chunk","hmacAad","aad","combined","padded","unpadded","unpaddedLen","setUint16","writeU16BE","mac","plen","dlen","vers","decodePayload","getUint16","unpad","parseConnectionString","connectionString","relay","secret","makeNwcRequestEvent","invoice","method","encryptedContent","eventTemplate","_fetch4","getZapEndpoint","makeZapReceipt","makeZapRequest","useFetchImplementation4","validateZapRequest","lnurl","lud06","lud16","body","allowsNostr","nostrPubkey","amount","comment","zr","zapRequestString","zapRequest","preimage","bolt11","paidAt","tagsFromZapRequest","zap","createRumor","createSeal","createWrap","unwrapEvent","unwrapManyEvents","wrapEvent","wrapManyEvents","randomNow","random","nip44ConversationKey","nip44Encrypt","nip44Decrypt","rumor","recipientPublicKey","seal","randomKey","senderPrivateKey","recipientsPublicKeys","senderPublicKey","wrappeds","recipientPrivateKey","unwrappedSeal","wrappedEvents","unwrappedEvents","getToken","hashPayload","unpackEventFromToken","validateEvent2","validateEventKind","validateEventMethodTag","validateEventPayloadTag","validateEventTimestamp","validateEventUrlTag","validateToken","_authorizationScheme","loginUrl","httpMethod","includeAuthorizationScheme","signedEvent","token","catch","eventB64","startsWith","urlTag","methodTag","payloadTag","payloadHash","anumber","isView","aexists","ch","HashMD","aoutput","SHA256_IV","ahash","abool","_0","_9","hl","al","ai","hi","n1","char","isPosBig","inRange","aInRange","memoized","WeakMap","arg","computed","validateW","calcWOpts","pointWindowSizes","getW","validateSigVerOpts","DERErr","_tlv","dataLen","lenLen","lengthBytes","_int","int","seqBytes","seqLeftBytes","rBytes","rLeftBytes","sLeftBytes","seq","Fn","N","toAffineMemo","assertValidMemo","msm","scalars","fieldN","validateMSMPoints","validateMSMScalars","zero","buckets","resI","sumI","pippenger","setWindowSize","sc","hasPrecomputes","wNAFCachedUnsafe","wNAFUnsafe","getPrecomputes","sqrtError","suffix","isHex","isObj","Fpk1","isArrayOf","isString","every","afn","astr","label","aArr","astrArr","anumArr","lettersA","indexes","fromCarry","rounded","powers","slen","encodeFromBytes","getRelaysForSync","ndk","outboxTracker","writeRelays","readRelays","chooseRelayCombinationForPubkeys","pubkeys","preferredRelays","pool","connectedRelays","relayToAuthorsMap","pubkeysToRelays","authorsMissingRelays","getAllRelaysForAllPubkeys","sortedRelays","relaysWithCount","getTopRelaysForAuthors","addAuthorToRelay","authorsInRelay","authorRelays","missingRelayCount","authorRelay","permanentAndConnectedRelays","tryNormalizeRelayUrl","normalizeRelayUrl","urlString","defaultProtocol","normalizeProtocol","forceHttp","forceHttps","stripAuthentication","stripHash","stripTextFragment","stripWWW","removeQueryParameters","removeTrailingSlash","removeSingleSlash","removeDirectoryIndex","removeExplicitPort","sortQueryParameters","normalizeDataURL","hasCustomProtocol","hasRelativeProtocol","urlObject","password","protocolRegex","lastIndex","protocolAtIndex","decodeURI","pathComponents","lastComponent","testParameter","hostname","keepQueryParameters","decodeURIComponent","oldUrlString","stripProtocol","normalizeUrl","urls","normalized","supportedProtocols","groups","mediaType","isBase64","mimeType","normalizedMediaType","attribute","NDKPublishError","errors","publishedToRelays","intendedRelaySet","relayErrors","NDKRelaySet","_NDKRelaySet","addRelay","relayUrls","fromRelayUrls","connect","temporaryRelay","NDKRelay","relayAuthDefaultPolicy","useTemporaryRelay","publish","timeoutMs","requiredRelayCount","isEphemeral2","isEphemeral","publishStatus","promises","Promise","resolve","then","publishError","relaySet","calculateRelaySetsFromFilters","authorToRelaysMap","relayGoalPerAuthor","getRelaysForFilterWithAuthors","authors2","authorFilterAndRelayPubkeyIntersection","explicitRelayUrls","calculateRelaySetsFromFilter","maybeGetEventRelayUrl","nip19Id","isReplaceable","isParamReplaceable","worker","DEFAULT_ENCRYPTION_SCHEME","recipient","signer","assertSigner","pTags","getMatchingTags","getUser","sender","maxRelayCount","onRelays","replaceableDTag","tagId","repost","NDKEvent","rawEvent","eventHasETagMarkers","fetchTaggedEvent","marker","hint","fetchEvent","fetchRootEvent","subOpts","rootTag","searchTag","tagType","rootEventTag","matchingTags","getRootTag","fetchEventFromTag","fetchReplyEvent","replyTag","getReplyTag","serialize","includeSig","includeId","processingQueue","PUBKEY_REGEX","verifiedSignatures","verifySignature","persist","signatureVerified","prevVerification","asyncSigVerification","serialized","resolves","postMessage","verifySignatureAsync","serializedEvent","skipClientTagOnKinds","_NDKEvent","_author","subManager","seenEvents","seenEvent","deserialize","eventArray","ret","user","tagExternal","entity","markerUrl","iTag","kTag","host","skipAuthorTag","forceTag","fetchProfile","referenceTags","pTag","tags1","tags2","tagMap","isContained","smaller","larger","existingTag","generateKey","mergeTags","toNostrEvent","generateTags","validate","hasTag","tagValue","alt","removeTag","dTag","tagNames","nostrEvent","publishReplaceable","devWriteRelaySet","authorWriteRelays","trackUsers","getWriteRelaysFor","getRelay","relayHints","calculateRelaySetFromEvent","cacheAdapter","deleteEventIds","eTags","addUnpublishedEvent","dispatchEvent","addTagIfNew","generateContentTags","shouldAddClientTag","clientTag","clientName","clientNip89","muted","authorMutedEntry","mutedIds","eventTagReference","tagReference","eventMutedEntry","deduplicationKey","tagAddress","dTagId","reason","react","carryOverTags","rootTags","rootKind","extra","relayHint","uppercaseTag","NDKRelayConnectivity","ndkRelay","ws","_status","connectedAt","_connectionStats","attempts","success","durations","netDebug","connectTimeout","reconnectTimeout","openSubs","openCountRequests","openEventPublishes","serial","baseEoseTimeout","reconnect","clearTimeout","setTimeout","onConnectionError","updateConnectionStats","attempt","onopen","onConnect","onclose","onDisconnect","onmessage","onMessage","onerror","onError","handleReconnection","disconnect","close","connected","disconnected","cmd","so","event2","onevent","cr","oneose","ok","ep","firstEp","reject","onclosed","onNotice","onAuthRequested","authPolicy","havePolicy","auth","authenticate","isAvailable","isFlapping","avg","variance","notice","reconnectDelay","nextReconnectAt","send","readyState","OPEN","subId","req","relaySub","executeFilters","connectionStats","NDKRelayPublisher","timeout","publishConnected","publishEvent","timeoutPromise","onConnectHandler","connectResolve","connectReject","onFinally","race","finally","connectivity","lastResult","filterWithLimit","NDKRelaySubscription","fingerprint","topSubManager","onClose","eosed","executionTimer","fireTime","delayType","_subId","subIdParts","addSubIdPart","part","addItem","subscription","internalId","itemsSize","evaluateExecutionPlan","cleanup","prevStatus","executeOnRelayReady","reExecuteAfterAuth","isGroupable","execute","compileFilters","delay","groupableDelay","groupableDelayType","schedule","existingDelayType","timeUntilFire","currentTime","timer","finalizeSubId","oldSubId","onstart","eoseReceived","closeOnEose","closedReceived","mergedFilters","filterCount","allFiltersAtIndex","NDKRelaySubscriptionManager","subscriptions","generalSubManager","addSubscription","filterFp","elements","filterFingerprint","sub2","createSubscription","onRelaySubscriptionClose","currentVal","_NDKRelay","scores","subs","publisher","lowestValidationRatio","targetValidationRatio","validationRatioFn","validatedEventCount","nonValidatedEventCount","trusted","complaining","static","validatedCount","nonValidatedCount","newRatio","validationRatio","factor","initialValidationRatio","defaultValidationRatioUpdateFn","updateValidationRatio","trace","subscribe","addValidatedEvent","addNonValidatedEvent","shouldValidateEvent","NDKPool","_relays","autoConnectRelays","blacklistRelayUrls","temporaryRelayTimers","flappingRelays","backoffTimes","blacklistedRelayUrls","debug8","removeIfUnusedAfter","relayAlreadyInPool","existingTimer","removeRelay","isAlreadyInPool","isBlacklisted","isCustomRelayUrl","getRelayStatus","dontConnectBefore","noticeHandler","connectHandler","handleRelayConnect","readyHandler","handleRelayReady","disconnectHandler","flappingHandler","handleFlapping","authHandler","authedHandler","updateRelayStatus","isRelayConnected","normalizedUrl","temporary","stats","relaysToConnect","connectPromise","allConnected","someConnected","checkOnFlappingRelays","currentBackoff","connecting","queryFullyFilled","eventFirstSeen","resultHasAllRequestedIds","filterFromId","NIP33_A_REGEX","filter2","defaultOpts","cacheUsage","groupable","NDKSubscription","skipValidation","relayFilters","eosesSeen","lastEventReceivedAt","poolMonitor","skipOptimisticPublishEvent","relaysMissingEose","shouldQueryCache","shouldQueryRelays","shouldWaitForCache","locking","cachePromise","startWithCache","startWithRelays","startPoolMonitor","onStopped","stop","hasAuthorsFilter","promise","eventReceived","fromCache","optimisticPublish","eventId","eventAlreadySeen","ndkEvent","timeSinceFirstSeen","setEvent","eoseTimeout","lastEventSeen","hasSeenAllEoses","queryFilled","performEose","timeToWaitForNextEose","connectedRelaysWithFilters","percentageOfRelaysThatHaveSentEose","seen","sendEoseTimeout","follows","outbox","contactListEvent","NDKUser","profileFromEvent","profileEvent","displayName","display_name","image","picture","banner","bio","about","zapService","website","serializeProfile","getNip05For","fetchOpts","queuesNip05","loadNip05","nip46Urls","nip46","cache","parseNIP05Result","saveNip05","NDKCashuMintList","_NDKCashuMintList","_p2pk","mints","p2pk","getNip57ZapSpecFromLud","zapEndpoint","httpFetch","response","_NDKUser","_npub","_pubkey","npub","hexpubkey","nprofile","getZapInfo","getAll","methods","fetchEvents","nip61","nip572","mintList","zapSpec","getZapConfiguration","queuesZapConfig","loadUsersLNURLDoc","doc","lnurlspec","saveUsersLNURLDoc","getZapperPubkey","zapConfig","fromNip05","nip05Id","skipCache","storeProfileEvent","setMetadataEvents","sortedSetMetadataEvents","saveProfile","followSet","follows2","follow","newFollow","currentFollowList","unfollow","newUserFollowList","foundUser","validateNip05","profilePointer","lists_default","_NDKList","_encryptedTags","encryptedTagsLength","isEncryptedTagsCacheValid","encryptedTags","useCache","decryptedContent","validateTag","getItems","mark","encrypted","position","currentList","removeItemByValue","findIndex","encryptedIndex","filterForItems","nip33Queries","READ_MARKER","WRITE_MARKER","NDKRelayList","_NDKRelayList","readRelayUrls","writeRelayUrls","bothRelayUrls","relayListFromKind3","contactList","relayList","config","relayConfig","write","read","_NDKNutzap","_proofs","proofTags","proofs","firstProof","mint","unit","recipientPubkey","pTagCount","mintTagCount","signAndAuth","NDKRelayAuthPolicies","signer2","NDKPrivateKeySigner","_NDKPrivateKeySigner","_user","_privateKey","generate","blockUntilReady","recipientHexPubKey","nip04Encrypt","nip04Decrypt","senderHexPubKey","getRelayListForUsers","outboxPool","relayLists","fromContactList","cachedList","list","relayListEvents","contactListEvents","existingEvent","OutboxItem","relayUrlScores","OutboxTracker","getKeyFromItem","outboxItem","track","getTypeFromItem","isValidHint","originalEvent","fallback","relaySet2","fetchMaybeWithRelayHint","fallbackFetchPromise","fallbackRelaySet","resolve2","Nip96","spec","nip98Required","prepareUpload","blob","httpVerb","validateHttpFetch","fetchSpec","Authorization","generateNip98Header","api_url","xhrUpload","xhr","open","setRequestHeader","formData","FormData","append","onload","responseText","statusText","upload","plans","free","is_nip98_required","requestUrl","sha256Hash","calculateSha256","btoa","arrayBuffer","hashBuffer","subtle","queue","maxConcurrency","processing","clearProcessing","clearAll","NDKSubscriptionManager","current","filterMatchingTime","filterMatchingCount","matchingSubs","debug6","getUserRelayList","autoConnectUserRelays","userRelays","getRelayListForUser","setActiveUser","setActiveUserConnected","autoFetchUserMutelist","prevEvent","processEvent","processBlockRelayList","processMuteList","muteList","DEFAULT_OUTBOX_RELAYS","DEFAULT_BLACKLISTED_RELAYS","NDK","_explicitRelayUrls","_signer","_activeUser","publishingFailureHandled","walletConfig","enableOutboxModel","outboxRelayUrls","devWriteRelayUrls","signatureVerificationWorker","worker2","record","addExplicitRelay","urlOrRelay","relayAuthPolicy","toJSON","relayCount","activeUser","differentUser","newSigner","connections","allSettled","getUserFromNip05","autoStart","flat","idOrFilter","relaySetOrRelay","bech322","relaysFromBech32","correctRelaySet","fetchedEvent","relaySetSubscription","dedupKey","event1","getNip96","wallet","lnPay","cashuPay","isBrowser","LogLevel","ConsoleLogAttachment","level","logger","date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","ERROR","WARN","INFO","JSONLogAttachment","endpoint","serializedObject","logLevelStr","endPoint","href","createdAt","toISOString","Logger","globalTags","attachments","groupTags","addAttachment","attachment","group","groupEnd","fork","logLazy","_log","TRACE","fatal","FATAL","debugLazy","traceLazy","infoLazy","warnLazy","errorLazy","fatalLazy","globalLoggerTags","globalLoggerConfig","getLogger","httpEndpoint","LOGGER","NDKAdapter","signers","getInfo","httpRelayUrl","getSigner","keyPair","publishToRelays","signerKeyPair","ndkEventTemplate","rs","subscribeToRelays","onEvent","onEose","ndkFilters","ndkFilter","ndkSub","senderKeyPair","recipientUser","receiverKeyPair","senderUser","newKeyPair","localUser","getPubKey","rnds8","rng","byteToHex","_state","v7Bytes","rnds","msecs","RangeError","updateV7State","unsafeStringify","announceInterval","peerExpiration","gcInterval","connectionAttemptTimeout","p2pAttemptTimeout","ConnectionStatus","NostrRTCPeer","localIceCandidates","connectionId","rtcConnection","settings","channel","stopped","lastStatusUpdate","candidateEmissionTimeout","candidateEmissionLoop","isChannelReady","_useTURN","ready","turn","stunServers","setStatus","RTCPeerConnection","switchTOTurn","useTURN","iceServers","ondatachannel","initDataChannel","emitCandidates","onicecandidate","updated","candidate","oniceconnectionstatechange","iceConnectionState","setInterval","markReady","getStatus","getConnectionId","getLocalIceCandidates","onOpen","binaryType","addEventListener","removeEventListener","createDataChannel","offer","createOffer","setLocalDescription","sdp","setRemoteDescription","RTCSessionDescription","answer","createAnswer","addRemoteIceCandidates","candidates","addIceCandidate","clearInterval","getChannel","setTURN","peer","isTURN","zero$1","extra_lbits","extra_dbits","extra_blbits","bl_order","static_ltree","static_dtree","D_CODES$1","_dist_code","_length_code","MAX_MATCH$1","base_length","base_dist","StaticTreeDesc","static_tree","extra_base","elems","max_length","has_stree","static_l_desc","static_d_desc","static_bl_desc","TreeDesc","dyn_tree","stat_desc","max_code","d_code","dist","put_short","pending_buf","pending","send_bits","bi_valid","bi_buf","send_code","tree","bi_reverse","code","gen_codes","bl_count","next_code","MAX_BITS$1","init_block","LITERALS$1","dyn_ltree","dyn_dtree","bl_tree","END_BLOCK","opt_len","static_len","sym_next","bi_windup","depth","_n2","_m2","pqdownheap","heap","heap_len","compress_block","ltree","dtree","lc","sx","sym_buf","build_tree","stree","heap_max","xbits","overflow","gen_bitlen","scan_tree","curlen","prevlen","nextlen","max_count","min_count","REP_3_6","REPZ_3_10","REPZ_11_138","send_tree","static_init_done","_tr_stored_block$1","stored_len","trees","_tr_init","LENGTH_CODES$1","L_CODES$1","tr_static_init","l_desc","d_desc","bl_desc","_tr_stored_block","_tr_flush_block","opt_lenb","static_lenb","max_blindex","strm","data_type","block_mask","detect_data_type","BL_CODES$1","build_bl_tree","strategy","lcodes","dcodes","blcodes","rank","send_all_trees","_tr_tally","sym_end","_tr_align","STATIC_TREES","bi_flush","adler32_1","adler","crcTable","makeTable","crc32_1","crc","constants$2","Z_NO_FLUSH","Z_PARTIAL_FLUSH","Z_SYNC_FLUSH","Z_FULL_FLUSH","Z_FINISH","Z_BLOCK","Z_TREES","Z_OK","Z_STREAM_END","Z_NEED_DICT","Z_ERRNO","Z_STREAM_ERROR","Z_DATA_ERROR","Z_MEM_ERROR","Z_BUF_ERROR","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","Z_DEFAULT_COMPRESSION","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_DEFAULT_STRATEGY","Z_BINARY","Z_TEXT","Z_UNKNOWN","Z_DEFLATED","Z_NO_FLUSH$2","Z_FULL_FLUSH$1","Z_FINISH$3","Z_BLOCK$1","Z_OK$3","Z_STREAM_END$3","Z_STREAM_ERROR$2","Z_DATA_ERROR$2","Z_BUF_ERROR$1","Z_DEFAULT_COMPRESSION$1","Z_DEFAULT_STRATEGY$1","Z_DEFLATED$2","MAX_MATCH","MIN_LOOKAHEAD","INIT_STATE","BUSY_STATE","FINISH_STATE","errorCode","slide_hash","wsize","w_size","hash_size","HASH","hash_shift","hash_mask","flush_pending","avail_out","pending_out","next_out","total_out","flush_block_only","block_start","strstart","put_byte","putShortMSB","read_buf","avail_in","next_in","total_in","longest_match","cur_match","chain_length","max_chain_length","scan","best_len","prev_length","nice_match","_win","wmask","w_mask","strend","scan_end1","scan_end","good_match","lookahead","match_start","fill_window","_w_size","more","window_size","ins_h","deflate_stored","flush","have","min_block","pending_buf_size","used","high_water","deflate_fast","hash_head","bflush","match_length","max_lazy_match","MIN_MATCH","deflate_slow","max_insert","prev_match","match_available","Config","good_length","max_lazy","nice_length","max_chain","configuration_table","DeflateState","gzhead","gzindex","last_flush","w_bits","hash_bits","HEAP_SIZE","MAX_BITS","lit_bufsize","deflateStateCheck","deflateResetKeep","deflateReset","deflateInit2","windowBits","memLevel","deflate_1$2","old_flush","header","level_flags","hcrc","time","os","beg","copy","gzhead_extra","bstate","deflate_huff","deflate_rle","dictionary","dictLength","tmpDict","avail","_has","common","sources","chunks","STR_APPLY_UIA_OK","fromCharCode","__","_utf8len","strings","m_pos","str_len","buf_len","utf16buf","c_len","buf2binstring","zstream","toString$1","Z_NO_FLUSH$1","Z_FINISH$2","Z_OK$2","Z_STREAM_END$2","Z_DEFLATED$1","Deflate$1","chunkSize","opt","raw","gzip","ended","dict","_dict_set","deflate$1","deflator","flush_mode","_flush_mode","onData","onEnd","deflate_1$1","Deflate","deflate","deflateRaw","constants","BAD$1","inffast","_in","dmax","whave","wnext","s_window","hold","lcode","dcode","lmask","dmask","here","op","from_source","lencode","distcode","lenbits","distbits","top","dolen","mode","sane","lbase","lext","dbase","dext","inftrees","lens","lens_index","codes","table_index","work","incr","low","sym","drop","huff","MAXBITS","offs","here_bits","here_op","here_val","Z_FINISH$1","Z_OK$1","Z_STREAM_END$1","Z_NEED_DICT$1","Z_STREAM_ERROR$1","Z_DATA_ERROR$1","Z_MEM_ERROR$1","HEAD","DICT","TYPE","TYPEDO","COPY_","LEN_","LEN","CHECK","BAD","zswap32","InflateState","havedict","flags","check","ncode","nlen","ndist","lendyn","distdyn","back","was","inflateStateCheck","inflateResetKeep","Int32Array","inflateReset","inflateReset2","inflateInit2","lenfix","distfix","virgin","fixedtables","updatewindow","inflate_1$2","put","last_bits","last_op","last_val","hbuf","order","inf_leave","xflags","extra_len","dictid","gzheader","Inflate$1","inflate$1","inflator","last_avail_out","next_out_utf8","utf8str","inflate_1$1","Inflate","inflate","inflateRaw","ungzip","pako","chunkLength","packetTimeout","maxLatency","loopInterval","NostrTURN","localPeer","remotePeer","nostr","packetCounter","outQueue","inPacket","loopTimeout","outQueueNotify","localKeyPair","turnRelays","packet","onReceivedPacket","ack","onReceivedAck","loop","b64data","packetId","chunkLen","chunkCount","sent","lastAttempt","consume","chunkId","nChunks","packets","nextPacket","SubChannelPrefixes","PeerInfo","_lastSeen","lastSeen","NostrRTC","discoveredPeers","banlist","channelKeyPair","signalingRelays","announceTimeout","gcTimeout","autoconnectTimeout","channelKey","rtcSettings","turnSettings","useRelaysTurn","useRelaysStun","localKey","setMetadata","getMetadata","getTurnRelays","getStunServers","getSignalingRelays","getChannelKeyPair","getLocalKeyPair","getNostrAdapter","subscribeToSignal","peerPubkey","announce","onPeerDiscovery","onIncomingPeerConnection","connectAck","onIncomingPeerAck","onIceCandidates","stun","announceLoop","gcLoop","autoconnectLoop","p1","p2","localeCompare","waitList","connection","getAnnounce","signal","unban","discoveredPeer","conn","RTCIceCandidate","remoteDescription","ban","discoveredIndex","getConnection","getPeerInfo","listPeers","encryptedPayload","onPayload","privChannel","pubChannel","isPublicChannel","decryptedPayload","channelPrivateKey"],"sourceRoot":""}